--- a/net/minecraft/loot/LootTableManager.java
+++ b/net/minecraft/loot/LootTableManager.java
@@ -24,6 +_,18 @@
       this.predicateManager = p_i225887_1_;
    }
 
+   // LoliServer start
+   public ResourceLocation getKey(LootTable loot) {
+      ResourceLocation resourceLocation = ResourceLocation.tryParse("");
+      for (Map.Entry<ResourceLocation, LootTable> tableEntry : tables.entrySet()) {
+         if (loot.equals(tableEntry.getValue())) {
+            resourceLocation = tableEntry.getKey();
+         }
+      }
+      return resourceLocation;
+   }
+   // LoliServer end
+
    public LootTable get(ResourceLocation p_186521_1_) {
       return this.tables.getOrDefault(p_186521_1_, LootTable.EMPTY);
    }
@@ -36,8 +_,8 @@
       }
 
       p_212853_1_.forEach((p_237403_1_, p_237403_2_) -> {
-         try {
-            LootTable loottable = GSON.fromJson(p_237403_2_, LootTable.class);
+         try (net.minecraft.resources.IResource res = p_212853_2_.getResource(getPreparedPath(p_237403_1_));){
+            LootTable loottable = net.minecraftforge.common.ForgeHooks.loadLootTable(GSON, p_237403_1_, p_237403_2_, res == null || !res.getSourceName().equals("Default"), this);
             builder.put(p_237403_1_, loottable);
          } catch (Exception exception) {
             LOGGER.error("Couldn't parse loot table {}", p_237403_1_, exception);
