--- a/net/minecraft/block/TrapDoorBlock.java
+++ b/net/minecraft/block/TrapDoorBlock.java
@@ -22,6 +_,7 @@
 import net.minecraft.world.IBlockReader;
 import net.minecraft.world.IWorld;
 import net.minecraft.world.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class TrapDoorBlock extends HorizontalBlock implements IWaterLoggable {
    public static final BooleanProperty OPEN = BlockStateProperties.OPEN;
@@ -101,7 +_,38 @@
       if (!p_220069_2_.isClientSide) {
          boolean flag = p_220069_2_.hasNeighborSignal(p_220069_3_);
          if (flag != p_220069_1_.getValue(POWERED)) {
-            if (p_220069_1_.getValue(OPEN) != flag) {
+            // CraftBukkit start
+            org.bukkit.World bworld = p_220069_2_.getWorld();
+            org.bukkit.block.Block bblock = bworld.getBlockAt(p_220069_3_.getX(), p_220069_3_.getY(), p_220069_3_.getZ());
+            int power = bblock.getBlockPower();
+            int oldPower = (Boolean) p_220069_1_.getValue(OPEN) ? 15 : 0;
+            if (oldPower == 0 ^ power == 0 || p_220069_4_.defaultBlockState().isSignalSource()) {
+               BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(bblock, oldPower, power);
+               p_220069_2_.getCBServer().getPluginManager().callEvent(eventRedstone);
+               flag = eventRedstone.getNewCurrent() > 0;
+            }
+            // CraftBukkit end
+            // CatServer - From Paper 1.19.2 - https://github.com/PaperMC/paper/commit/4f9575eed827007f31ce17da471820fe8bc14573
+            boolean open = (Boolean) p_220069_1_.getValue(TrapDoorBlock.OPEN) != flag; // Paper - break redstone on trapdoors early
+            // Paper start - break redstone on trapdoors early
+            // note: this must run before any state for this block/its neighborus are written to the world
+            // we allow the redstone event to fire so that plugins can block
+            if (flag && open) { // if we are now powered and it caused the trap door to open
+               // in this case, first check for the redstone on top first
+               BlockPos abovePos = p_220069_3_.above();
+               BlockState above = p_220069_2_.getBlockState(abovePos);
+               if (above.getBlock() instanceof RedstoneWireBlock) {
+                  p_220069_2_.setBlock(abovePos, Blocks.AIR.defaultBlockState(), /* Block.UPDATE_CLIENTS | Block.UPDATE_NEIGHBORS */ 3);
+                  Block.popResource(p_220069_2_, abovePos, new net.minecraft.item.ItemStack(net.minecraft.item.Items.REDSTONE));
+                  // now check that this didn't change our state
+                  if (p_220069_2_.getBlockState(p_220069_3_) != p_220069_1_) {
+                     // our state was changed, so we cannot propagate this update
+                     return;
+                  }
+               }
+            }
+            // Paper end - break redstone on trapdoors early
+            if (open) { // Paper - break redstone on trapdoors early
                p_220069_1_ = p_220069_1_.setValue(OPEN, Boolean.valueOf(flag));
                this.playSound((PlayerEntity)null, p_220069_2_, p_220069_3_, flag);
             }
@@ -147,4 +_,17 @@
 
       return super.updateShape(p_196271_1_, p_196271_2_, p_196271_3_, p_196271_4_, p_196271_5_, p_196271_6_);
    }
+
+   //Forge Start
+   @Override
+   public boolean isLadder(BlockState state, net.minecraft.world.IWorldReader world, BlockPos pos, net.minecraft.entity.LivingEntity entity) {
+      if (state.getValue(OPEN)) {
+         BlockPos downPos = pos.below();
+         BlockState down = world.getBlockState(downPos);
+         return down.getBlock().makesOpenTrapdoorAboveClimbable(down, world, downPos, state);
+      }
+      return false;
+   }
+   //Forge End
+
 }
