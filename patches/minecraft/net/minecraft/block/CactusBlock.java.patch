--- a/net/minecraft/block/CactusBlock.java
+++ b/net/minecraft/block/CactusBlock.java
@@ -18,8 +_,9 @@
 import net.minecraft.world.IWorldReader;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory; // CraftBukkit
 
-public class CactusBlock extends Block {
+public class CactusBlock extends Block implements net.minecraftforge.common.IPlantable {
    public static final IntegerProperty AGE = BlockStateProperties.AGE_15;
    protected static final VoxelShape COLLISION_SHAPE = Block.box(1.0D, 0.0D, 1.0D, 15.0D, 15.0D, 15.0D);
    protected static final VoxelShape OUTLINE_SHAPE = Block.box(1.0D, 0.0D, 1.0D, 15.0D, 16.0D, 15.0D);
@@ -30,6 +_,7 @@
    }
 
    public void tick(BlockState p_225534_1_, ServerWorld p_225534_2_, BlockPos p_225534_3_, Random p_225534_4_) {
+      if (!p_225534_2_.isAreaLoaded(p_225534_3_, 1)) return; // Forge: prevent growing cactus from loading unloaded chunks with block update
       if (!p_225534_1_.canSurvive(p_225534_2_, p_225534_3_)) {
          p_225534_2_.destroyBlock(p_225534_3_, true);
       }
@@ -45,15 +_,17 @@
 
          if (i < 3) {
             int j = p_225542_1_.getValue(AGE);
-            if (j == 15) {
-               p_225542_2_.setBlockAndUpdate(blockpos, this.defaultBlockState());
+            if(net.minecraftforge.common.ForgeHooks.onCropsGrowPre(p_225542_2_, blockpos, p_225542_1_, true)) {
+            if (j >= (byte) range(3, ((100.0F / p_225542_2_.spigotConfig.cactusModifier) * 15) + 0.5F, 15)) { // Spigot
+               CraftEventFactory.handleBlockGrowEvent(p_225542_2_, blockpos, this.defaultBlockState()); // CraftBukkit
                BlockState blockstate = p_225542_1_.setValue(AGE, Integer.valueOf(0));
                p_225542_2_.setBlock(p_225542_3_, blockstate, 4);
                blockstate.neighborChanged(p_225542_2_, blockpos, this, p_225542_3_, false);
             } else {
                p_225542_2_.setBlock(p_225542_3_, p_225542_1_.setValue(AGE, Integer.valueOf(j + 1)), 4);
             }
-
+            net.minecraftforge.common.ForgeHooks.onCropsGrowPost(p_225542_2_, p_225542_3_, p_225542_1_);
+            }
          }
       }
    }
@@ -84,11 +_,13 @@
       }
 
       BlockState blockstate1 = p_196260_2_.getBlockState(p_196260_3_.below());
-      return (blockstate1.is(Blocks.CACTUS) || blockstate1.is(Blocks.SAND) || blockstate1.is(Blocks.RED_SAND)) && !p_196260_2_.getBlockState(p_196260_3_.above()).getMaterial().isLiquid();
+      return blockstate1.canSustainPlant(p_196260_2_, p_196260_3_, Direction.UP, this) && !p_196260_2_.getBlockState(p_196260_3_.above()).getMaterial().isLiquid();
    }
 
    public void entityInside(BlockState p_196262_1_, World p_196262_2_, BlockPos p_196262_3_, Entity p_196262_4_) {
-      p_196262_4_.hurt(DamageSource.CACTUS, 1.0F);
+       CraftEventFactory.blockDamage = p_196262_2_.getWorld().getBlockAt(p_196262_3_.getX(), p_196262_3_.getY(), p_196262_3_.getZ()); // CraftBukkit
+       p_196262_4_.hurt(DamageSource.CACTUS, 1.0F);
+       CraftEventFactory.blockDamage = null; // CraftBukkit
    }
 
    protected void createBlockStateDefinition(StateContainer.Builder<Block, BlockState> p_206840_1_) {
@@ -97,5 +_,15 @@
 
    public boolean isPathfindable(BlockState p_196266_1_, IBlockReader p_196266_2_, BlockPos p_196266_3_, PathType p_196266_4_) {
       return false;
+   }
+
+   @Override
+   public net.minecraftforge.common.PlantType getPlantType(IBlockReader world, BlockPos pos) {
+      return net.minecraftforge.common.PlantType.DESERT;
+   }
+
+   @Override
+   public BlockState getPlant(IBlockReader world, BlockPos pos) {
+      return defaultBlockState();
    }
 }
