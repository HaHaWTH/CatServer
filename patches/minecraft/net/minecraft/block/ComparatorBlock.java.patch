--- a/net/minecraft/block/ComparatorBlock.java
+++ b/net/minecraft/block/ComparatorBlock.java
@@ -23,6 +_,7 @@
 import net.minecraft.world.TickPriority;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
 
 public class ComparatorBlock extends RedstoneDiodeBlock implements ITileEntityProvider {
    public static final EnumProperty<ComparatorMode> MODE = BlockStateProperties.MODE_COMPARATOR;
@@ -127,8 +_,18 @@
          boolean flag1 = this.shouldTurnOn(p_176462_1_, p_176462_2_, p_176462_3_);
          boolean flag = p_176462_3_.getValue(POWERED);
          if (flag && !flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_176462_1_, p_176462_2_, 15, 0).getNewCurrent() != 0) {
+               return;
+            }
+            // CraftBukkit end
             p_176462_1_.setBlock(p_176462_2_, p_176462_3_.setValue(POWERED, Boolean.valueOf(false)), 2);
          } else if (!flag && flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_176462_1_, p_176462_2_, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+            // CraftBukkit end
             p_176462_1_.setBlock(p_176462_2_, p_176462_3_.setValue(POWERED, Boolean.valueOf(true)), 2);
          }
 
@@ -153,5 +_,17 @@
 
    protected void createBlockStateDefinition(StateContainer.Builder<Block, BlockState> p_206840_1_) {
       p_206840_1_.add(FACING, MODE, POWERED);
+   }
+
+   @Override
+   public boolean getWeakChanges(BlockState state, net.minecraft.world.IWorldReader world, BlockPos pos) {
+      return state.is(Blocks.COMPARATOR);
+   }
+
+   @Override
+   public void onNeighborChange(BlockState state, net.minecraft.world.IWorldReader world, BlockPos pos, BlockPos neighbor) {
+      if (pos.getY() == neighbor.getY() && world instanceof World && !((World)world).isClientSide()) {
+         state.neighborChanged((World)world, pos, world.getBlockState(neighbor).getBlock(), neighbor, false);
+      }
    }
 }
