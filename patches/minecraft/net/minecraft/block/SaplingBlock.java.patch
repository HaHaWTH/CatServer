--- a/net/minecraft/block/SaplingBlock.java
+++ b/net/minecraft/block/SaplingBlock.java
@@ -1,5 +_,7 @@
 package net.minecraft.block;
 
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Random;
 import net.minecraft.block.trees.Tree;
 import net.minecraft.state.IntegerProperty;
@@ -11,11 +_,15 @@
 import net.minecraft.world.IBlockReader;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.Location;
+import org.bukkit.TreeType;
+import org.bukkit.event.world.StructureGrowEvent;
 
 public class SaplingBlock extends BushBlock implements IGrowable {
    public static final IntegerProperty STAGE = BlockStateProperties.STAGE;
    protected static final VoxelShape SHAPE = Block.box(2.0D, 0.0D, 2.0D, 14.0D, 12.0D, 14.0D);
    private final Tree treeGrower;
+   public static TreeType treeType; // CraftBukkit
 
    public SaplingBlock(Tree p_i48337_1_, AbstractBlock.Properties p_i48337_2_) {
       super(p_i48337_2_);
@@ -28,8 +_,32 @@
    }
 
    public void randomTick(BlockState p_225542_1_, ServerWorld p_225542_2_, BlockPos p_225542_3_, Random p_225542_4_) {
-      if (p_225542_2_.getMaxLocalRawBrightness(p_225542_3_.above()) >= 9 && p_225542_4_.nextInt(7) == 0) {
+      if (p_225542_2_.getMaxLocalRawBrightness(p_225542_3_.above()) >= 9 && p_225542_4_.nextInt(Math.max(2, (int) (((100.0F / p_225542_2_.spigotConfig.saplingModifier) * 7) + 0.5F))) == 0) { // Spigot
+      if (!p_225542_2_.isAreaLoaded(p_225542_3_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
+         // CraftBukkit start
+         p_225542_2_.captureTreeGeneration = true;
+         // CraftBukkit end
          this.advanceTree(p_225542_2_, p_225542_3_, p_225542_1_, p_225542_4_);
+         // CraftBukkit start
+         p_225542_2_.captureTreeGeneration = false;
+         if(p_225542_2_.capturedBlockStates.size() > 0){
+            TreeType treeType = SaplingBlock.treeType;
+            SaplingBlock.treeType = null;
+            Location location = new Location(p_225542_2_.getWorld(), p_225542_3_.getX(), p_225542_3_.getY(), p_225542_3_.getZ());
+            List<org.bukkit.block.BlockState> blocks = new ArrayList<>(p_225542_2_.capturedBlockStates.values());
+            p_225542_2_.capturedBlockStates.clear();
+            StructureGrowEvent event = null;
+            if(treeType != null){
+               event = new StructureGrowEvent(location, treeType, false, null, blocks);
+               p_225542_2_.getCBServer().getPluginManager().callEvent(event);
+            }
+            if(event == null || !event.isCancelled()){
+               for (org.bukkit.block.BlockState block : blocks) {
+                  block.update(true);
+               }
+            }
+         }
+         // CraftBukkit stop
       }
 
    }
@@ -38,6 +_,8 @@
       if (p_226942_3_.getValue(STAGE) == 0) {
          p_226942_1_.setBlock(p_226942_2_, p_226942_3_.cycle(STAGE), 4);
       } else {
+         if (this.treeGrower == null) return;
+         if (!net.minecraftforge.event.ForgeEventFactory.saplingGrowTree(p_226942_1_, p_226942_4_, p_226942_2_)) return;
          this.treeGrower.growTree(p_226942_1_, p_226942_1_.getChunkSource().getGenerator(), p_226942_2_, p_226942_3_, p_226942_4_);
       }
 
