--- a/net/minecraft/block/CauldronBlock.java
+++ b/net/minecraft/block/CauldronBlock.java
@@ -30,7 +_,7 @@
 import net.minecraft.util.math.shapes.VoxelShapes;
 import net.minecraft.world.IBlockReader;
 import net.minecraft.world.World;
-
+import org.bukkit.event.block.CauldronLevelChangeEvent; // CraftBukkit
 public class CauldronBlock extends Block {
    public static final IntegerProperty LEVEL = BlockStateProperties.LEVEL_CAULDRON;
    private static final VoxelShape INSIDE = box(2.0D, 4.0D, 2.0D, 14.0D, 16.0D, 14.0D);
@@ -53,8 +_,13 @@
       int i = p_196262_1_.getValue(LEVEL);
       float f = (float)p_196262_3_.getY() + (6.0F + (float)(3 * i)) / 16.0F;
       if (!p_196262_2_.isClientSide && p_196262_4_.isOnFire() && i > 0 && p_196262_4_.getY() <= (double)f) {
+         // CraftBukkit start
+         if (!this.changeLevel(p_196262_2_, p_196262_3_, p_196262_1_, i - 1, p_196262_4_, CauldronLevelChangeEvent.ChangeReason.EXTINGUISH)) {
+            return;
+         }
          p_196262_4_.clearFire();
-         this.setWaterLevel(p_196262_2_, p_196262_3_, p_196262_1_, i - 1);
+          // this.setWaterLevel(worldIn, pos, state, i - 1);
+          // CraftBukkit end
       }
 
    }
@@ -68,18 +_,27 @@
          Item item = itemstack.getItem();
          if (item == Items.WATER_BUCKET) {
             if (i < 3 && !p_225533_2_.isClientSide) {
+               // CraftBukkit start
+               if (!this.changeLevel(p_225533_2_, p_225533_3_, p_225533_1_, 3, p_225533_4_, CauldronLevelChangeEvent.ChangeReason.BUCKET_EMPTY)) {
+                  return ActionResultType.SUCCESS;
+               }
                if (!p_225533_4_.abilities.instabuild) {
                   p_225533_4_.setItemInHand(p_225533_5_, new ItemStack(Items.BUCKET));
                }
 
                p_225533_4_.awardStat(Stats.FILL_CAULDRON);
-               this.setWaterLevel(p_225533_2_, p_225533_3_, p_225533_1_, 3);
+               //this.setWaterLevel(worldIn, pos, state, 3);
+               // CraftBukkit end
                p_225533_2_.playSound((PlayerEntity)null, p_225533_3_, SoundEvents.BUCKET_EMPTY, SoundCategory.BLOCKS, 1.0F, 1.0F);
             }
 
             return ActionResultType.sidedSuccess(p_225533_2_.isClientSide);
          } else if (item == Items.BUCKET) {
             if (i == 3 && !p_225533_2_.isClientSide) {
+               // CraftBukkit start
+               if (!this.changeLevel(p_225533_2_, p_225533_3_, p_225533_1_, 0, p_225533_4_, CauldronLevelChangeEvent.ChangeReason.BUCKET_FILL)) {
+                  return ActionResultType.SUCCESS;
+               }
                if (!p_225533_4_.abilities.instabuild) {
                   itemstack.shrink(1);
                   if (itemstack.isEmpty()) {
@@ -90,13 +_,18 @@
                }
 
                p_225533_4_.awardStat(Stats.USE_CAULDRON);
-               this.setWaterLevel(p_225533_2_, p_225533_3_, p_225533_1_, 0);
+               //this.setWaterLevel(worldIn, pos, state, 0);
+               // CraftBukkit end
                p_225533_2_.playSound((PlayerEntity)null, p_225533_3_, SoundEvents.BUCKET_FILL, SoundCategory.BLOCKS, 1.0F, 1.0F);
             }
 
             return ActionResultType.sidedSuccess(p_225533_2_.isClientSide);
          } else if (item == Items.GLASS_BOTTLE) {
             if (i > 0 && !p_225533_2_.isClientSide) {
+               // CraftBukkit start
+               if (!this.changeLevel(p_225533_2_, p_225533_3_, p_225533_1_, i - 1, p_225533_4_, CauldronLevelChangeEvent.ChangeReason.BOTTLE_FILL)) {
+                  return ActionResultType.SUCCESS;
+               }
                if (!p_225533_4_.abilities.instabuild) {
                   ItemStack itemstack4 = PotionUtils.setPotion(new ItemStack(Items.POTION), Potions.WATER);
                   p_225533_4_.awardStat(Stats.USE_CAULDRON);
@@ -111,12 +_,17 @@
                }
 
                p_225533_2_.playSound((PlayerEntity)null, p_225533_3_, SoundEvents.BOTTLE_FILL, SoundCategory.BLOCKS, 1.0F, 1.0F);
-               this.setWaterLevel(p_225533_2_, p_225533_3_, p_225533_1_, i - 1);
+               //this.setWaterLevel(worldIn, pos, state, i - 1);
+               // CraftBukkit end
             }
 
             return ActionResultType.sidedSuccess(p_225533_2_.isClientSide);
          } else if (item == Items.POTION && PotionUtils.getPotion(itemstack) == Potions.WATER) {
             if (i < 3 && !p_225533_2_.isClientSide) {
+               // CraftBukkit start
+               if (!this.changeLevel(p_225533_2_, p_225533_3_, p_225533_1_, i - 1, p_225533_4_, CauldronLevelChangeEvent.ChangeReason.BOTTLE_FILL)) {
+                  return ActionResultType.SUCCESS;
+               }
                if (!p_225533_4_.abilities.instabuild) {
                   ItemStack itemstack3 = new ItemStack(Items.GLASS_BOTTLE);
                   p_225533_4_.awardStat(Stats.USE_CAULDRON);
@@ -127,7 +_,8 @@
                }
 
                p_225533_2_.playSound((PlayerEntity)null, p_225533_3_, SoundEvents.BOTTLE_EMPTY, SoundCategory.BLOCKS, 1.0F, 1.0F);
-               this.setWaterLevel(p_225533_2_, p_225533_3_, p_225533_1_, i + 1);
+               //this.setWaterLevel(worldIn, pos, state, i + 1);
+               // CraftBukkit end
             }
 
             return ActionResultType.sidedSuccess(p_225533_2_.isClientSide);
@@ -135,8 +_,13 @@
             if (i > 0 && item instanceof IDyeableArmorItem) {
                IDyeableArmorItem idyeablearmoritem = (IDyeableArmorItem)item;
                if (idyeablearmoritem.hasCustomColor(itemstack) && !p_225533_2_.isClientSide) {
+                  // CraftBukkit start
+                  if (!this.changeLevel(p_225533_2_, p_225533_3_, p_225533_1_, i - 1, p_225533_4_, CauldronLevelChangeEvent.ChangeReason.ARMOR_WASH)) {
+                     return ActionResultType.SUCCESS;
+                  }
                   idyeablearmoritem.clearColor(itemstack);
-                  this.setWaterLevel(p_225533_2_, p_225533_3_, p_225533_1_, i - 1);
+                  //this.setWaterLevel(worldIn, pos, state, i - 1);
+                  // CraftBukkit end
                   p_225533_4_.awardStat(Stats.CLEAN_ARMOR);
                   return ActionResultType.SUCCESS;
                }
@@ -144,13 +_,18 @@
 
             if (i > 0 && item instanceof BannerItem) {
                if (BannerTileEntity.getPatternCount(itemstack) > 0 && !p_225533_2_.isClientSide) {
+                  // CraftBukkit start
+                  if (!this.changeLevel(p_225533_2_, p_225533_3_, p_225533_1_, i - 1, p_225533_4_, CauldronLevelChangeEvent.ChangeReason.BANNER_WASH)) {
+                     return ActionResultType.SUCCESS;
+                  }
                   ItemStack itemstack2 = itemstack.copy();
                   itemstack2.setCount(1);
                   BannerTileEntity.removeLastPattern(itemstack2);
                   p_225533_4_.awardStat(Stats.CLEAN_BANNER);
                   if (!p_225533_4_.abilities.instabuild) {
                      itemstack.shrink(1);
-                     this.setWaterLevel(p_225533_2_, p_225533_3_, p_225533_1_, i - 1);
+                     //this.setWaterLevel(worldIn, pos, state, i - 1);
+                     // CraftBukkit end
                   }
 
                   if (itemstack.isEmpty()) {
@@ -185,18 +_,36 @@
       }
    }
 
+   // CraftBukkit start
    public void setWaterLevel(World p_176590_1_, BlockPos p_176590_2_, BlockState p_176590_3_, int p_176590_4_) {
-      p_176590_1_.setBlock(p_176590_2_, p_176590_3_.setValue(LEVEL, Integer.valueOf(MathHelper.clamp(p_176590_4_, 0, 3))), 2);
+      this.changeLevel(p_176590_1_, p_176590_2_, p_176590_3_, p_176590_4_, null, CauldronLevelChangeEvent.ChangeReason.UNKNOWN);
       p_176590_1_.updateNeighbourForOutputSignal(p_176590_2_, this);
    }
 
+   private boolean changeLevel(World world, BlockPos blockposition, BlockState iblockdata, int i, Entity entity, CauldronLevelChangeEvent.ChangeReason reason) {
+      int newLevel = Integer.valueOf(MathHelper.clamp(i, 0, 3));
+      CauldronLevelChangeEvent event = new CauldronLevelChangeEvent(
+              world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()),
+              (entity == null) ? null : entity.getBukkitEntity(), reason, iblockdata.getValue(CauldronBlock.LEVEL), newLevel
+      );
+      world.getCBServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return false;
+      }
+      world.setBlock(blockposition, iblockdata.setValue(LEVEL, event.getNewLevel()), 2);
+
+      world.updateNeighbourForOutputSignal(blockposition, this);
+      return true;
+      // CraftBukkit end
+   }
+
    public void handleRain(World p_176224_1_, BlockPos p_176224_2_) {
       if (p_176224_1_.random.nextInt(20) == 1) {
          float f = p_176224_1_.getBiome(p_176224_2_).getTemperature(p_176224_2_);
          if (!(f < 0.15F)) {
             BlockState blockstate = p_176224_1_.getBlockState(p_176224_2_);
             if (blockstate.getValue(LEVEL) < 3) {
-               p_176224_1_.setBlock(p_176224_2_, blockstate.cycle(LEVEL), 2);
+               this.setWaterLevel(p_176224_1_, p_176224_2_, blockstate.cycle(LEVEL), 2); // CraftBukkit
             }
 
          }
