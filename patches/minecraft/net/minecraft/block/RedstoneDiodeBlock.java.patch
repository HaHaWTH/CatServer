--- a/net/minecraft/block/RedstoneDiodeBlock.java
+++ b/net/minecraft/block/RedstoneDiodeBlock.java
@@ -16,6 +_,7 @@
 import net.minecraft.world.TickPriority;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
 
 public abstract class RedstoneDiodeBlock extends HorizontalBlock {
    protected static final VoxelShape SHAPE = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 2.0D, 16.0D);
@@ -38,8 +_,18 @@
          boolean flag = p_225534_1_.getValue(POWERED);
          boolean flag1 = this.shouldTurnOn(p_225534_2_, p_225534_3_, p_225534_1_);
          if (flag && !flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_225534_2_, p_225534_3_, 15, 0).getNewCurrent() != 0) {
+               return;
+            }
+            // CraftBukkit end
             p_225534_2_.setBlock(p_225534_3_, p_225534_1_.setValue(POWERED, Boolean.valueOf(false)), 2);
          } else if (!flag) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_225534_2_, p_225534_3_, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+            // CraftBukkit end
             p_225534_2_.setBlock(p_225534_3_, p_225534_1_.setValue(POWERED, Boolean.valueOf(true)), 2);
             if (!flag1) {
                p_225534_2_.getBlockTicks().scheduleTick(p_225534_3_, this, this.getDelay(p_225534_1_), TickPriority.VERY_HIGH);
@@ -65,7 +_,7 @@
       if (p_220069_1_.canSurvive(p_220069_2_, p_220069_3_)) {
          this.checkTickOnNeighbor(p_220069_2_, p_220069_3_, p_220069_1_);
       } else {
-         TileEntity tileentity = this.isEntityBlock() ? p_220069_2_.getBlockEntity(p_220069_3_) : null;
+         TileEntity tileentity = p_220069_1_.hasTileEntity() ? p_220069_2_.getBlockEntity(p_220069_3_) : null;
          dropResources(p_220069_1_, p_220069_2_, p_220069_3_, tileentity);
          p_220069_2_.removeBlock(p_220069_3_, false);
 
@@ -163,6 +_,8 @@
    protected void updateNeighborsInFront(World p_176400_1_, BlockPos p_176400_2_, BlockState p_176400_3_) {
       Direction direction = p_176400_3_.getValue(FACING);
       BlockPos blockpos = p_176400_2_.relative(direction.getOpposite());
+      if (net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(p_176400_1_, p_176400_2_, p_176400_1_.getBlockState(p_176400_2_), java.util.EnumSet.of(direction.getOpposite()), false).isCanceled())
+         return;
       p_176400_1_.neighborChanged(blockpos, this, p_176400_2_);
       p_176400_1_.updateNeighborsAtExceptFromFacing(blockpos, this, direction);
    }
