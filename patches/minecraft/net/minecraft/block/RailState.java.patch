--- a/net/minecraft/block/RailState.java
+++ b/net/minecraft/block/RailState.java
@@ -15,16 +_,30 @@
    private BlockState state;
    private final boolean isStraight;
    private final List<BlockPos> connections = Lists.newArrayList();
+   private final boolean canMakeSlopes;
 
    public RailState(World p_i47755_1_, BlockPos p_i47755_2_, BlockState p_i47755_3_) {
       this.level = p_i47755_1_;
       this.pos = p_i47755_2_;
       this.state = p_i47755_3_;
       this.block = (AbstractRailBlock)p_i47755_3_.getBlock();
-      RailShape railshape = p_i47755_3_.getValue(this.block.getShapeProperty());
-      this.isStraight = this.block.isStraight();
+      RailShape railshape = this.block.getRailDirection(state, p_i47755_1_, p_i47755_2_, null);
+      this.isStraight = !this.block.isFlexibleRail(state, p_i47755_1_, p_i47755_2_);
+      this.canMakeSlopes = this.block.canMakeSlopes(state, p_i47755_1_, p_i47755_2_);
       this.updateConnections(railshape);
    }
+
+   public final World getWorld() { return this.level; } // Paper - OBFHELPER
+
+   public final BlockPos getPos() { return this.pos; } // Paper - OBFHELPER
+
+   public final BlockState getRailState() { return this.state; } // Paper - OBFHELPER
+
+   // Paper start - prevent desync
+   public boolean isValid() {
+      return this.getWorld().getBlockState(this.getPos()).getBlock() == this.getRailState().getBlock();
+   }
+    // Paper end - prevent desync
 
    public List<BlockPos> getConnections() {
       return this.connections;
@@ -142,6 +_,11 @@
    }
 
    private void connectTo(RailState p_208510_1_) {
+      // Paper start - prevent desync
+      if (!this.isValid() || !p_208510_1_.isValid()) {
+         return;
+      }
+      // Paper end - prevent desync
       this.connections.add(p_208510_1_.pos);
       BlockPos blockpos = this.pos.north();
       BlockPos blockpos1 = this.pos.south();
@@ -178,7 +_,7 @@
          }
       }
 
-      if (railshape == RailShape.NORTH_SOUTH) {
+      if (railshape == RailShape.NORTH_SOUTH && canMakeSlopes) {
          if (AbstractRailBlock.isRail(this.level, blockpos.above())) {
             railshape = RailShape.ASCENDING_NORTH;
          }
@@ -188,7 +_,7 @@
          }
       }
 
-      if (railshape == RailShape.EAST_WEST) {
+      if (railshape == RailShape.EAST_WEST && canMakeSlopes) {
          if (AbstractRailBlock.isRail(this.level, blockpos3.above())) {
             railshape = RailShape.ASCENDING_EAST;
          }
@@ -304,7 +_,7 @@
          }
       }
 
-      if (railshape == RailShape.NORTH_SOUTH) {
+      if (railshape == RailShape.NORTH_SOUTH && canMakeSlopes) {
          if (AbstractRailBlock.isRail(this.level, blockpos.above())) {
             railshape = RailShape.ASCENDING_NORTH;
          }
@@ -314,7 +_,7 @@
          }
       }
 
-      if (railshape == RailShape.EAST_WEST) {
+      if (railshape == RailShape.EAST_WEST && canMakeSlopes) {
          if (AbstractRailBlock.isRail(this.level, blockpos3.above())) {
             railshape = RailShape.ASCENDING_EAST;
          }
@@ -332,10 +_,14 @@
       this.state = this.state.setValue(this.block.getShapeProperty(), railshape);
       if (p_226941_2_ || this.level.getBlockState(this.pos) != this.state) {
          this.level.setBlock(this.pos, this.state, 3);
-
+         // Paper start - prevent desync
+         if (!this.isValid()) {
+            return this;
+         }
+         // Paper end - prevent desync
          for(int i = 0; i < this.connections.size(); ++i) {
             RailState railstate = this.getRail(this.connections.get(i));
-            if (railstate != null) {
+            if (railstate != null && railstate.isValid()) { // Paper - prevent desync
                railstate.removeSoftConnections();
                if (railstate.canConnectTo(this)) {
                   railstate.connectTo(this);
@@ -348,6 +_,6 @@
    }
 
    public BlockState getState() {
-      return this.state;
+      return this.getWorld().getBlockState(this.getPos()); // Paper - prevent desync
    }
 }
