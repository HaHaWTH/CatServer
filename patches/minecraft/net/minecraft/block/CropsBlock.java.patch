--- a/net/minecraft/block/CropsBlock.java
+++ b/net/minecraft/block/CropsBlock.java
@@ -18,6 +_,7 @@
 import net.minecraft.world.IWorldReader;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
 
 public class CropsBlock extends BushBlock implements IGrowable {
    public static final IntegerProperty AGE = BlockStateProperties.AGE_7;
@@ -61,12 +_,26 @@
    }
 
    public void randomTick(BlockState p_225542_1_, ServerWorld p_225542_2_, BlockPos p_225542_3_, Random p_225542_4_) {
+      if (!p_225542_2_.isAreaLoaded(p_225542_3_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
       if (p_225542_2_.getRawBrightness(p_225542_3_, 0) >= 9) {
          int i = this.getAge(p_225542_1_);
          if (i < this.getMaxAge()) {
             float f = getGrowthSpeed(this, p_225542_2_, p_225542_3_);
-            if (p_225542_4_.nextInt((int)(25.0F / f) + 1) == 0) {
-               p_225542_2_.setBlock(p_225542_3_, this.getStateForAge(i + 1), 2);
+            // Spigot start
+            int modifier;
+            if (this == Blocks.BEETROOTS) {
+               modifier = p_225542_2_.spigotConfig.beetrootModifier;
+            } else if (this == Blocks.CARROTS) {
+               modifier = p_225542_2_.spigotConfig.carrotModifier;
+            } else if (this == Blocks.POTATOES) {
+               modifier = p_225542_2_.spigotConfig.potatoModifier;
+            } else {
+               modifier = p_225542_2_.spigotConfig.wheatModifier;
+            }
+            if (net.minecraftforge.common.ForgeHooks.onCropsGrowPre(p_225542_2_, p_225542_3_, p_225542_1_, p_225542_4_.nextInt((int) ((100.0F / modifier) * (25.0F / f)) + 1) == 0)) {
+               // Spigot end
+               CraftEventFactory.handleBlockFormEvent(p_225542_2_, p_225542_3_, this.getStateForAge(i + 1), 2); // CraftBukkit
+               net.minecraftforge.common.ForgeHooks.onCropsGrowPost(p_225542_2_, p_225542_3_, p_225542_1_);
             }
          }
       }
@@ -80,7 +_,7 @@
          i = j;
       }
 
-      p_176487_1_.setBlock(p_176487_2_, this.getStateForAge(i), 2);
+      CraftEventFactory.handleBlockFormEvent(p_176487_1_, p_176487_2_, this.getStateForAge(i), 2); // CraftBukkit
    }
 
    protected int getBonemealAgeIncrease(World p_185529_1_) {
@@ -95,9 +_,9 @@
          for(int j = -1; j <= 1; ++j) {
             float f1 = 0.0F;
             BlockState blockstate = p_180672_1_.getBlockState(blockpos.offset(i, 0, j));
-            if (blockstate.is(Blocks.FARMLAND)) {
+            if (blockstate.canSustainPlant(p_180672_1_, blockpos.offset(i, 0, j), net.minecraft.util.Direction.UP, (net.minecraftforge.common.IPlantable) p_180672_0_)) {
                f1 = 1.0F;
-               if (blockstate.getValue(FarmlandBlock.MOISTURE) > 0) {
+               if (blockstate.isFertile(p_180672_1_, p_180672_2_.offset(i, 0, j))) {
                   f1 = 3.0F;
                }
             }
@@ -133,7 +_,7 @@
    }
 
    public void entityInside(BlockState p_196262_1_, World p_196262_2_, BlockPos p_196262_3_, Entity p_196262_4_) {
-      if (p_196262_4_ instanceof RavagerEntity && p_196262_2_.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+      if (p_196262_4_ instanceof RavagerEntity && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(p_196262_2_, p_196262_4_) && !CraftEventFactory.callEntityChangeBlockEvent(p_196262_4_, p_196262_3_, Blocks.AIR.defaultBlockState(), !p_196262_2_.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)).isCancelled()) { // CraftBukkit
          p_196262_2_.destroyBlock(p_196262_3_, true, p_196262_4_);
       }
 
