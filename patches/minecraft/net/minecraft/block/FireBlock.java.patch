--- a/net/minecraft/block/FireBlock.java
+++ b/net/minecraft/block/FireBlock.java
@@ -5,6 +_,7 @@
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import java.util.Map;
 import java.util.Random;
+import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Function;
 import java.util.stream.Collectors;
 import net.minecraft.item.BlockItemUseContext;
@@ -24,6 +_,10 @@
 import net.minecraft.world.IWorldReader;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.block.CraftBlockState;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.event.block.BlockBurnEvent;
+import org.bukkit.event.block.BlockFadeEvent;
 
 public class FireBlock extends AbstractFireBlock {
    public static final IntegerProperty AGE = BlockStateProperties.AGE_15;
@@ -78,7 +_,19 @@
    }
 
    public BlockState updateShape(BlockState p_196271_1_, Direction p_196271_2_, BlockState p_196271_3_, IWorld p_196271_4_, BlockPos p_196271_5_, BlockPos p_196271_6_) {
-      return this.canSurvive(p_196271_1_, p_196271_4_, p_196271_5_) ? this.getStateWithAge(p_196271_4_, p_196271_5_, p_196271_1_.getValue(AGE)) : Blocks.AIR.defaultBlockState();
+      // CraftBukkit start
+      if (!(p_196271_4_ instanceof ServerWorld)) return this.canSurvive(p_196271_1_, p_196271_4_, p_196271_5_) ? (BlockState) this.getStateWithAge(p_196271_4_, p_196271_5_, (Integer) p_196271_1_.getValue(FireBlock.AGE)) : Blocks.AIR.defaultBlockState(); // Paper - don't fire events in world generation
+      if (!p_196271_1_.canSurvive(p_196271_4_, p_196271_5_)) {
+         CraftBlockState blockState = CraftBlockState.getBlockState(p_196271_4_, p_196271_5_);
+         blockState.setData(Blocks.AIR.defaultBlockState());
+         BlockFadeEvent event = new BlockFadeEvent(blockState.getBlock(), blockState);
+         p_196271_4_.getMinecraftWorld().getCBServer().getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            return blockState.getHandle();
+         }
+      }
+      return this.getStateForPlacement(p_196271_4_, p_196271_5_).setValue(AGE, p_196271_1_.getValue(AGE)); // Paper - diff on change, see "don't fire events in world generation"
+      // CraftBukkit end
    }
 
    public VoxelShape getShape(BlockState p_220053_1_, IBlockReader p_220053_2_, BlockPos p_220053_3_, ISelectionContext p_220053_4_) {
@@ -92,13 +_,13 @@
    protected BlockState getStateForPlacement(IBlockReader p_196448_1_, BlockPos p_196448_2_) {
       BlockPos blockpos = p_196448_2_.below();
       BlockState blockstate = p_196448_1_.getBlockState(blockpos);
-      if (!this.canBurn(blockstate) && !blockstate.isFaceSturdy(p_196448_1_, blockpos, Direction.UP)) {
+      if (!this.canCatchFire(p_196448_1_, p_196448_2_, Direction.UP) && !blockstate.isFaceSturdy(p_196448_1_, blockpos, Direction.UP)) {
          BlockState blockstate1 = this.defaultBlockState();
 
          for(Direction direction : Direction.values()) {
             BooleanProperty booleanproperty = PROPERTY_BY_DIRECTION.get(direction);
             if (booleanproperty != null) {
-               blockstate1 = blockstate1.setValue(booleanproperty, Boolean.valueOf(this.canBurn(p_196448_1_.getBlockState(p_196448_2_.relative(direction)))));
+               blockstate1 = blockstate1.setValue(booleanproperty, Boolean.valueOf(this.canCatchFire(p_196448_1_, p_196448_2_.relative(direction), direction.getOpposite())));
             }
          }
 
@@ -117,14 +_,14 @@
       p_225534_2_.getBlockTicks().scheduleTick(p_225534_3_, this, getFireTickDelay(p_225534_2_.random));
       if (p_225534_2_.getGameRules().getBoolean(GameRules.RULE_DOFIRETICK)) {
          if (!p_225534_1_.canSurvive(p_225534_2_, p_225534_3_)) {
-            p_225534_2_.removeBlock(p_225534_3_, false);
+            fireExtinguished(p_225534_2_, p_225534_3_); // CraftBukkit - invalid place location
          }
 
          BlockState blockstate = p_225534_2_.getBlockState(p_225534_3_.below());
-         boolean flag = blockstate.is(p_225534_2_.dimensionType().infiniburn());
+         boolean flag = blockstate.isFireSource(p_225534_2_, p_225534_3_, Direction.UP);
          int i = p_225534_1_.getValue(AGE);
          if (!flag && p_225534_2_.isRaining() && this.isNearRain(p_225534_2_, p_225534_3_) && p_225534_4_.nextFloat() < 0.2F + (float)i * 0.03F) {
-            p_225534_2_.removeBlock(p_225534_3_, false);
+            fireExtinguished(p_225534_2_, p_225534_3_); // CraftBukkit - extinguished by rain
          } else {
             int j = Math.min(15, i + p_225534_4_.nextInt(3) / 2);
             if (i != j) {
@@ -136,26 +_,28 @@
                if (!this.isValidFireLocation(p_225534_2_, p_225534_3_)) {
                   BlockPos blockpos = p_225534_3_.below();
                   if (!p_225534_2_.getBlockState(blockpos).isFaceSturdy(p_225534_2_, blockpos, Direction.UP) || i > 3) {
-                     p_225534_2_.removeBlock(p_225534_3_, false);
+                     fireExtinguished(p_225534_2_, p_225534_3_); // CraftBukkit
                   }
 
                   return;
                }
 
-               if (i == 15 && p_225534_4_.nextInt(4) == 0 && !this.canBurn(p_225534_2_.getBlockState(p_225534_3_.below()))) {
-                  p_225534_2_.removeBlock(p_225534_3_, false);
+               if (i == 15 && p_225534_4_.nextInt(4) == 0 && !this.canCatchFire(p_225534_2_, p_225534_3_.below(), Direction.UP)) {
+                  fireExtinguished(p_225534_2_, p_225534_3_); // CraftBukkit
                   return;
                }
             }
 
             boolean flag1 = p_225534_2_.isHumidAt(p_225534_3_);
             int k = flag1 ? -50 : 0;
-            this.checkBurnOut(p_225534_2_, p_225534_3_.east(), 300 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.west(), 300 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.below(), 250 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.above(), 250 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.north(), 300 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.south(), 300 + k, p_225534_4_, i);
+            // CraftBukkit start - add source blockposition to burn calls
+            this.tryCatchFire(p_225534_2_, p_225534_3_.east(), 300 + k, p_225534_4_, i, Direction.WEST, p_225534_3_);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.west(), 300 + k, p_225534_4_, i, Direction.EAST, p_225534_3_);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.below(), 250 + k, p_225534_4_, i, Direction.UP, p_225534_3_);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.above(), 250 + k, p_225534_4_, i, Direction.DOWN, p_225534_3_);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.north(), 300 + k, p_225534_4_, i, Direction.SOUTH, p_225534_3_);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.south(), 300 + k, p_225534_4_, i, Direction.NORTH, p_225534_3_);
+            // CraftBukkit end
             BlockPos.Mutable blockpos$mutable = new BlockPos.Mutable();
 
             for(int l = -1; l <= 1; ++l) {
@@ -177,7 +_,14 @@
 
                            if (i2 > 0 && p_225534_4_.nextInt(k1) <= i2 && (!p_225534_2_.isRaining() || !this.isNearRain(p_225534_2_, blockpos$mutable))) {
                               int j2 = Math.min(15, i + p_225534_4_.nextInt(5) / 4);
-                              p_225534_2_.setBlock(blockpos$mutable, this.getStateWithAge(p_225534_2_, blockpos$mutable, j2), 3);
+                              // CraftBukkit start - Call to stop spread of fire
+                              if (p_225534_2_.getBlockState(blockpos$mutable).getBlock() != Blocks.FIRE) {
+                                 if (CraftEventFactory.callBlockIgniteEvent(p_225534_2_, blockpos$mutable, p_225534_3_).isCancelled()) {
+                                    continue;
+                                 }
+                                 CraftEventFactory.handleBlockSpreadEvent(p_225534_2_, p_225534_3_, blockpos$mutable, this.getStateForPlacement(p_225534_2_, blockpos$mutable).setValue(AGE, Integer.valueOf(j2)), 3); // CraftBukkit
+                              }
+                              // CraftBukkit end
                            }
                         }
                      }
@@ -193,33 +_,47 @@
       return p_176537_1_.isRainingAt(p_176537_2_) || p_176537_1_.isRainingAt(p_176537_2_.west()) || p_176537_1_.isRainingAt(p_176537_2_.east()) || p_176537_1_.isRainingAt(p_176537_2_.north()) || p_176537_1_.isRainingAt(p_176537_2_.south());
    }
 
+   @Deprecated //Forge: Use IForgeBlockState.getFlammability, Public for default implementation only.
    public int getBurnOdd(BlockState p_220274_1_) {
       return p_220274_1_.hasProperty(BlockStateProperties.WATERLOGGED) && p_220274_1_.getValue(BlockStateProperties.WATERLOGGED) ? 0 : this.burnOdds.getInt(p_220274_1_.getBlock());
    }
 
+   @Deprecated //Forge: Use IForgeBlockState.getFireSpreadSpeed
    public int getFlameOdds(BlockState p_220275_1_) {
       return p_220275_1_.hasProperty(BlockStateProperties.WATERLOGGED) && p_220275_1_.getValue(BlockStateProperties.WATERLOGGED) ? 0 : this.flameOdds.getInt(p_220275_1_.getBlock());
    }
 
-   private void checkBurnOut(World p_176536_1_, BlockPos p_176536_2_, int p_176536_3_, Random p_176536_4_, int p_176536_5_) {
-      int i = this.getBurnOdd(p_176536_1_.getBlockState(p_176536_2_));
+   // CatServer start - fix tryCatchFire mixin shadow exception
+   private AtomicReference<BlockPos> catserver$tryCatchFirePos = new AtomicReference<>();
+   private void tryCatchFire(World worldIn, BlockPos pos, int chance, Random random, int age, Direction face, BlockPos sourceposition) { // CraftBukkit add sourceposition
+      catserver$tryCatchFirePos.set(sourceposition);
+      this.tryCatchFire(worldIn, pos, chance, random, age, face);
+   }
+
+   private void tryCatchFire(World p_176536_1_, BlockPos p_176536_2_, int p_176536_3_, Random p_176536_4_, int p_176536_5_, Direction face) {
+      int i = p_176536_1_.getBlockState(p_176536_2_).getFlammability(p_176536_1_, p_176536_2_, face);
       if (p_176536_4_.nextInt(p_176536_3_) < i) {
          BlockState blockstate = p_176536_1_.getBlockState(p_176536_2_);
+         BlockPos sourceposition = catserver$tryCatchFirePos.getAndSet(null); // CatServer
+         // CraftBukkit start
+         org.bukkit.block.Block theBlock = p_176536_1_.getWorld().getBlockAt(p_176536_2_.getX(), p_176536_2_.getY(), p_176536_2_.getZ());
+         org.bukkit.block.Block sourceBlock = p_176536_1_.getWorld().getBlockAt(sourceposition.getX(), sourceposition.getY(), sourceposition.getZ());
+         BlockBurnEvent event = new BlockBurnEvent(theBlock, sourceBlock);
+         p_176536_1_.getCBServer().getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            return;
+         }
+         // CraftBukkit end
          if (p_176536_4_.nextInt(p_176536_5_ + 10) < 5 && !p_176536_1_.isRainingAt(p_176536_2_)) {
             int j = Math.min(p_176536_5_ + p_176536_4_.nextInt(5) / 4, 15);
             p_176536_1_.setBlock(p_176536_2_, this.getStateWithAge(p_176536_1_, p_176536_2_, j), 3);
          } else {
             p_176536_1_.removeBlock(p_176536_2_, false);
          }
-
-         Block block = blockstate.getBlock();
-         if (block instanceof TNTBlock) {
-            TNTBlock tntblock = (TNTBlock)block;
-            TNTBlock.explode(p_176536_1_, p_176536_2_);
-         }
+         blockstate.catchFire(p_176536_1_, p_176536_2_, face, null);
       }
-
    }
+   // CatServer end
 
    private BlockState getStateWithAge(IWorld p_235494_1_, BlockPos p_235494_2_, int p_235494_3_) {
       BlockState blockstate = getState(p_235494_1_, p_235494_2_);
@@ -228,7 +_,7 @@
 
    private boolean isValidFireLocation(IBlockReader p_196447_1_, BlockPos p_196447_2_) {
       for(Direction direction : Direction.values()) {
-         if (this.canBurn(p_196447_1_.getBlockState(p_196447_2_.relative(direction)))) {
+         if (this.canCatchFire(p_196447_1_, p_196447_2_.relative(direction), direction.getOpposite())) {
             return true;
          }
       }
@@ -244,13 +_,14 @@
 
          for(Direction direction : Direction.values()) {
             BlockState blockstate = p_176538_1_.getBlockState(p_176538_2_.relative(direction));
-            i = Math.max(this.getFlameOdds(blockstate), i);
+            i = Math.max(blockstate.getFireSpreadSpeed(p_176538_1_, p_176538_2_.relative(direction), direction.getOpposite()), i);
          }
 
          return i;
       }
    }
 
+   @Deprecated //Forge: Use canCatchFire with more context
    protected boolean canBurn(BlockState p_196446_1_) {
       return this.getFlameOdds(p_196446_1_) > 0;
    }
@@ -269,8 +_,21 @@
    }
 
    private void setFlammable(Block p_180686_1_, int p_180686_2_, int p_180686_3_) {
+      if (p_180686_1_ == Blocks.AIR) throw new IllegalArgumentException("Tried to set air on fire... This is bad.");
       this.flameOdds.put(p_180686_1_, p_180686_2_);
       this.burnOdds.put(p_180686_1_, p_180686_3_);
+   }
+
+   /**
+    * Side sensitive version that calls the block function.
+    *
+    * @param world The current world
+    * @param pos Block position
+    * @param face The side the fire is coming from
+    * @return True if the face can catch fire.
+    */
+   public boolean canCatchFire(IBlockReader world, BlockPos pos, Direction face) {
+      return world.getBlockState(pos).isFlammable(world, pos, face);
    }
 
    public static void bootStrap() {
