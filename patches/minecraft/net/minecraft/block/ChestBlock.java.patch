--- a/net/minecraft/block/ChestBlock.java
+++ b/net/minecraft/block/ChestBlock.java
@@ -324,8 +_,10 @@
       return p_185499_1_.setValue(FACING, p_185499_2_.rotate(p_185499_1_.getValue(FACING)));
    }
 
+   // Forge: Fixed MC-134110 Structure mirroring breaking apart double chests
    public BlockState mirror(BlockState p_185471_1_, Mirror p_185471_2_) {
-      return p_185471_1_.rotate(p_185471_2_.getRotation(p_185471_1_.getValue(FACING)));
+      BlockState rotated = p_185471_1_.rotate(p_185471_2_.getRotation(p_185471_1_.getValue(FACING)));
+      return p_185471_2_ == Mirror.NONE ? rotated : rotated.setValue(TYPE, rotated.getValue(TYPE).getOpposite());
    }
 
    protected void createBlockStateDefinition(StateContainer.Builder<Block, BlockState> p_206840_1_) {
@@ -335,4 +_,36 @@
    public boolean isPathfindable(BlockState p_196266_1_, IBlockReader p_196266_2_, BlockPos p_196266_3_, PathType p_196266_4_) {
       return false;
    }
+
+   // CraftBukkit start
+   public static class DoubleInventory implements INamedContainerProvider {
+
+      private final ChestTileEntity tileentitychest;
+      private final ChestTileEntity tileentitychest1;
+      public final DoubleSidedInventory inventorylargechest;
+
+      public DoubleInventory(ChestTileEntity tileentitychest, ChestTileEntity tileentitychest1, DoubleSidedInventory inventorylargechest) {
+         this.tileentitychest = tileentitychest;
+         this.tileentitychest1 = tileentitychest1;
+         this.inventorylargechest = inventorylargechest;
+      }
+
+      @Nullable
+      @Override
+      public Container createMenu(int i, PlayerInventory playerinventory, PlayerEntity entityhuman) {
+         if (this.tileentitychest.canOpen(entityhuman) && this.tileentitychest1.canOpen(entityhuman)) {
+            this.tileentitychest.unpackLootTable(playerinventory.player);
+            this.tileentitychest1.unpackLootTable(playerinventory.player);
+            return ChestContainer.sixRows(i, playerinventory, this.inventorylargechest);
+         }
+         return null;
+      }
+
+      @Override
+      public ITextComponent getDisplayName() {
+         return this.tileentitychest.hasCustomName() ? this.tileentitychest.getDisplayName()
+             : (this.tileentitychest1.hasCustomName() ? this.tileentitychest1.getDisplayName() : new TranslationTextComponent("container.chestDouble", new Object[0]));
+      }
+   }
+   // CraftBukkit end
 }
