--- a/net/minecraft/command/ICommandSource.java
+++ b/net/minecraft/command/ICommandSource.java
@@ -2,6 +_,7 @@
 
 import java.util.UUID;
 import net.minecraft.util.text.ITextComponent;
+import org.bukkit.command.CommandSender;
 
 public interface ICommandSource {
    ICommandSource NULL = new ICommandSource() {
@@ -19,6 +_,13 @@
       public boolean shouldInformAdmins() {
          return false;
       }
+
+      // CraftBukkit start
+      @Override
+      public CommandSender getBukkitSender(CommandSource wrapper) {
+         return wrapper.getServer().console;
+      }
+      // CraftBukkit end
    };
 
    void sendMessage(ITextComponent p_145747_1_, UUID p_145747_2_);
@@ -28,4 +_,39 @@
    boolean acceptsFailure();
 
    boolean shouldInformAdmins();
+
+   default CommandSender getBukkitSender(CommandSource wrapper) {
+      if (this instanceof net.minecraft.entity.Entity) {
+         return ((net.minecraft.entity.Entity) this).getBukkitEntity();
+      } else {
+         return new org.bukkit.craftbukkit.v1_16_R3.command.ServerCommandSender() {
+            @Override
+            public boolean isOp() {
+               return wrapper.hasPermission(4);
+            }
+
+            @Override
+            public void setOp(boolean value) {
+               // empty
+            }
+
+            @Override
+            public void sendMessage(@org.jetbrains.annotations.NotNull String message) {
+               ICommandSource.this.sendMessage(new net.minecraft.util.text.StringTextComponent(message + "\n"), net.minecraft.util.Util.NIL_UUID);
+            }
+
+            @Override
+            public void sendMessage(@org.jetbrains.annotations.NotNull String[] messages) {
+               for (String message : messages) {
+                  ICommandSource.this.sendMessage(new net.minecraft.util.text.StringTextComponent(message + "\n"), net.minecraft.util.Util.NIL_UUID);
+               }
+            }
+
+            @Override
+            public @org.jetbrains.annotations.NotNull String getName() {
+               return "";
+            }
+         };
+      }
+   }
 }
