--- a/net/minecraft/potion/Effect.java
+++ b/net/minecraft/potion/Effect.java
@@ -12,13 +_,18 @@
 import net.minecraft.entity.ai.attributes.AttributeModifierManager;
 import net.minecraft.entity.ai.attributes.ModifiableAttributeInstance;
 import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.entity.player.ServerPlayerEntity;
+import net.minecraft.network.play.server.SUpdateHealthPacket;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.Util;
 import net.minecraft.util.registry.Registry;
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.TranslationTextComponent;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
-public class Effect {
+public class Effect extends net.minecraftforge.registries.ForgeRegistryEntry<Effect> implements net.minecraftforge.common.extensions.IForgeEffect {
    private final Map<Attribute, AttributeModifier> attributeModifiers = Maps.newHashMap();
    private final EffectType category;
    private final int color;
@@ -42,26 +_,34 @@
    public void applyEffectTick(LivingEntity p_76394_1_, int p_76394_2_) {
       if (this == Effects.REGENERATION) {
          if (p_76394_1_.getHealth() < p_76394_1_.getMaxHealth()) {
-            p_76394_1_.heal(1.0F);
+            p_76394_1_.heal(1.0F, EntityRegainHealthEvent.RegainReason.MAGIC_REGEN); // CraftBukkit
          }
       } else if (this == Effects.POISON) {
          if (p_76394_1_.getHealth() > 1.0F) {
-            p_76394_1_.hurt(DamageSource.MAGIC, 1.0F);
+            p_76394_1_.hurt(CraftEventFactory.POISON, 1.0F); // CraftBukkit - DamageSource.MAGIC -> CraftEventFactory.POISON
          }
       } else if (this == Effects.WITHER) {
          p_76394_1_.hurt(DamageSource.WITHER, 1.0F);
       } else if (this == Effects.HUNGER && p_76394_1_ instanceof PlayerEntity) {
-         ((PlayerEntity)p_76394_1_).causeFoodExhaustion(0.005F * (float)(p_76394_2_ + 1));
+         ((PlayerEntity)p_76394_1_).causeFoodExhaustion(0.005F * (float)(p_76394_2_ + 1), org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.HUNGER_EFFECT);
       } else if (this == Effects.SATURATION && p_76394_1_ instanceof PlayerEntity) {
          if (!p_76394_1_.level.isClientSide) {
-            ((PlayerEntity)p_76394_1_).getFoodData().eat(p_76394_2_ + 1, 1.0F);
+            // CraftBukkit start
+            PlayerEntity entityhuman = (PlayerEntity) p_76394_1_;
+            int oldFoodLevel = entityhuman.getFoodData().foodLevel;
+            org.bukkit.event.entity.FoodLevelChangeEvent event = CraftEventFactory.callFoodLevelChangeEvent(entityhuman, p_76394_2_ + 1 + oldFoodLevel);
+            if (!event.isCancelled()) {
+               entityhuman.getFoodData().eat(event.getFoodLevel() - oldFoodLevel, 1.0F);
+            }
+            ((ServerPlayerEntity) entityhuman).connection.send(new SUpdateHealthPacket(((ServerPlayerEntity)entityhuman).getBukkitEntity().getScaledHealth(), entityhuman.getFoodData().foodLevel, entityhuman.getFoodData().saturationLevel));
+            // CraftBukkit end
          }
       } else if ((this != Effects.HEAL || p_76394_1_.isInvertedHealAndHarm()) && (this != Effects.HARM || !p_76394_1_.isInvertedHealAndHarm())) {
          if (this == Effects.HARM && !p_76394_1_.isInvertedHealAndHarm() || this == Effects.HEAL && p_76394_1_.isInvertedHealAndHarm()) {
             p_76394_1_.hurt(DamageSource.MAGIC, (float)(6 << p_76394_2_));
          }
       } else {
-         p_76394_1_.heal((float)Math.max(4 << p_76394_2_, 0));
+         p_76394_1_.heal((float)Math.max(4 << p_76394_2_, 0), EntityRegainHealthEvent.RegainReason.MAGIC); // CraftBukkit
       }
 
    }
@@ -80,7 +_,7 @@
          }
       } else {
          int i = (int)(p_180793_5_ * (double)(4 << p_180793_4_) + 0.5D);
-         p_180793_3_.heal((float)i);
+         p_180793_3_.heal((float)i, RegainReason.MAGIC); // CraftBukkit
       }
 
    }
