--- a/net/minecraft/advancements/PlayerAdvancements.java
+++ b/net/minecraft/advancements/PlayerAdvancements.java
@@ -53,7 +_,7 @@
    private final DataFixer dataFixer;
    private final PlayerList playerList;
    private final File file;
-   private final Map<Advancement, AdvancementProgress> advancements = Maps.newLinkedHashMap();
+   public final Map<Advancement, AdvancementProgress> advancements = Maps.newLinkedHashMap();
    private final Set<Advancement> visible = Sets.newLinkedHashSet();
    private final Set<Advancement> visibilityChanged = Sets.newLinkedHashSet();
    private final Set<Advancement> progressChanged = Sets.newLinkedHashSet();
@@ -146,7 +_,11 @@
             for(Entry<ResourceLocation, AdvancementProgress> entry : stream.collect(Collectors.toList())) {
                Advancement advancement = p_240921_1_.getAdvancement(entry.getKey());
                if (advancement == null) {
-                  LOGGER.warn("Ignored advancement '{}' in progress file {} - it doesn't exist anymore?", entry.getKey(), this.file);
+                  // CraftBukkit start
+                  if (entry.getKey().getNamespace().equals("minecraft")) {
+                     LOGGER.warn("Ignored advancement '{}' in progress file {} - it doesn't exist anymore?", entry.getKey(), this.file);
+                  }
+                  // CraftBukkit end
                } else {
                   this.startProgress(advancement, entry.getValue());
                }
@@ -159,11 +_,16 @@
       }
 
       this.checkForAutomaticTriggers(p_240921_1_);
+
+      if (net.minecraftforge.common.ForgeConfig.SERVER.fixAdvancementLoading.get())
+         net.minecraftforge.common.AdvancementLoadFix.loadVisibility(this, this.visible, this.visibilityChanged, this.advancements, this.progressChanged, this::shouldBeVisible);
+      else
       this.ensureAllVisible();
       this.registerListeners(p_240921_1_);
    }
 
    public void save() {
+      if (org.spigotmc.SpigotConfig.disableAdvancementSaving) return; // Spigot
       Map<ResourceLocation, AdvancementProgress> map = Maps.newHashMap();
 
       for(Entry<Advancement, AdvancementProgress> entry : this.advancements.entrySet()) {
@@ -192,6 +_,8 @@
    }
 
    public boolean award(Advancement p_192750_1_, String p_192750_2_) {
+      // Forge: don't grant advancements for fake players
+      if (this.player instanceof net.minecraftforge.common.util.FakePlayer) return false;
       boolean flag = false;
       AdvancementProgress advancementprogress = this.getOrStartProgress(p_192750_1_);
       boolean flag1 = advancementprogress.isDone();
@@ -204,6 +_,7 @@
             if (p_192750_1_.getDisplay() != null && p_192750_1_.getDisplay().shouldAnnounceChat() && this.player.level.getGameRules().getBoolean(GameRules.RULE_ANNOUNCE_ADVANCEMENTS)) {
                this.playerList.broadcastMessage(new TranslationTextComponent("chat.type.advancement." + p_192750_1_.getDisplay().getFrame().getName(), this.player.getDisplayName(), p_192750_1_.getChatComponent()), ChatType.SYSTEM, Util.NIL_UUID);
             }
+            net.minecraftforge.common.ForgeHooks.onAdvancement(this.player, p_192750_1_);
          }
       }
 
