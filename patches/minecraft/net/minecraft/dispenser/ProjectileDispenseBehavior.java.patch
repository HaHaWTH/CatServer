--- a/net/minecraft/dispenser/ProjectileDispenseBehavior.java
+++ b/net/minecraft/dispenser/ProjectileDispenseBehavior.java
@@ -1,20 +_,47 @@
 package net.minecraft.dispenser;
 
 import net.minecraft.block.DispenserBlock;
+import net.minecraft.entity.Entity;
 import net.minecraft.entity.projectile.ProjectileEntity;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.Direction;
 import net.minecraft.world.World;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
 
 public abstract class ProjectileDispenseBehavior extends DefaultDispenseItemBehavior {
    public ItemStack execute(IBlockSource p_82487_1_, ItemStack p_82487_2_) {
       World world = p_82487_1_.getLevel();
       IPosition iposition = DispenserBlock.getDispensePosition(p_82487_1_);
       Direction direction = p_82487_1_.getBlockState().getValue(DispenserBlock.FACING);
-      ProjectileEntity projectileentity = this.getProjectile(world, iposition, p_82487_2_);
-      projectileentity.shoot((double)direction.getStepX(), (double)((float)direction.getStepY() + 0.1F), (double)direction.getStepZ(), this.getPower(), this.getUncertainty());
-      world.addFreshEntity(projectileentity);
-      p_82487_2_.shrink(1);
+      ProjectileEntity iprojectile = this.getProjectile(world, iposition, p_82487_2_);
+      // CraftBukkit start
+      ItemStack itemstack2 = p_82487_2_.split(1);
+      org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+      CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack2);
+      BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(direction.getStepX(), direction.getStepY() + 0.1f, (double) direction.getStepZ()));
+      if (!DispenserBlock.eventFired) {
+         world.getCBServer().getPluginManager().callEvent(event);
+      }
+      if (event.isCancelled()) {
+         p_82487_2_.grow(1);
+         return p_82487_2_;
+      }
+      if (!event.getItem().equals(craftItem)) {
+         p_82487_2_.grow(1);
+         // Chain to handler for new item
+         ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+         IDispenseItemBehavior idispensebehavior = DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+         if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+            idispensebehavior.dispense(p_82487_1_, eventStack);
+            return p_82487_2_;
+         }
+      }
+      iprojectile.shoot(event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), this.getPower(), this.getUncertainty());
+      ((Entity) iprojectile).projectileSource = new org.bukkit.craftbukkit.v1_16_R3.projectiles.CraftBlockProjectileSource(p_82487_1_.getEntity());
+      // CraftBukkit end
+      world.addFreshEntity((Entity) iprojectile);
+      // stack.shrink(1); // CraftBukkit - Handled during event processing
       return p_82487_2_;
    }
 
