--- a/net/minecraft/dispenser/IDispenseItemBehavior.java
+++ b/net/minecraft/dispenser/IDispenseItemBehavior.java
@@ -11,11 +_,14 @@
 import net.minecraft.block.CarvedPumpkinBlock;
 import net.minecraft.block.DispenserBlock;
 import net.minecraft.block.IBucketPickupHandler;
+import net.minecraft.block.ILiquidContainer;
 import net.minecraft.block.RespawnAnchorBlock;
+import net.minecraft.block.SaplingBlock;
 import net.minecraft.block.ShulkerBoxBlock;
 import net.minecraft.block.SkullBlock;
 import net.minecraft.block.TNTBlock;
 import net.minecraft.block.WitherSkeletonSkullBlock;
+import net.minecraft.block.material.Material;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.IEquipable;
@@ -67,8 +_,15 @@
 import net.minecraft.world.IWorld;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.Location;
+import org.bukkit.TreeType;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_16_R3.util.DummyGeneratorAccess;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.event.world.StructureGrowEvent;
 
 public interface IDispenseItemBehavior {
+   org.apache.logging.log4j.Logger LOGGER = org.apache.logging.log4j.LogManager.getLogger();
    IDispenseItemBehavior NOOP = (p_210297_0_, p_210297_1_) -> {
       return p_210297_1_;
    };
@@ -169,8 +_,39 @@
          public ItemStack execute(IBlockSource p_82487_1_, ItemStack p_82487_2_) {
             Direction direction = p_82487_1_.getBlockState().getValue(DispenserBlock.FACING);
             EntityType<?> entitytype = ((SpawnEggItem)p_82487_2_.getItem()).getType(p_82487_2_.getTag());
-            entitytype.spawn(p_82487_1_.getLevel(), p_82487_2_, (PlayerEntity)null, p_82487_1_.getPos().relative(direction), SpawnReason.DISPENSER, direction != Direction.UP, false);
-            p_82487_2_.shrink(1);
+
+            // CraftBukkit start
+            World world = p_82487_1_.getLevel();
+            ItemStack itemstack1 = p_82487_2_.split(1);
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+            BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(0, 0, 0));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               p_82487_2_.grow(1);
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               p_82487_2_.grow(1);
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior)DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+
+            try { // Forge : fix potential crash
+               entitytype.spawn(p_82487_1_.getLevel(), p_82487_2_, (PlayerEntity)null, p_82487_1_.getPos().relative(direction), SpawnReason.DISPENSER, direction != Direction.UP, false);
+            } catch (Exception e) {
+               LOGGER.error("Error while dispensing spawn egg from dispenser at {}", p_82487_1_.getPos(), e);
+               return ItemStack.EMPTY;
+            }
+            // stack.shrink(1); // Handled during event processing
+            // CraftBukkit end
             return p_82487_2_;
          }
       };
@@ -184,11 +_,36 @@
             Direction direction = p_82487_1_.getBlockState().getValue(DispenserBlock.FACING);
             BlockPos blockpos = p_82487_1_.getPos().relative(direction);
             World world = p_82487_1_.getLevel();
+
+            // CraftBukkit start
+            ItemStack itemstack1 = p_82487_2_.split(1);
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+            BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(0, 0, 0));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               p_82487_2_.grow(1);
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               p_82487_2_.grow(1);
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            // CraftBukkit end
+
             ArmorStandEntity armorstandentity = new ArmorStandEntity(world, (double)blockpos.getX() + 0.5D, (double)blockpos.getY(), (double)blockpos.getZ() + 0.5D);
             EntityType.updateCustomEntityTag(world, (PlayerEntity)null, armorstandentity, p_82487_2_.getTag());
             armorstandentity.yRot = direction.toYRot();
             world.addFreshEntity(armorstandentity);
-            p_82487_2_.shrink(1);
+            // stack.shrink(1);  // CraftBukkit - Handled during event processing
             return p_82487_2_;
          }
       });
@@ -270,11 +_,43 @@
       DispenserBlock.registerBehavior(Items.FIREWORK_ROCKET, new DefaultDispenseItemBehavior() {
          public ItemStack execute(IBlockSource p_82487_1_, ItemStack p_82487_2_) {
             Direction direction = p_82487_1_.getBlockState().getValue(DispenserBlock.FACING);
-            FireworkRocketEntity fireworkrocketentity = new FireworkRocketEntity(p_82487_1_.getLevel(), p_82487_2_, p_82487_1_.x(), p_82487_1_.y(), p_82487_1_.x(), true);
+            double d0 = (double)direction.getStepX();
+            double d1 = (double)direction.getStepY();
+            double d2 = (double)direction.getStepZ();
+            double d3 = p_82487_1_.x() + d0;
+            double d4 = (double)((float)p_82487_1_.getPos().getY() + 0.2F);
+            double d5 = p_82487_1_.z() + d2;
+
+            // CraftBukkit start
+            World world = p_82487_1_.getLevel();
+            ItemStack itemstack1 = p_82487_2_.split(1);
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+            BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1, d2));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               p_82487_2_.grow(1);
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               p_82487_2_.grow(1);
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return itemstack1;
+               }
+            }
+            itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
+            FireworkRocketEntity fireworkrocketentity = new FireworkRocketEntity(p_82487_1_.getLevel(), itemstack1, p_82487_1_.x(), p_82487_1_.y(), p_82487_1_.x(), true); // Paper - GH-2871 - fix last firework in stack having no effects when dispensed
             IDispenseItemBehavior.setEntityPokingOutOfBlock(p_82487_1_, fireworkrocketentity, direction);
             fireworkrocketentity.shoot((double)direction.getStepX(), (double)direction.getStepY(), (double)direction.getStepZ(), 0.5F, 1.0F);
             p_82487_1_.getLevel().addFreshEntity(fireworkrocketentity);
-            p_82487_2_.shrink(1);
+            //stack.shrink(1); // Handled during event processing
+            // CraftBukkit end
             return p_82487_2_;
          }
 
@@ -294,10 +_,34 @@
             double d3 = random.nextGaussian() * 0.05D + (double)direction.getStepX();
             double d4 = random.nextGaussian() * 0.05D + (double)direction.getStepY();
             double d5 = random.nextGaussian() * 0.05D + (double)direction.getStepZ();
-            world.addFreshEntity(Util.make(new SmallFireballEntity(world, d0, d1, d2, d3, d4, d5), (p_229425_1_) -> {
-               p_229425_1_.setItem(p_82487_2_);
-            }));
-            p_82487_2_.shrink(1);
+            // CraftBukkit start
+            ItemStack itemstack1 = p_82487_2_.split(1);
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+            BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d3, d4, d5));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               p_82487_2_.grow(1);
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               p_82487_2_.grow(1);
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            SmallFireballEntity entitysmallfireball = new SmallFireballEntity(world, d0, d1, d2, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ());
+            entitysmallfireball.setItem(itemstack1);
+            entitysmallfireball.projectileSource = new org.bukkit.craftbukkit.v1_16_R3.projectiles.CraftBlockProjectileSource((DispenserTileEntity) p_82487_1_.getEntity());
+            world.addFreshEntity(entitysmallfireball);
+            // stack.shrink(1); // Handled during event processing
+            // CraftBukkit end
             return p_82487_2_;
          }
 
@@ -318,9 +_,48 @@
             BucketItem bucketitem = (BucketItem)p_82487_2_.getItem();
             BlockPos blockpos = p_82487_1_.getPos().relative(p_82487_1_.getBlockState().getValue(DispenserBlock.FACING));
             World world = p_82487_1_.getLevel();
+
+            // CraftBukkit start
+            int x = blockpos.getX();
+            int y = blockpos.getY();
+            int z = blockpos.getZ();
+            BlockState iblockdata = world.getBlockState(blockpos);
+            Material material = iblockdata.getMaterial();
+            if (world.isEmptyBlock(blockpos) || !material.isSolid() || material.isReplaceable() || ((iblockdata.getBlock() instanceof ILiquidContainer) && ((ILiquidContainer) iblockdata.getBlock()).canPlaceLiquid(world, blockpos, iblockdata, bucketitem.getFluid()))) {
+               org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+               CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+               BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(x, y, z));
+               if (!DispenserBlock.eventFired) {
+                  world.getCBServer().getPluginManager().callEvent(event);
+               }
+               if (event.isCancelled()) {
+                  return p_82487_2_;
+               }
+               if (!event.getItem().equals(craftItem)) {
+                  // Chain to handler for new item
+                  ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+                  IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+                  if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                     idispensebehavior.dispense(p_82487_1_, eventStack);
+                     return p_82487_2_;
+                  }
+               }
+               bucketitem = (BucketItem) CraftItemStack.asNMSCopy(event.getItem()).getItem();
+            }
+            // CraftBukkit end
+
             if (bucketitem.emptyBucket((PlayerEntity)null, world, blockpos, (BlockRayTraceResult)null)) {
                bucketitem.checkExtraContent(world, p_82487_2_, blockpos);
-               return new ItemStack(Items.BUCKET);
+               // CraftBukkit start - Handle stacked buckets
+               Item item = Items.BUCKET;
+               p_82487_2_.shrink(1);
+               if (p_82487_2_.isEmpty()) {
+                  p_82487_2_ = new ItemStack(Items.BUCKET);
+               } else if (((DispenserTileEntity) p_82487_1_.getEntity()).addItem(new ItemStack(item)) < 0) {
+                  this.defaultDispenseItemBehavior.dispense(p_82487_1_, new ItemStack(item));
+               }
+               // CraftBukkit end
+               return p_82487_2_;
             } else {
                return this.defaultDispenseItemBehavior.dispense(p_82487_1_, p_82487_2_);
             }
@@ -341,11 +_,34 @@
             BlockState blockstate = iworld.getBlockState(blockpos);
             Block block = blockstate.getBlock();
             if (block instanceof IBucketPickupHandler) {
-               Fluid fluid = ((IBucketPickupHandler)block).takeLiquid(iworld, blockpos, blockstate);
+               Fluid fluid = ((IBucketPickupHandler)block).takeLiquid(DummyGeneratorAccess.INSTANCE, blockpos, blockstate); // CraftBukkit
                if (!(fluid instanceof FlowingFluid)) {
                   return super.execute(p_82487_1_, p_82487_2_);
                } else {
                   Item item = fluid.getBucket();
+
+                  // CraftBukkit start
+                  org.bukkit.block.Block bukkitBlock = ((World) iworld).getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+                  CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+                  BlockDispenseEvent event = new BlockDispenseEvent(bukkitBlock, craftItem.clone(), new org.bukkit.util.Vector(blockpos.getX(), blockpos.getY(), blockpos.getZ()));
+                  if (!DispenserBlock.eventFired) {
+                     ((World) iworld).getCBServer().getPluginManager().callEvent(event);
+                  }
+                  if (event.isCancelled()) {
+                     return p_82487_2_;
+                  }
+                  if (!event.getItem().equals(craftItem)) {
+                     // Chain to handler for new item
+                     ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+                     IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+                     if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                        idispensebehavior.dispense(p_82487_1_, eventStack);
+                        return p_82487_2_;
+                     }
+                  }
+                  fluid = ((IBucketPickupHandler) block).takeLiquid(iworld, blockpos, blockstate); // From above
+                  // CraftBukkit end
+
                   p_82487_2_.shrink(1);
                   if (p_82487_2_.isEmpty()) {
                      return new ItemStack(item);
@@ -365,16 +_,43 @@
       DispenserBlock.registerBehavior(Items.FLINT_AND_STEEL, new OptionalDispenseBehavior() {
          protected ItemStack execute(IBlockSource p_82487_1_, ItemStack p_82487_2_) {
             World world = p_82487_1_.getLevel();
+
+            // CraftBukkit start
+            org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+            BlockDispenseEvent event = new BlockDispenseEvent(bukkitBlock, craftItem.clone(), new org.bukkit.util.Vector(0, 0, 0));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            // CraftBukkit end
+
             this.setSuccess(true);
             Direction direction = p_82487_1_.getBlockState().getValue(DispenserBlock.FACING);
             BlockPos blockpos = p_82487_1_.getPos().relative(direction);
             BlockState blockstate = world.getBlockState(blockpos);
             if (AbstractFireBlock.canBePlacedAt(world, blockpos, direction)) {
-               world.setBlockAndUpdate(blockpos, AbstractFireBlock.getState(world, blockpos));
+               // CraftBukkit start - Ignition by dispensing flint and steel
+               if (!org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callBlockIgniteEvent(world, blockpos, p_82487_1_.getPos()).isCancelled()) {
+                  world.setBlockAndUpdate(blockpos, Blocks.FIRE.defaultBlockState());
+               }
+               // CraftBukkit end
             } else if (CampfireBlock.canLight(blockstate)) {
                world.setBlockAndUpdate(blockpos, blockstate.setValue(BlockStateProperties.LIT, Boolean.valueOf(true)));
-            } else if (blockstate.getBlock() instanceof TNTBlock) {
-               TNTBlock.explode(world, blockpos);
+            } else if (blockstate.isFlammable(world, blockpos, p_82487_1_.getBlockState().getValue(DispenserBlock.FACING).getOpposite())) {
+               blockstate.catchFire(world, blockpos, p_82487_1_.getBlockState().getValue(DispenserBlock.FACING).getOpposite(), null);
+               if (blockstate.getBlock() instanceof TNTBlock)
                world.removeBlock(blockpos, false);
             } else {
                this.setSuccess(false);
@@ -392,12 +_,54 @@
             this.setSuccess(true);
             World world = p_82487_1_.getLevel();
             BlockPos blockpos = p_82487_1_.getPos().relative(p_82487_1_.getBlockState().getValue(DispenserBlock.FACING));
+            // CraftBukkit start
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+            BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(0, 0, 0));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            world.captureTreeGeneration = true;
+            // CraftBukkit end
             if (!BoneMealItem.growCrop(p_82487_2_, world, blockpos) && !BoneMealItem.growWaterPlant(p_82487_2_, world, blockpos, (Direction)null)) {
                this.setSuccess(false);
             } else if (!world.isClientSide) {
                world.levelEvent(2005, blockpos, 0);
             }
 
+            // CraftBukkit start
+            world.captureTreeGeneration = false;
+            if (world.capturedBlockStates.size() > 0) {
+               TreeType treeType = SaplingBlock.treeType;
+               SaplingBlock.treeType = null;
+               Location location = new Location(world.getWorld(), blockpos.getX(), blockpos.getY(), blockpos.getZ());
+               List<org.bukkit.block.BlockState> blocks = new java.util.ArrayList<>(world.capturedBlockStates.values());
+               world.capturedBlockStates.clear();
+               StructureGrowEvent structureEvent = null;
+               if (treeType != null) {
+                  structureEvent = new StructureGrowEvent(location, treeType, false, null, blocks);
+                  org.bukkit.Bukkit.getPluginManager().callEvent(structureEvent);
+               }
+               if (structureEvent == null || !structureEvent.isCancelled()) {
+                  for (org.bukkit.block.BlockState blockstate : blocks) {
+                     blockstate.update(true);
+                  }
+               }
+            }
+            // CraftBukkit end
+
             return p_82487_2_;
          }
       });
@@ -405,10 +_,35 @@
          protected ItemStack execute(IBlockSource p_82487_1_, ItemStack p_82487_2_) {
             World world = p_82487_1_.getLevel();
             BlockPos blockpos = p_82487_1_.getPos().relative(p_82487_1_.getBlockState().getValue(DispenserBlock.FACING));
-            TNTEntity tntentity = new TNTEntity(world, (double)blockpos.getX() + 0.5D, (double)blockpos.getY(), (double)blockpos.getZ() + 0.5D, (LivingEntity)null);
+            // TNTEntity tntentity = new TNTEntity(world, (double)blockpos.getX() + 0.5D, (double)blockpos.getY(), (double)blockpos.getZ() + 0.5D, (LivingEntity)null);
+            // CraftBukkit start
+            ItemStack itemstack1 = p_82487_2_.split(1);
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+            BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector((double) blockpos.getX() + 0.5D, (double) blockpos.getY(), (double) blockpos.getZ() + 0.5D));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               p_82487_2_.grow(1);
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               p_82487_2_.grow(1);
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            TNTEntity tntentity = new TNTEntity(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), (LivingEntity) null);
+            // CraftBukkit end
+
             world.addFreshEntity(tntentity);
             world.playSound((PlayerEntity)null, tntentity.getX(), tntentity.getY(), tntentity.getZ(), SoundEvents.TNT_PRIMED, SoundCategory.BLOCKS, 1.0F, 1.0F);
-            p_82487_2_.shrink(1);
+            // stack.shrink(1); // CraftBukkit - handled above
             return p_82487_2_;
          }
       });
@@ -428,6 +_,26 @@
             World world = p_82487_1_.getLevel();
             Direction direction = p_82487_1_.getBlockState().getValue(DispenserBlock.FACING);
             BlockPos blockpos = p_82487_1_.getPos().relative(direction);
+            // CraftBukkit start
+            org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+            BlockDispenseEvent event = new BlockDispenseEvent(bukkitBlock, craftItem.clone(), new org.bukkit.util.Vector(blockpos.getX(), blockpos.getY(), blockpos.getZ()));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            // CraftBukkit end
             if (world.isEmptyBlock(blockpos) && WitherSkeletonSkullBlock.canSpawnMob(world, blockpos, p_82487_2_)) {
                world.setBlock(blockpos, Blocks.WITHER_SKELETON_SKULL.defaultBlockState().setValue(SkullBlock.ROTATION, Integer.valueOf(direction.getAxis() == Direction.Axis.Y ? 0 : direction.getOpposite().get2DDataValue() * 4)), 3);
                TileEntity tileentity = world.getBlockEntity(blockpos);
@@ -449,6 +_,28 @@
             World world = p_82487_1_.getLevel();
             BlockPos blockpos = p_82487_1_.getPos().relative(p_82487_1_.getBlockState().getValue(DispenserBlock.FACING));
             CarvedPumpkinBlock carvedpumpkinblock = (CarvedPumpkinBlock)Blocks.CARVED_PUMPKIN;
+
+            // CraftBukkit start
+            org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+            BlockDispenseEvent event = new BlockDispenseEvent(bukkitBlock, craftItem.clone(), new org.bukkit.util.Vector(blockpos.getX(), blockpos.getY(), blockpos.getZ()));
+            if (!DispenserBlock.eventFired) {
+               world.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            // CraftBukkit end
+
             if (world.isEmptyBlock(blockpos) && carvedpumpkinblock.canSpawnGolem(world, blockpos)) {
                if (!world.isClientSide) {
                   world.setBlock(blockpos, carvedpumpkinblock.defaultBlockState(), 3);
@@ -490,6 +_,28 @@
             ServerWorld serverworld = p_82487_1_.getLevel();
             BlockPos blockpos = p_82487_1_.getPos().relative(p_82487_1_.getBlockState().getValue(DispenserBlock.FACING));
             BlockState blockstate = serverworld.getBlockState(blockpos);
+
+            // CraftBukkit start
+            org.bukkit.block.Block bukkitBlock = serverworld.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+            CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+            BlockDispenseEvent event = new BlockDispenseEvent(bukkitBlock, craftItem.clone(), new org.bukkit.util.Vector(blockpos.getX(), blockpos.getY(), blockpos.getZ()));
+            if (!DispenserBlock.eventFired) {
+               serverworld.getCBServer().getPluginManager().callEvent(event);
+            }
+            if (event.isCancelled()) {
+               return p_82487_2_;
+            }
+            if (!event.getItem().equals(craftItem)) {
+               // Chain to handler for new item
+               ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+               IDispenseItemBehavior idispensebehavior = (IDispenseItemBehavior) DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+               if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+                  idispensebehavior.dispense(p_82487_1_, eventStack);
+                  return p_82487_2_;
+               }
+            }
+            // CraftBukkit end
+
             if (blockstate.is(BlockTags.BEEHIVES, (p_239787_0_) -> {
                return p_239787_0_.hasProperty(BeehiveBlock.HONEY_LEVEL);
             }) && blockstate.getValue(BeehiveBlock.HONEY_LEVEL) >= 5) {
