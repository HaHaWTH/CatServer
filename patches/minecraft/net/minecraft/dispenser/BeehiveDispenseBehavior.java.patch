--- a/net/minecraft/dispenser/BeehiveDispenseBehavior.java
+++ b/net/minecraft/dispenser/BeehiveDispenseBehavior.java
@@ -17,13 +_,36 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
 
 public class BeehiveDispenseBehavior extends OptionalDispenseBehavior {
    protected ItemStack execute(IBlockSource p_82487_1_, ItemStack p_82487_2_) {
       World world = p_82487_1_.getLevel();
+      // CraftBukkit start
+      org.bukkit.block.Block bukkitBlock = world.getWorld().getBlockAt(p_82487_1_.getPos().getX(), p_82487_1_.getPos().getY(), p_82487_1_.getPos().getZ());
+      CraftItemStack craftItem = CraftItemStack.asCraftMirror(p_82487_2_);
+      BlockDispenseEvent event = new BlockDispenseEvent(bukkitBlock, craftItem.clone(), new org.bukkit.util.Vector(0, 0, 0));
+      if (!DispenserBlock.eventFired) {
+         world.getCBServer().getPluginManager().callEvent(event);
+      }
+      if (event.isCancelled()) {
+         return p_82487_2_;
+      }
+      if (!event.getItem().equals(craftItem)) {
+         // Chain to handler for new item
+         ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+         IDispenseItemBehavior idispensebehavior = DispenserBlock.DISPENSER_REGISTRY.get(eventStack.getItem());
+         if (idispensebehavior != IDispenseItemBehavior.NOOP && idispensebehavior != this) {
+            idispensebehavior.dispense(p_82487_1_, eventStack);
+            return p_82487_2_;
+         }
+      }
+      // CraftBukkit end
       if (!world.isClientSide()) {
          BlockPos blockpos = p_82487_1_.getPos().relative(p_82487_1_.getBlockState().getValue(DispenserBlock.FACING));
-         this.setSuccess(tryShearBeehive((ServerWorld)world, blockpos) || tryShearLivingEntity((ServerWorld)world, blockpos));
+         this.setSuccess(tryShearBeehive((ServerWorld)world, blockpos) || shear((ServerWorld)world, blockpos, bukkitBlock, craftItem));  // CraftBukkit
          if (this.isSuccess() && p_82487_2_.hurt(1, world.getRandom(), (ServerPlayerEntity)null)) {
             p_82487_2_.setCount(0);
          }
@@ -47,11 +_,16 @@
       return false;
    }
 
-   private static boolean tryShearLivingEntity(ServerWorld p_239798_0_, BlockPos p_239798_1_) {
-      for(LivingEntity livingentity : p_239798_0_.getEntitiesOfClass(LivingEntity.class, new AxisAlignedBB(p_239798_1_), EntityPredicates.NO_SPECTATORS)) {
+   private static boolean shear(ServerWorld world, BlockPos pos, org.bukkit.block.Block bukkitBlock, CraftItemStack craftItem) { // CraftBukkit - add args
+      for(LivingEntity livingentity : world.getEntitiesOfClass(LivingEntity.class, new AxisAlignedBB(pos), EntityPredicates.NO_SPECTATORS)) {
          if (livingentity instanceof IShearable) {
             IShearable ishearable = (IShearable)livingentity;
             if (ishearable.readyForShearing()) {
+               // CraftBukkit start
+               if (CraftEventFactory.callBlockShearEntityEvent(livingentity, bukkitBlock, craftItem).isCancelled()) {
+                  continue;
+               }
+               // CraftBukkit end
                ishearable.shear(SoundCategory.BLOCKS);
                return true;
             }
