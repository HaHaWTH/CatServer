--- a/net/minecraft/item/CrossbowItem.java
+++ b/net/minecraft/item/CrossbowItem.java
@@ -5,6 +_,8 @@
 import java.util.Random;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.event.entity.EntityLoadCrossbowEvent;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.client.util.ITooltipFlag;
 import net.minecraft.enchantment.EnchantmentHelper;
@@ -35,6 +_,8 @@
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.Bukkit;
+import org.bukkit.inventory.EquipmentSlot;
 
 public class CrossbowItem extends ShootableItem implements IVanishable {
    private boolean startSoundPlayed = false;
@@ -74,7 +_,20 @@
    public void releaseUsing(ItemStack p_77615_1_, World p_77615_2_, LivingEntity p_77615_3_, int p_77615_4_) {
       int i = this.getUseDuration(p_77615_1_) - p_77615_4_;
       float f = getPowerForTime(i, p_77615_1_);
-      if (f >= 1.0F && !isCharged(p_77615_1_) && tryLoadProjectiles(p_77615_3_, p_77615_1_)) {
+      // Paper start
+      if (f >= 1.0F && !isCharged(p_77615_1_) /*&& tryLoadProjectiles(p_77615_3_, p_77615_1_)*/) {
+         final EntityLoadCrossbowEvent event =
+                 new EntityLoadCrossbowEvent(
+                         (org.bukkit.entity.LivingEntity) p_77615_3_.getBukkitEntity(),
+                         org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack.asCraftMirror(p_77615_1_),
+                         p_77615_3_.getUsedItemHand() == Hand.MAIN_HAND ? EquipmentSlot.HAND : EquipmentSlot.OFF_HAND
+                 );
+         Bukkit.getServer().getPluginManager().callEvent(event);
+         shouldConsume = event.shouldConsumeItem();
+         if (event.isCancelled() || !tryLoadProjectiles(p_77615_3_, p_77615_1_)) {
+            return;
+         }
+         // Paper end
          setCharged(p_77615_1_, true);
          SoundCategory soundcategory = p_77615_3_ instanceof PlayerEntity ? SoundCategory.PLAYERS : SoundCategory.HOSTILE;
          p_77615_2_.playSound((PlayerEntity)null, p_77615_3_.getX(), p_77615_3_.getY(), p_77615_3_.getZ(), SoundEvents.CROSSBOW_LOADING_END, soundcategory, 1.0F, 1.0F / (random.nextFloat() * 0.5F + 1.0F) + 0.2F);
@@ -82,10 +_,18 @@
 
    }
 
+   // For compatibility
+   /*private static boolean tryLoadProjectiles(LivingEntity p_220021_0_, ItemStack p_220021_1_) {
+      return tryLoadProjectiles(p_220021_0_, p_220021_1_, true);
+   }*/
+
+
+   private static boolean shouldConsume = true;
+
    private static boolean tryLoadProjectiles(LivingEntity p_220021_0_, ItemStack p_220021_1_) {
       int i = EnchantmentHelper.getItemEnchantmentLevel(Enchantments.MULTISHOT, p_220021_1_);
       int j = i == 0 ? 1 : 3;
-      boolean flag = p_220021_0_ instanceof PlayerEntity && ((PlayerEntity)p_220021_0_).abilities.instabuild;
+      boolean flag = !shouldConsume || p_220021_0_ instanceof PlayerEntity && ((PlayerEntity)p_220021_0_).abilities.instabuild; // Paper
       ItemStack itemstack = p_220021_0_.getProjectile(p_220021_1_);
       ItemStack itemstack1 = itemstack.copy();
 
@@ -99,11 +_,17 @@
             itemstack1 = itemstack.copy();
          }
 
+         // CraftBukkit start - SPIGOT-4870, MC-150847
+         else if (itemstack1.isEmpty()) {
+            return false;
+         }
+         // CraftBukkit end
+
          if (!loadProjectile(p_220021_0_, p_220021_1_, itemstack, k > 0, flag)) {
             return false;
          }
       }
-
+      shouldConsume = true;
       return true;
    }
 
@@ -209,10 +_,25 @@
             projectileentity.shoot((double)vector3f.x(), (double)vector3f.y(), (double)vector3f.z(), p_220016_7_, p_220016_8_);
          }
 
+         // CraftBukkit start
+         org.bukkit.event.entity.EntityShootBowEvent event = org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callEntityShootBowEvent(p_220016_1_, p_220016_3_, p_220016_4_, projectileentity, p_220016_1_.getUsedItemHand(), p_220016_5_, true);
+         if (event.isCancelled()) {
+            event.getProjectile().remove();
+            return;
+         }
+         // CraftBukkit end
+
          p_220016_3_.hurtAndBreak(flag ? 3 : 1, p_220016_1_, (p_220017_1_) -> {
             p_220017_1_.broadcastBreakEvent(p_220016_2_);
          });
-         p_220016_0_.addFreshEntity(projectileentity);
+         // CraftBukkit start
+         if (event.getProjectile() == projectileentity.getBukkitEntity() && !p_220016_0_.addFreshEntity((net.minecraft.entity.Entity) projectileentity)) {
+            if (p_220016_1_ instanceof ServerPlayerEntity) {
+               ((ServerPlayerEntity) p_220016_1_).getBukkitEntity().updateInventory();
+            }
+            return;
+         }
+         // CraftBukkit end
          p_220016_0_.playSound((PlayerEntity)null, p_220016_1_.getX(), p_220016_1_.getY(), p_220016_1_.getZ(), SoundEvents.CROSSBOW_SHOOT, SoundCategory.PLAYERS, 1.0F, p_220016_5_);
       }
    }
