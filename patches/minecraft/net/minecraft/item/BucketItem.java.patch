--- a/net/minecraft/item/BucketItem.java
+++ b/net/minecraft/item/BucketItem.java
@@ -12,6 +_,7 @@
 import net.minecraft.fluid.FlowingFluid;
 import net.minecraft.fluid.Fluid;
 import net.minecraft.fluid.Fluids;
+import net.minecraft.network.play.server.SChangeBlockPacket;
 import net.minecraft.particles.ParticleTypes;
 import net.minecraft.stats.Stats;
 import net.minecraft.tags.FluidTags;
@@ -28,18 +_,37 @@
 import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.world.IWorld;
 import net.minecraft.world.World;
+import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.util.DummyGeneratorAccess;
+import org.bukkit.event.player.PlayerBucketEmptyEvent;
+import org.bukkit.event.player.PlayerBucketFillEvent;
 
 public class BucketItem extends Item {
    private final Fluid content;
 
+   // Forge: Use the other constructor that takes a Supplier
+   @Deprecated
    public BucketItem(Fluid p_i49025_1_, Item.Properties p_i49025_2_) {
       super(p_i49025_2_);
       this.content = p_i49025_1_;
+      this.fluidSupplier = p_i49025_1_.delegate;
+   }
+
+   /**
+    * @param supplier A fluid supplier such as {@link net.minecraftforge.fml.RegistryObject<Fluid>}
+    */
+   public BucketItem(java.util.function.Supplier<? extends Fluid> supplier, Item.Properties builder) {
+      super(builder);
+      this.content = null;
+      this.fluidSupplier = supplier;
    }
 
    public ActionResult<ItemStack> use(World p_77659_1_, PlayerEntity p_77659_2_, Hand p_77659_3_) {
       ItemStack itemstack = p_77659_2_.getItemInHand(p_77659_3_);
       RayTraceResult raytraceresult = getPlayerPOVHitResult(p_77659_1_, p_77659_2_, this.content == Fluids.EMPTY ? RayTraceContext.FluidMode.SOURCE_ONLY : RayTraceContext.FluidMode.NONE);
+      ActionResult<ItemStack> ret = net.minecraftforge.event.ForgeEventFactory.onBucketUse(p_77659_2_, p_77659_1_, itemstack, raytraceresult);
+      if (ret != null) return ret;
       if (raytraceresult.getType() == RayTraceResult.Type.MISS) {
          return ActionResult.pass(itemstack);
       } else if (raytraceresult.getType() != RayTraceResult.Type.BLOCK) {
@@ -53,10 +_,22 @@
             if (this.content == Fluids.EMPTY) {
                BlockState blockstate1 = p_77659_1_.getBlockState(blockpos);
                if (blockstate1.getBlock() instanceof IBucketPickupHandler) {
+                  // CraftBukkit start
+                  Fluid dummyFluid = ((IBucketPickupHandler)blockstate1.getBlock()).takeLiquid(DummyGeneratorAccess.INSTANCE, blockpos, blockstate1);
+                  PlayerBucketFillEvent event = CraftEventFactory.callPlayerBucketFillEvent(p_77659_1_, p_77659_2_, blockpos, blockpos, blockraytraceresult.getDirection(), itemstack, dummyFluid.getBucket());
+                  if (event.isCancelled()) {
+                     ((ServerPlayerEntity)p_77659_2_).connection.send(new SChangeBlockPacket(p_77659_1_, blockpos));
+                     ((ServerPlayerEntity)p_77659_2_).getBukkitEntity().updateInventory();
+                     return ActionResult.fail(itemstack);
+                  }
+                  // CraftBukkit end
                   Fluid fluid = ((IBucketPickupHandler)blockstate1.getBlock()).takeLiquid(p_77659_1_, blockpos, blockstate1);
                   if (fluid != Fluids.EMPTY) {
                      p_77659_2_.awardStat(Stats.ITEM_USED.get(this));
-                     p_77659_2_.playSound(fluid.is(FluidTags.LAVA) ? SoundEvents.BUCKET_FILL_LAVA : SoundEvents.BUCKET_FILL, 1.0F, 1.0F);
+
+                     SoundEvent soundevent = this.content.getAttributes().getFillSound();
+                     if (soundevent == null) soundevent = fluid.is(FluidTags.LAVA) ? SoundEvents.BUCKET_FILL_LAVA : SoundEvents.BUCKET_FILL;
+                     p_77659_2_.playSound(soundevent, 1.0F, 1.0F);
                      ItemStack itemstack1 = DrinkHelper.createFilledResult(itemstack, p_77659_2_, new ItemStack(fluid.getBucket()));
                      if (!p_77659_1_.isClientSide) {
                         CriteriaTriggers.FILLED_BUCKET.trigger((ServerPlayerEntity)p_77659_2_, new ItemStack(fluid.getBucket()));
@@ -69,8 +_,8 @@
                return ActionResult.fail(itemstack);
             } else {
                BlockState blockstate = p_77659_1_.getBlockState(blockpos);
-               BlockPos blockpos2 = blockstate.getBlock() instanceof ILiquidContainer && this.content == Fluids.WATER ? blockpos : blockpos1;
-               if (this.emptyBucket(p_77659_2_, p_77659_1_, blockpos2, blockraytraceresult)) {
+               BlockPos blockpos2 = canBlockContainFluid(p_77659_1_, blockpos, blockstate) ? blockpos : blockpos1;
+               if (this.tryPlaceContainedLiquid(p_77659_2_, p_77659_1_, blockpos2, blockraytraceresult, blockraytraceresult.getDirection(), blockpos, itemstack)) { // CraftBukkit
                   this.checkExtraContent(p_77659_1_, itemstack, blockpos2);
                   if (p_77659_2_ instanceof ServerPlayerEntity) {
                      CriteriaTriggers.PLACED_BLOCK.trigger((ServerPlayerEntity)p_77659_2_, blockpos2, itemstack);
@@ -104,8 +_,73 @@
          Material material = blockstate.getMaterial();
          boolean flag = blockstate.canBeReplaced(this.content);
          boolean flag1 = blockstate.isAir() || flag || block instanceof ILiquidContainer && ((ILiquidContainer)block).canPlaceLiquid(p_180616_2_, p_180616_3_, blockstate, this.content);
-         if (!flag1) {
-            return p_180616_4_ != null && this.emptyBucket(p_180616_1_, p_180616_2_, p_180616_4_.getBlockPos().relative(p_180616_4_.getDirection()), (BlockRayTraceResult)null);
+         // CraftBukkit start
+         if (flag1 && p_180616_1_ != null && catserver.server.utils.WorldCheck.isServerWorld(p_180616_2_)) {
+            PlayerBucketEmptyEvent event = CraftEventFactory.callPlayerBucketEmptyEvent(p_180616_2_, p_180616_1_, p_180616_3_, p_180616_3_.below(), Direction.UP, ItemStack.EMPTY);
+            if (event.isCancelled()) {
+               ((ServerPlayerEntity) p_180616_1_).connection.send(new SChangeBlockPacket(p_180616_2_, p_180616_3_)); // SPIGOT-4238: needed when looking through entity
+               ((ServerPlayerEntity) p_180616_1_).getBukkitEntity().updateInventory(); // SPIGOT-4541
+               return false;
+            }
+         }
+         // CraftBukkit end
+         if (!flag1) {
+            return p_180616_4_ != null && this.tryPlaceContainedLiquid(p_180616_1_, p_180616_2_, p_180616_4_.getBlockPos().relative(p_180616_4_.getDirection()), null, Direction.UP, p_180616_3_.below(), ItemStack.EMPTY);
+         } else if (p_180616_2_.dimensionType().ultraWarm() && this.content.is(FluidTags.WATER)) {
+            int i = p_180616_3_.getX();
+            int j = p_180616_3_.getY();
+            int k = p_180616_3_.getZ();
+            p_180616_2_.playSound(p_180616_1_, p_180616_3_, SoundEvents.FIRE_EXTINGUISH, SoundCategory.BLOCKS, 0.5F, 2.6F + (p_180616_2_.random.nextFloat() - p_180616_2_.random.nextFloat()) * 0.8F);
+
+            for(int l = 0; l < 8; ++l) {
+               p_180616_2_.addParticle(ParticleTypes.LARGE_SMOKE, (double)i + Math.random(), (double)j + Math.random(), (double)k + Math.random(), 0.0D, 0.0D, 0.0D);
+            }
+
+            return true;
+         } else if (block instanceof ILiquidContainer && this.content == Fluids.WATER) {
+            ((ILiquidContainer)block).placeLiquid(p_180616_2_, p_180616_3_, blockstate, ((FlowingFluid)this.content).getSource(false));
+            this.playEmptySound(p_180616_1_, p_180616_2_, p_180616_3_);
+            return true;
+         } else {
+            if (!p_180616_2_.isClientSide && flag && !material.isLiquid()) {
+               p_180616_2_.destroyBlock(p_180616_3_, true);
+            }
+
+            if (!p_180616_2_.setBlock(p_180616_3_, this.content.defaultFluidState().createLegacyBlock(), 11) && !blockstate.getFluidState().isSource()) {
+               return false;
+            } else {
+               this.playEmptySound(p_180616_1_, p_180616_2_, p_180616_3_);
+               return true;
+            }
+         }
+      }
+   }
+
+   public boolean tryPlaceContainedLiquid(PlayerEntity p_180616_1_, World p_180616_2_, BlockPos p_180616_3_, @Nullable BlockRayTraceResult p_180616_4_) {
+      return this.tryPlaceContainedLiquid(p_180616_1_, p_180616_2_, p_180616_3_, p_180616_4_, Direction.UP, p_180616_3_.below(), ItemStack.EMPTY); // CatServer - fake clicked position to call event
+   }
+
+   public boolean tryPlaceContainedLiquid(PlayerEntity p_180616_1_, World p_180616_2_, BlockPos p_180616_3_, @Nullable BlockRayTraceResult p_180616_4_, Direction direction, BlockPos clicked, ItemStack itemstack) {
+      if (!(this.content instanceof FlowingFluid)) {
+         return false;
+      } else {
+         BlockState blockstate = p_180616_2_.getBlockState(p_180616_3_);
+         Block block = blockstate.getBlock();
+         Material material = blockstate.getMaterial();
+         boolean flag = blockstate.canBeReplaced(this.content);
+         boolean flag1 = blockstate.isAir() || flag || block instanceof ILiquidContainer && ((ILiquidContainer)block).canPlaceLiquid(p_180616_2_, p_180616_3_, blockstate, this.content);
+         // CraftBukkit start
+         if (flag1 && p_180616_1_ != null && catserver.server.utils.WorldCheck.isServerWorld(p_180616_2_)) {
+            PlayerBucketEmptyEvent event = CraftEventFactory.callPlayerBucketEmptyEvent(p_180616_2_, p_180616_1_, p_180616_3_, clicked, direction, itemstack);
+            if (event.isCancelled()) {
+               ((ServerPlayerEntity) p_180616_1_).connection.send(new SChangeBlockPacket(p_180616_2_, p_180616_3_)); // SPIGOT-4238: needed when looking through entity
+               ((ServerPlayerEntity) p_180616_1_).getBukkitEntity().updateInventory(); // SPIGOT-4541
+               return false;
+            }
+         }
+         // CraftBukkit end
+         if (!flag1) {
+            return p_180616_4_ != null && this.tryPlaceContainedLiquid(p_180616_1_, p_180616_2_, p_180616_4_.getBlockPos().relative(p_180616_4_.getDirection()), null, direction, clicked, itemstack);
          } else if (p_180616_2_.dimensionType().ultraWarm() && this.content.is(FluidTags.WATER)) {
             int i = p_180616_3_.getX();
             int j = p_180616_3_.getY();
@@ -137,7 +_,24 @@
    }
 
    protected void playEmptySound(@Nullable PlayerEntity p_203791_1_, IWorld p_203791_2_, BlockPos p_203791_3_) {
-      SoundEvent soundevent = this.content.is(FluidTags.LAVA) ? SoundEvents.BUCKET_EMPTY_LAVA : SoundEvents.BUCKET_EMPTY;
+      SoundEvent soundevent = this.content.getAttributes().getEmptySound();
+      if(soundevent == null) soundevent = this.content.is(FluidTags.LAVA) ? SoundEvents.BUCKET_EMPTY_LAVA : SoundEvents.BUCKET_EMPTY;
       p_203791_2_.playSound(p_203791_1_, p_203791_3_, soundevent, SoundCategory.BLOCKS, 1.0F, 1.0F);
+   }
+
+   @Override
+   public net.minecraftforge.common.capabilities.ICapabilityProvider initCapabilities(ItemStack stack, @Nullable net.minecraft.nbt.CompoundNBT nbt) {
+      if (this.getClass() == BucketItem.class)
+         return new net.minecraftforge.fluids.capability.wrappers.FluidBucketWrapper(stack);
+      else
+         return super.initCapabilities(stack, nbt);
+   }
+
+   private final java.util.function.Supplier<? extends Fluid> fluidSupplier;
+   public Fluid getFluid() { return fluidSupplier.get(); }
+
+   private boolean canBlockContainFluid(World worldIn, BlockPos posIn, BlockState blockstate)
+   {
+      return blockstate.getBlock() instanceof ILiquidContainer && ((ILiquidContainer)blockstate.getBlock()).canPlaceLiquid(worldIn, posIn, blockstate, this.content);
    }
 }
