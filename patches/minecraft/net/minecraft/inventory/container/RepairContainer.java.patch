--- a/net/minecraft/inventory/container/RepairContainer.java
+++ b/net/minecraft/inventory/container/RepairContainer.java
@@ -19,12 +_,20 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventory;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryAnvil;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryView;
 
 public class RepairContainer extends AbstractRepairContainer {
    private static final Logger LOGGER = LogManager.getLogger();
    public int repairItemCountCost;
-   private String itemName;
-   private final IntReferenceHolder cost = IntReferenceHolder.standalone();
+   public String itemName; // private->public CraftBukkit
+   public final IntReferenceHolder cost = IntReferenceHolder.standalone(); // private->public CraftBukkit
+
+   // CraftBukkit start
+   public int maximumRepairCost = 40;
+   private CraftInventoryView bukkitEntity;
+   // CraftBukkit end
 
    public RepairContainer(int p_i50101_1_, PlayerInventory p_i50101_2_) {
       this(p_i50101_1_, p_i50101_2_, IWorldPosCallable.NULL);
@@ -48,6 +_,8 @@
          p_230301_1_.giveExperienceLevels(-this.cost.get());
       }
 
+      float breakChance = net.minecraftforge.common.ForgeHooks.onAnvilRepair(p_230301_1_, p_230301_2_, RepairContainer.this.inputSlots.getItem(0), RepairContainer.this.inputSlots.getItem(1));
+
       this.inputSlots.setItem(0, ItemStack.EMPTY);
       if (this.repairItemCountCost > 0) {
          ItemStack itemstack = this.inputSlots.getItem(1);
@@ -64,7 +_,7 @@
       this.cost.set(0);
       this.access.execute((p_234633_1_, p_234633_2_) -> {
          BlockState blockstate = p_234633_1_.getBlockState(p_234633_2_);
-         if (!p_230301_1_.abilities.instabuild && blockstate.is(BlockTags.ANVIL) && p_230301_1_.getRandom().nextFloat() < 0.12F) {
+         if (!p_230301_1_.abilities.instabuild && blockstate.is(BlockTags.ANVIL) && p_230301_1_.getRandom().nextFloat() < breakChance) {
             BlockState blockstate1 = AnvilBlock.damage(blockstate);
             if (blockstate1 == null) {
                p_234633_1_.removeBlock(p_234633_2_, false);
@@ -88,7 +_,7 @@
       int j = 0;
       int k = 0;
       if (itemstack.isEmpty()) {
-         this.resultSlots.setItem(0, ItemStack.EMPTY);
+         org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY); // CraftBukkit
          this.cost.set(0);
       } else {
          ItemStack itemstack1 = itemstack.copy();
@@ -96,12 +_,15 @@
          Map<Enchantment, Integer> map = EnchantmentHelper.getEnchantments(itemstack1);
          j = j + itemstack.getBaseRepairCost() + (itemstack2.isEmpty() ? 0 : itemstack2.getBaseRepairCost());
          this.repairItemCountCost = 0;
+         boolean flag = false;
+
          if (!itemstack2.isEmpty()) {
-            boolean flag = itemstack2.getItem() == Items.ENCHANTED_BOOK && !EnchantedBookItem.getEnchantments(itemstack2).isEmpty();
+            if (!net.minecraftforge.common.ForgeHooks.onAnvilChange(this, itemstack, itemstack2, resultSlots, itemName, j, this.player)) return;
+            flag = itemstack2.getItem() == Items.ENCHANTED_BOOK && !EnchantedBookItem.getEnchantments(itemstack2).isEmpty();
             if (itemstack1.isDamageableItem() && itemstack1.getItem().isValidRepairItem(itemstack, itemstack2)) {
                int l2 = Math.min(itemstack1.getDamageValue(), itemstack1.getMaxDamage() / 4);
                if (l2 <= 0) {
-                  this.resultSlots.setItem(0, ItemStack.EMPTY);
+                  org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY); // CraftBukkit
                   this.cost.set(0);
                   return;
                }
@@ -117,7 +_,7 @@
                this.repairItemCountCost = i3;
             } else {
                if (!flag && (itemstack1.getItem() != itemstack2.getItem() || !itemstack1.isDamageableItem())) {
-                  this.resultSlots.setItem(0, ItemStack.EMPTY);
+                  org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY); // CraftBukkit
                   this.cost.set(0);
                   return;
                }
@@ -196,7 +_,7 @@
                }
 
                if (flag3 && !flag2) {
-                  this.resultSlots.setItem(0, ItemStack.EMPTY);
+                  org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callPrepareAnvilEvent(getBukkitView(), ItemStack.EMPTY); // CraftBukkit
                   this.cost.set(0);
                   return;
                }
@@ -214,17 +_,19 @@
             i += k;
             itemstack1.setHoverName(new StringTextComponent(this.itemName));
          }
+         if (flag && !itemstack1.isBookEnchantable(itemstack2)) itemstack1 = ItemStack.EMPTY;
 
          this.cost.set(j + i);
          if (i <= 0) {
             itemstack1 = ItemStack.EMPTY;
          }
+         if (maximumRepairCost == 40) maximumRepairCost = 40; // LoliServer - fix the_vault loading
 
-         if (k == i && k > 0 && this.cost.get() >= 40) {
-            this.cost.set(39);
+         if (k == i && k > 0 && this.cost.get() >= maximumRepairCost) { // CraftBukkit
+            this.cost.set(maximumRepairCost - 1); // CraftBukkit
          }
 
-         if (this.cost.get() >= 40 && !this.player.abilities.instabuild) {
+         if (this.cost.get() >= maximumRepairCost && !this.player.abilities.instabuild) { // CraftBukkit
             itemstack1 = ItemStack.EMPTY;
          }
 
@@ -269,4 +_,20 @@
    public int getCost() {
       return this.cost.get();
    }
+
+   public void setMaximumCost(int value) {
+      this.cost.set(value);
+   }
+
+   // CraftBukkit start
+   @Override
+   public CraftInventoryView getBukkitView() {
+      if (bukkitEntity != null) {
+         return bukkitEntity;
+      }
+      CraftInventory inventory = new CraftInventoryAnvil(access.getLocation(), this.inputSlots, this.resultSlots, this);
+      bukkitEntity = new CraftInventoryView(this.player.getBukkitEntity(), inventory, this);
+      return bukkitEntity;
+   }
+   // CraftBukkit end
 }
