--- a/net/minecraft/inventory/container/WorkbenchContainer.java
+++ b/net/minecraft/inventory/container/WorkbenchContainer.java
@@ -19,13 +_,22 @@
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryView;
+import org.bukkit.inventory.InventoryView;
 
 public class WorkbenchContainer extends RecipeBookContainer<CraftingInventory> {
-   private final CraftingInventory craftSlots = new CraftingInventory(this, 3, 3);
-   private final CraftResultInventory resultSlots = new CraftResultInventory();
-   private final IWorldPosCallable access;
+   private final CraftingInventory craftSlots = new CraftingInventory(this, 3, 3); // LoliServer
+   public final CraftResultInventory resultSlots;
+   public final IWorldPosCallable access;
    private final PlayerEntity player;
 
+   // CraftBukkit start
+   private CraftInventoryView bukkitEntity = null;
+   private PlayerInventory playerCB;
+   // CraftBukkit end
+
    public WorkbenchContainer(int p_i50089_1_, PlayerInventory p_i50089_2_) {
       this(p_i50089_1_, p_i50089_2_, IWorldPosCallable.NULL);
    }
@@ -33,6 +_,11 @@
    public WorkbenchContainer(int p_i50090_1_, PlayerInventory p_i50090_2_, IWorldPosCallable p_i50090_3_) {
       super(ContainerType.CRAFTING, p_i50090_1_);
       this.access = p_i50090_3_;
+      // CraftBukkit start - Switched order of IInventory construction and stored player
+      this.craftSlots.setOwner(p_i50090_2_.player); // LoliServer
+      this.resultSlots = new CraftResultInventory();
+      this.playerCB = p_i50090_2_;
+      // CraftBukkit end
       this.player = p_i50090_2_.player;
       this.addSlot(new CraftingResultSlot(p_i50090_2_.player, this.craftSlots, this.resultSlots, 0, 124, 35));
 
@@ -65,15 +_,39 @@
                itemstack = icraftingrecipe.assemble(p_217066_3_);
             }
          }
-
          p_217066_4_.setItem(0, itemstack);
          serverplayerentity.connection.send(new SSetSlotPacket(p_217066_0_, 0, itemstack));
       }
    }
 
+   // LoliServer start - Fix Quark Oddities dupe backpacks error
+   protected static void slotChangedCraftingGrid(int id, World world, PlayerEntity player, CraftingInventory inventory, CraftResultInventory inventoryResult, Container container) {
+      if (!world.isClientSide) {
+         ServerPlayerEntity serverplayerentity = (ServerPlayerEntity) player;
+         ItemStack itemstack = ItemStack.EMPTY;
+         Optional<ICraftingRecipe> optional = world.getServer().getRecipeManager().getRecipeFor(IRecipeType.CRAFTING, inventory, world);
+         if (optional.isPresent()) {
+            ICraftingRecipe icraftingrecipe = optional.get();
+            if (inventoryResult.setRecipeUsed(world, serverplayerentity, icraftingrecipe)) {
+               itemstack = icraftingrecipe.assemble(inventory);
+            }
+         }
+         CraftEventFactory.callPreCraftEvent(inventory, inventoryResult, itemstack, container.getBukkitView(), false); // CraftBukkit
+
+         InventoryView view = null;
+         if (container == null) {
+            view = new CraftInventoryView(serverplayerentity.getBukkitEntity(), new CraftInventoryCrafting(inventory, inventoryResult), serverplayerentity.containerMenu);
+         }
+         itemstack = CraftEventFactory.callPreCraftEvent(inventory, inventoryResult, itemstack, container != null ? container.getBukkitView() : view, false); // CraftBukkit
+         inventoryResult.setItem(0, itemstack);
+         serverplayerentity.connection.send(new SSetSlotPacket(id, 0, itemstack));
+      }
+   }
+   // LoliServer end
+
    public void slotsChanged(IInventory p_75130_1_) {
       this.access.execute((p_217069_1_, p_217069_2_) -> {
-         slotChangedCraftingGrid(this.containerId, p_217069_1_, this.player, this.craftSlots, this.resultSlots);
+         this.slotChangedCraftingGrid(this.containerId, p_217069_1_, this.player, this.craftSlots, this.resultSlots, this); // CraftBukkit
       });
    }
 
@@ -98,6 +_,7 @@
    }
 
    public boolean stillValid(PlayerEntity p_75145_1_) {
+      if (!this.checkReachable) return true; // CraftBukkit
       return stillValid(this.access, p_75145_1_, Blocks.CRAFTING_TABLE);
    }
 
@@ -174,4 +_,16 @@
    public RecipeBookCategory getRecipeBookType() {
       return RecipeBookCategory.CRAFTING;
    }
+
+   // CraftBukkit start
+   @Override
+   public CraftInventoryView getBukkitView() {
+      if (bukkitEntity != null) {
+         return bukkitEntity;
+      }
+      CraftInventoryCrafting inventory = new CraftInventoryCrafting(this.craftSlots, this.resultSlots);
+      bukkitEntity = new CraftInventoryView(this.playerCB.player.getBukkitEntity(), inventory, this);
+      return bukkitEntity;
+   }
+   // CraftBukkit end
 }
