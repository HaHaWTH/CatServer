--- a/net/minecraft/inventory/container/EnchantmentContainer.java
+++ b/net/minecraft/inventory/container/EnchantmentContainer.java
@@ -1,9 +_,11 @@
 package net.minecraft.inventory.container;
 
 import java.util.List;
+import java.util.Map;
 import java.util.Random;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.block.Blocks;
+import net.minecraft.enchantment.Enchantment;
 import net.minecraft.enchantment.EnchantmentData;
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.player.PlayerEntity;
@@ -23,6 +_,16 @@
 import net.minecraft.util.registry.Registry;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.Location;
+import org.bukkit.NamespacedKey;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryEnchanting;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.v1_16_R3.util.CraftNamespacedKey;
+import org.bukkit.enchantments.EnchantmentOffer;
+import org.bukkit.entity.Player;
+import org.bukkit.event.enchantment.EnchantItemEvent;
+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;
 
 public class EnchantmentContainer extends Container {
    private final IInventory enchantSlots = new Inventory(2) {
@@ -30,6 +_,13 @@
          super.setChanged();
          EnchantmentContainer.this.slotsChanged(this);
       }
+
+      // CraftBukkit start
+      @Override
+      public Location getLocation() {
+         return access.getLocation();
+      }
+      // CraftBukkit end
    };
    private final IWorldPosCallable access;
    private final Random random = new Random();
@@ -38,6 +_,11 @@
    public final int[] enchantClue = new int[]{-1, -1, -1};
    public final int[] levelClue = new int[]{-1, -1, -1};
 
+   // CraftBukkit start
+   private CraftInventoryView bukkitEntity = null;
+   private Player player_bukkit;
+   // CraftBukkit end
+
    public EnchantmentContainer(int p_i50085_1_, PlayerInventory p_i50085_2_) {
       this(p_i50085_1_, p_i50085_2_, IWorldPosCallable.NULL);
    }
@@ -56,7 +_,7 @@
       });
       this.addSlot(new Slot(this.enchantSlots, 1, 35, 47) {
          public boolean mayPlace(ItemStack p_75214_1_) {
-            return p_75214_1_.getItem() == Items.LAPIS_LAZULI;
+            return net.minecraftforge.common.Tags.Items.GEMS_LAPIS.contains(p_75214_1_.getItem());
          }
       });
 
@@ -80,56 +_,80 @@
       this.addDataSlot(IntReferenceHolder.shared(this.levelClue, 0));
       this.addDataSlot(IntReferenceHolder.shared(this.levelClue, 1));
       this.addDataSlot(IntReferenceHolder.shared(this.levelClue, 2));
+      // CraftBukkit start
+      player_bukkit = (Player) p_i50086_2_.player.getBukkitEntity();
+      // CraftBukkit end
+   }
+
+   private float getPower(net.minecraft.world.World world, net.minecraft.util.math.BlockPos pos) {
+      return world.getBlockState(pos).getEnchantPowerBonus(world, pos);
    }
 
    public void slotsChanged(IInventory p_75130_1_) {
       if (p_75130_1_ == this.enchantSlots) {
          ItemStack itemstack = p_75130_1_.getItem(0);
-         if (!itemstack.isEmpty() && itemstack.isEnchantable()) {
+         if (!itemstack.isEmpty()) { // CraftBukkit - relax condition
             this.access.execute((p_217002_2_, p_217002_3_) -> {
-               int j = 0;
+               int power = 0;
 
                for(int k = -1; k <= 1; ++k) {
                   for(int l = -1; l <= 1; ++l) {
                      if ((k != 0 || l != 0) && p_217002_2_.isEmptyBlock(p_217002_3_.offset(l, 0, k)) && p_217002_2_.isEmptyBlock(p_217002_3_.offset(l, 1, k))) {
-                        if (p_217002_2_.getBlockState(p_217002_3_.offset(l * 2, 0, k * 2)).is(Blocks.BOOKSHELF)) {
-                           ++j;
-                        }
-
-                        if (p_217002_2_.getBlockState(p_217002_3_.offset(l * 2, 1, k * 2)).is(Blocks.BOOKSHELF)) {
-                           ++j;
-                        }
+                        power += getPower(p_217002_2_, p_217002_3_.offset(l * 2, 0, k * 2));
+                        power += getPower(p_217002_2_, p_217002_3_.offset(l * 2, 1, k * 2));
 
                         if (l != 0 && k != 0) {
-                           if (p_217002_2_.getBlockState(p_217002_3_.offset(l * 2, 0, k)).is(Blocks.BOOKSHELF)) {
-                              ++j;
-                           }
-
-                           if (p_217002_2_.getBlockState(p_217002_3_.offset(l * 2, 1, k)).is(Blocks.BOOKSHELF)) {
-                              ++j;
-                           }
-
-                           if (p_217002_2_.getBlockState(p_217002_3_.offset(l, 0, k * 2)).is(Blocks.BOOKSHELF)) {
-                              ++j;
-                           }
-
-                           if (p_217002_2_.getBlockState(p_217002_3_.offset(l, 1, k * 2)).is(Blocks.BOOKSHELF)) {
-                              ++j;
-                           }
+                           power += getPower(p_217002_2_, p_217002_3_.offset(l * 2, 0, k));
+                           power += getPower(p_217002_2_, p_217002_3_.offset(l * 2, 1, k));
+                           power += getPower(p_217002_2_, p_217002_3_.offset(l, 0, k * 2));
+                           power += getPower(p_217002_2_, p_217002_3_.offset(l, 1, k * 2));
                         }
                      }
                   }
                }
+
+               // CraftBukkit start
+               CraftItemStack item = CraftItemStack.asCraftMirror(itemstack);
+               org.bukkit.enchantments.EnchantmentOffer[] offers = new EnchantmentOffer[3];
+               for (int j = 0; j < 3; ++j) {
+                  org.bukkit.enchantments.Enchantment enchantment = (this.enchantClue[j] >= 0) ? org.bukkit.enchantments.Enchantment.getByKey(CraftNamespacedKey.fromMinecraft(Registry.ENCHANTMENT.getKey(Registry.ENCHANTMENT.byId(this.enchantClue[j])))) : null;
+                  offers[j] = (enchantment != null) ? new EnchantmentOffer(enchantment, this.levelClue[j], this.costs[j]) : null;
+               }
+               PrepareItemEnchantEvent event = new PrepareItemEnchantEvent(player_bukkit, this.getBukkitView(), access.getLocation().getBlock(), item, offers, power);
+               event.setCancelled(!itemstack.isEnchantable());
+               p_217002_2_.getCBServer().getPluginManager().callEvent(event);
+               if (event.isCancelled()) {
+                  for (int j = 0; j < 3; ++j) {
+                     this.costs[j] = 0;
+                     this.enchantClue[j] = -1;
+                     this.levelClue[j] = -1;
+                  }
+                  return;
+               }
+               for (int j = 0; j < 3; j++) {
+                  EnchantmentOffer offer = event.getOffers()[j];
+                  if (offer != null) {
+                     this.costs[j] = offer.getCost();
+                     this.enchantClue[j] = Registry.ENCHANTMENT.getId(Registry.ENCHANTMENT.get(CraftNamespacedKey.toMinecraft(offer.getEnchantment().getKey())));
+                     this.levelClue[j] = offer.getEnchantmentLevel();
+                  } else {
+                     this.costs[j] = 0;
+                     this.enchantClue[j] = -1;
+                     this.levelClue[j] = -1;
+                  }
+               }
+               // CraftBukkit end
 
                this.random.setSeed((long)this.enchantmentSeed.get());
 
                for(int i1 = 0; i1 < 3; ++i1) {
-                  this.costs[i1] = EnchantmentHelper.getEnchantmentCost(this.random, i1, j, itemstack);
+                  this.costs[i1] = EnchantmentHelper.getEnchantmentCost(this.random, i1, (int)power, itemstack);
                   this.enchantClue[i1] = -1;
                   this.levelClue[i1] = -1;
                   if (this.costs[i1] < i1 + 1) {
                      this.costs[i1] = 0;
                   }
+                  this.costs[i1] = net.minecraftforge.event.ForgeEventFactory.onEnchantmentLevelSet(p_217002_2_, p_217002_3_, i1, (int)power, itemstack, costs[i1]);
                }
 
                for(int j1 = 0; j1 < 3; ++j1) {
@@ -168,9 +_,24 @@
          this.access.execute((p_217003_6_, p_217003_7_) -> {
             ItemStack itemstack2 = itemstack;
             List<EnchantmentData> list = this.getEnchantmentList(itemstack, p_75140_2_, this.costs[p_75140_2_]);
-            if (!list.isEmpty()) {
-               p_75140_1_.onEnchantmentPerformed(itemstack, i);
+            // CraftBukkit start
+            if (true | !list.isEmpty()) {
+               // playerIn.onEnchant(itemstack, i); // Moved down
                boolean flag = itemstack.getItem() == Items.BOOK;
+
+               Map<org.bukkit.enchantments.Enchantment, Integer> enchants = new java.util.HashMap<org.bukkit.enchantments.Enchantment, Integer>();
+               for (Object obj : list) {
+                  EnchantmentData instance = (EnchantmentData) obj;
+                  enchants.put(org.bukkit.enchantments.Enchantment.getByKey(CraftNamespacedKey.fromMinecraft(Registry.ENCHANTMENT.getKey(instance.enchantment))), instance.level);
+               }
+               CraftItemStack item = CraftItemStack.asCraftMirror(itemstack2);
+               EnchantItemEvent event = new EnchantItemEvent((Player) p_75140_1_.getBukkitEntity(), this.getBukkitView(), access.getLocation().getBlock(), item, this.costs[p_75140_2_], enchants, p_75140_2_);
+               p_217003_6_.getCBServer().getPluginManager().callEvent(event);
+               int level = event.getExpLevelCost();
+               if (event.isCancelled() || (level > p_75140_1_.experienceLevel && !p_75140_1_.abilities.instabuild) || event.getEnchantsToAdd().isEmpty()) {
+                  return;
+               }
+
                if (flag) {
                   itemstack2 = new ItemStack(Items.ENCHANTED_BOOK);
                   CompoundNBT compoundnbt = itemstack.getTag();
@@ -181,15 +_,28 @@
                   this.enchantSlots.setItem(0, itemstack2);
                }
 
-               for(int j = 0; j < list.size(); ++j) {
-                  EnchantmentData enchantmentdata = list.get(j);
+               for (Map.Entry<org.bukkit.enchantments.Enchantment, Integer> entry : event.getEnchantsToAdd().entrySet()) {
+                  try {
                   if (flag) {
-                     EnchantedBookItem.addEnchantment(itemstack2, enchantmentdata);
+                        NamespacedKey enchantId = entry.getKey().getKey();
+                        Enchantment nms = Registry.ENCHANTMENT.get(CraftNamespacedKey.toMinecraft(enchantId));
+                        if (nms == null) {
+                           continue;
+                        }
+                        EnchantmentData weightedrandomenchant = new EnchantmentData(nms, entry.getValue());
+                        EnchantedBookItem.addEnchantment(itemstack2, weightedrandomenchant);
                   } else {
-                     itemstack2.enchant(enchantmentdata.enchantment, enchantmentdata.level);
+                        item.addUnsafeEnchantment(entry.getKey(), entry.getValue());
+                     }
+                  } catch (IllegalArgumentException e) {
+                     /* Just swallow invalid enchantments */
                   }
                }
 
+               p_75140_1_.onEnchantmentPerformed(itemstack, i);
+               // CraftBukkit end
+
+               // CraftBukkit - TODO: let plugins change this
                if (!p_75140_1_.abilities.instabuild) {
                   itemstack1.shrink(i);
                   if (itemstack1.isEmpty()) {
@@ -242,6 +_,7 @@
    }
 
    public boolean stillValid(PlayerEntity p_75145_1_) {
+      if (!this.checkReachable) return true; // CraftBukkit
       return stillValid(this.access, p_75145_1_, Blocks.ENCHANTING_TABLE);
    }
 
@@ -289,4 +_,16 @@
 
       return itemstack;
    }
+
+   // CraftBukkit start
+   @Override
+   public CraftInventoryView getBukkitView() {
+      if (bukkitEntity != null) {
+         return bukkitEntity;
+      }
+      CraftInventoryEnchanting inventory = new CraftInventoryEnchanting(this.enchantSlots);
+      bukkitEntity = new CraftInventoryView(this.player_bukkit, inventory, this);
+      return bukkitEntity;
+   }
+   // CraftBukkit end
 }
