--- a/net/minecraft/inventory/container/BeaconContainer.java
+++ b/net/minecraft/inventory/container/BeaconContainer.java
@@ -1,8 +_,11 @@
 package net.minecraft.inventory.container;
 
 import javax.annotation.Nullable;
+
+import io.papermc.paper.event.player.PlayerChangeBeaconEffectEvent;
 import net.minecraft.block.Blocks;
 import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.entity.player.PlayerInventory;
 import net.minecraft.inventory.IInventory;
 import net.minecraft.inventory.Inventory;
 import net.minecraft.item.ItemStack;
@@ -13,6 +_,12 @@
 import net.minecraft.util.IntArray;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventory;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryBeacon;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryView;
+import org.bukkit.entity.Player;
+import org.bukkit.potion.PotionEffectType;
 
 public class BeaconContainer extends Container {
    private final IInventory beacon = new Inventory(1) {
@@ -28,6 +_,11 @@
    private final IWorldPosCallable access;
    private final IIntArray beaconData;
 
+   // CraftBukkit start
+   private CraftInventoryView bukkitEntity = null;
+   private PlayerInventory player;
+   // CraftBukkit end
+
    public BeaconContainer(int p_i50099_1_, IInventory p_i50099_2_) {
       this(p_i50099_1_, p_i50099_2_, new IntArray(3), IWorldPosCallable.NULL);
    }
@@ -35,6 +_,7 @@
    public BeaconContainer(int p_i50100_1_, IInventory p_i50100_2_, IIntArray p_i50100_3_, IWorldPosCallable p_i50100_4_) {
       super(ContainerType.BEACON, p_i50100_1_);
       checkContainerDataCount(p_i50100_3_, 3);
+      player = (PlayerInventory) p_i50100_2_;  // CraftBukkit - TODO: check this
       this.beaconData = p_i50100_3_;
       this.access = p_i50100_4_;
       this.paymentSlot = new BeaconContainer.BeaconSlot(this.beacon, 0, 136, 110);
@@ -67,6 +_,7 @@
    }
 
    public boolean stillValid(PlayerEntity p_75145_1_) {
+      if (!this.checkReachable) return true; // CraftBukkit
       return stillValid(this.access, p_75145_1_, Blocks.BEACON);
    }
 
@@ -75,6 +_,18 @@
       this.broadcastChanges();
    }
 
+   // CraftBukkit start
+   @Override
+   public CraftInventoryView getBukkitView() {
+      if (bukkitEntity != null) {
+         return bukkitEntity;
+   }
+      CraftInventory inventory = new CraftInventoryBeacon(this.beacon);
+      bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+      return bukkitEntity;
+   }
+   // CraftBukkit end
+
    public ItemStack quickMoveStack(PlayerEntity p_82846_1_, int p_82846_2_) {
       ItemStack itemstack = ItemStack.EMPTY;
       Slot slot = this.slots.get(p_82846_2_);
@@ -87,10 +_,8 @@
             }
 
             slot.onQuickCraft(itemstack1, itemstack);
-         } else if (!this.paymentSlot.hasItem() && this.paymentSlot.mayPlace(itemstack1) && itemstack1.getCount() == 1) {
-            if (!this.moveItemStackTo(itemstack1, 0, 1, false)) {
-               return ItemStack.EMPTY;
-            }
+         } else if (this.moveItemStackTo(itemstack1, 0, 1, false)) { //Forge Fix Shift Clicking in beacons with stacks larger then 1.
+            return ItemStack.EMPTY;
          } else if (p_82846_2_ >= 1 && p_82846_2_ < 28) {
             if (!this.moveItemStackTo(itemstack1, 28, 37, false)) {
                return ItemStack.EMPTY;
@@ -138,9 +_,17 @@
 
    public void updateEffects(int p_216966_1_, int p_216966_2_) {
       if (this.paymentSlot.hasItem()) {
-         this.beaconData.set(1, p_216966_1_);
-         this.beaconData.set(2, p_216966_2_);
-         this.paymentSlot.remove(1);
+         // Paper start
+         PlayerChangeBeaconEffectEvent event = new PlayerChangeBeaconEffectEvent((Player) this.player.player.getBukkitEntity(), PotionEffectType.getById(p_216966_1_), PotionEffectType.getById(p_216966_2_), this.access.getLocation().getBlock());
+         if (event.callEvent()) {
+            this.beaconData.set(1, event.getPrimary() == null ? 0 : event.getPrimary().getId());
+            this.beaconData.set(2, event.getSecondary() == null ? 0 : event.getSecondary().getId());
+            if (!event.willConsumeItem()) {
+               return;
+            }
+            this.paymentSlot.remove(1);
+         }
+         // Paper end
       }
 
    }
