--- a/net/minecraft/inventory/container/StonecutterContainer.java
+++ b/net/minecraft/inventory/container/StonecutterContainer.java
@@ -2,6 +_,8 @@
 
 import com.google.common.collect.Lists;
 import java.util.List;
+
+import io.papermc.paper.event.player.PlayerStonecutterRecipeSelectEvent;
 import net.minecraft.block.Blocks;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.entity.player.PlayerInventory;
@@ -19,10 +_,16 @@
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryStonecutter;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryView;
+import org.bukkit.entity.Player;
 
 public class StonecutterContainer extends Container {
    private final IWorldPosCallable access;
-   private final IntReferenceHolder selectedRecipeIndex = IntReferenceHolder.standalone();
+   //private final IntReferenceHolder selectedRecipeIndex = IntReferenceHolder.standalone();
+   private final IntReferenceHolder selectedRecipeIndex;
    private final World level;
    private List<StonecuttingRecipe> recipes = Lists.newArrayList();
    private ItemStack input = ItemStack.EMPTY;
@@ -37,9 +_,31 @@
          StonecutterContainer.this.slotsChanged(this);
          StonecutterContainer.this.slotUpdateListener.run();
       }
+
+      // CraftBukkit start
+      @Override
+      public Location getLocation() {
+         return access.getLocation();
+      }
+      // CraftBukkit end
    };
    private final CraftResultInventory resultContainer = new CraftResultInventory();
 
+   // CraftBukkit start
+   private CraftInventoryView bukkitEntity = null;
+   private Player player;
+
+   @Override
+   public CraftInventoryView getBukkitView() {
+      if (bukkitEntity != null) {
+         return bukkitEntity;
+      }
+      CraftInventoryStonecutter inventory = new CraftInventoryStonecutter(this.container, this.resultContainer);
+      bukkitEntity = new CraftInventoryView(this.player, inventory, this);
+      return bukkitEntity;
+   }
+   // CraftBukkit end
+
    public StonecutterContainer(int p_i50059_1_, PlayerInventory p_i50059_2_) {
       this(p_i50059_1_, p_i50059_2_, IWorldPosCallable.NULL);
    }
@@ -47,6 +_,7 @@
    public StonecutterContainer(int p_i50060_1_, PlayerInventory p_i50060_2_, final IWorldPosCallable p_i50060_3_) {
       super(ContainerType.STONECUTTER, p_i50060_1_);
       this.access = p_i50060_3_;
+      selectedRecipeIndex = this.addDataSlot(IntReferenceHolder.shared(new int[1], 0)); // Paper - allow replication
       this.level = p_i50060_2_.player.level;
       this.inputSlot = this.addSlot(new Slot(this.container, 0, 20, 33));
       this.resultSlot = this.addSlot(new Slot(this.resultContainer, 1, 143, 33) {
@@ -85,6 +_,7 @@
       }
 
       this.addDataSlot(this.selectedRecipeIndex);
+      player = (Player) p_i50060_2_.player.getBukkitEntity(); // CraftBukkit
    }
 
    @OnlyIn(Dist.CLIENT)
@@ -108,12 +_,36 @@
    }
 
    public boolean stillValid(PlayerEntity p_75145_1_) {
+      if (!this.checkReachable) return true; // CraftBukkit
       return stillValid(this.access, p_75145_1_, Blocks.STONECUTTER);
    }
 
    public boolean clickMenuButton(PlayerEntity p_75140_1_, int p_75140_2_) {
       if (this.isValidRecipeIndex(p_75140_2_)) {
-         this.selectedRecipeIndex.set(p_75140_2_);
+         // Paper start
+         int recipeIndex = p_75140_2_;
+         this.selectedRecipeIndex.set(recipeIndex);
+         this.selectedRecipeIndex.checkAndClearUpdateFlag();
+         if (this.isValidRecipeIndex(p_75140_2_)) {
+            PlayerStonecutterRecipeSelectEvent event = new PlayerStonecutterRecipeSelectEvent((org.bukkit.entity.Player) p_75140_1_.getBukkitEntity(), (org.bukkit.inventory.StonecutterInventory) getBukkitView().getTopInventory(), (org.bukkit.inventory.StonecuttingRecipe) this.recipes.get(p_75140_2_).toBukkitRecipe());
+            Bukkit.getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+               ((org.bukkit.entity.Player) p_75140_1_.getBukkitEntity()).updateInventory();
+               return false;
+            }
+            if (!this.recipes.get(p_75140_2_).getId().equals(
+                    org.bukkit.craftbukkit.v1_16_R3.util.CraftNamespacedKey.toMinecraft(event.getStonecuttingRecipe().getKey()))) { // If the recipe did NOT stay the same
+                  for (int index = 0; index < this.recipes.size(); index++) {
+                     if (this.recipes.get(index).getId().equals(org.bukkit.craftbukkit.v1_16_R3.util.CraftNamespacedKey.toMinecraft(event.getStonecuttingRecipe().getKey()))) {
+                        recipeIndex = index;
+                        break;
+                     }
+                  }
+            }
+         }
+         ((org.bukkit.entity.Player) p_75140_1_.getBukkitEntity()).updateInventory();
+         this.selectedRecipeIndex.set(recipeIndex); // set new index, so that listeners can read it
+         // Paper end
          this.setupResultSlot();
       }
 
