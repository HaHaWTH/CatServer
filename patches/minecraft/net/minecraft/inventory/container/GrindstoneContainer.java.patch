--- a/net/minecraft/inventory/container/GrindstoneContainer.java
+++ b/net/minecraft/inventory/container/GrindstoneContainer.java
@@ -17,6 +_,10 @@
 import net.minecraft.item.Items;
 import net.minecraft.util.IWorldPosCallable;
 import net.minecraft.world.World;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryGrindstone;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftInventoryView;
+import org.bukkit.entity.Player;
 
 public class GrindstoneContainer extends Container {
    private final IInventory resultSlots = new CraftResultInventory();
@@ -25,9 +_,40 @@
          super.setChanged();
          GrindstoneContainer.this.slotsChanged(this);
       }
+
+      // CatServer start
+      @Override
+      public Location getLocation() {
+         if (repairSlots == this) {
+            if (repairSlots instanceof net.minecraft.tileentity.TileEntity) {
+               net.minecraft.util.math.BlockPos pos = ((net.minecraft.tileentity.TileEntity) repairSlots).getBlockPos();
+               return new org.bukkit.Location(((net.minecraft.tileentity.TileEntity) repairSlots).getLevel().getWorld(), pos.getX(), pos.getY(), pos.getZ());
+            } else {
+               return null;
+            }
+         } else {
+            return repairSlots.getLocation();
+         }
+      }
+      // CatServer end
    };
    private final IWorldPosCallable access;
 
+   // CraftBukkit start
+   private CraftInventoryView bukkitEntity = null;
+   private Player cbPlayer;
+
+   @Override
+   public CraftInventoryView getBukkitView() {
+      if (bukkitEntity != null) {
+         return bukkitEntity;
+      }
+      CraftInventoryGrindstone inventory = new CraftInventoryGrindstone(this.repairSlots, this.resultSlots);
+      bukkitEntity = new CraftInventoryView(this.cbPlayer, inventory, this);
+      return bukkitEntity;
+   }
+   // CraftBukkit end
+
    public GrindstoneContainer(int p_i50080_1_, PlayerInventory p_i50080_2_) {
       this(p_i50080_1_, p_i50080_2_, IWorldPosCallable.NULL);
    }
@@ -105,6 +_,7 @@
          this.addSlot(new Slot(p_i50081_2_, k, 8 + k * 18, 142));
       }
 
+      cbPlayer = (Player) p_i50081_2_.player.getBukkitEntity(); // CraftBukkit
    }
 
    public void slotsChanged(IInventory p_75130_1_) {
@@ -141,12 +_,13 @@
             }
 
             Item item = itemstack.getItem();
-            int k = item.getMaxDamage() - itemstack.getDamageValue();
-            int l = item.getMaxDamage() - itemstack1.getDamageValue();
-            int i1 = k + l + item.getMaxDamage() * 5 / 100;
-            i = Math.max(item.getMaxDamage() - i1, 0);
+            int k = itemstack.getMaxDamage() - itemstack.getDamageValue();
+            int l = itemstack.getMaxDamage() - itemstack1.getDamageValue();
+            int i1 = k + l + itemstack.getMaxDamage() * 5 / 100;
+            i = Math.max(itemstack.getMaxDamage() - i1, 0);
             itemstack2 = this.mergeEnchants(itemstack, itemstack1);
-            if (!itemstack2.isDamageableItem()) {
+            if (!itemstack2.isRepairable()) i = itemstack.getDamageValue();
+            if (!itemstack2.isDamageableItem() || !itemstack2.isRepairable()) {
                if (!ItemStack.matches(itemstack, itemstack1)) {
                   this.resultSlots.setItem(0, ItemStack.EMPTY);
                   this.broadcastChanges();
@@ -219,6 +_,7 @@
    }
 
    public boolean stillValid(PlayerEntity p_75145_1_) {
+      if (!this.checkReachable) return true; // CraftBukkit
       return stillValid(this.access, p_75145_1_, Blocks.GRINDSTONE);
    }
 
