--- a/net/minecraft/server/management/PreYggdrasilConverter.java
+++ b/net/minecraft/server/management/PreYggdrasilConverter.java
@@ -19,6 +_,8 @@
 import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.nbt.CompoundNBT;
+import net.minecraft.nbt.CompressedStreamTools;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.util.StringUtils;
@@ -53,7 +_,7 @@
       }).toArray((p_201149_0_) -> {
          return new String[p_201149_0_];
       });
-      if (p_152717_0_.usesAuthentication()) {
+      if (p_152717_0_.usesAuthentication() || org.spigotmc.SpigotConfig.bungee) { // Spigot: bungee = online mode, for now.
          p_152717_0_.getProfileRepository().findProfilesByNames(astring, Agent.MINECRAFT, p_152717_2_);
       } else {
          for(String s : astring) {
@@ -72,7 +_,7 @@
             try {
                banlist.load();
             } catch (IOException ioexception1) {
-               LOGGER.warn("Could not load existing file {}", banlist.getFile().getName(), ioexception1);
+               LOGGER.warn("Could not load existing file {}", banlist.getFile().getName()); // CraftBukkit - don't print stacktrace
             }
          }
 
@@ -125,7 +_,7 @@
             try {
                ipbanlist.load();
             } catch (IOException ioexception1) {
-               LOGGER.warn("Could not load existing file {}", ipbanlist.getFile().getName(), ioexception1);
+               LOGGER.warn("Could not load existing file {}", ipbanlist.getFile().getName()); // CraftBukkit - don't print stacktrace
             }
          }
 
@@ -161,7 +_,7 @@
             try {
                oplist.load();
             } catch (IOException ioexception1) {
-               LOGGER.warn("Could not load existing file {}", oplist.getFile().getName(), ioexception1);
+               LOGGER.warn("Could not load existing file {}", oplist.getFile().getName()); // CraftBukkit - don't print stacktrace
             }
          }
 
@@ -203,7 +_,7 @@
             try {
                whitelist.load();
             } catch (IOException ioexception1) {
-               LOGGER.warn("Could not load existing file {}", whitelist.getFile().getName(), ioexception1);
+               LOGGER.warn("Could not load existing file {}", whitelist.getFile().getName()); // CraftBukkit - don't print stacktrace
             }
          }
 
@@ -314,6 +_,28 @@
                private void movePlayerFile(File p_152743_1_, String p_152743_2_, String p_152743_3_) {
                   File file5 = new File(file1, p_152743_2_ + ".dat");
                   File file6 = new File(p_152743_1_, p_152743_3_ + ".dat");
+                  // CraftBukkit start - Use old file name to seed lastKnownName
+                  CompoundNBT root = null;
+                  try {
+                     root = CompressedStreamTools.readCompressed(new java.io.FileInputStream(file5));
+                  }
+                  catch (Exception exception) {
+                     exception.printStackTrace();
+                  }
+                  if (root != null) {
+                     if (!root.contains("bukkit")) {
+                        root.put("bukkit", new CompoundNBT());
+                     }
+                     CompoundNBT data = root.getCompound("bukkit");
+                     data.putString("lastKnownName", p_152743_2_);
+                     try {
+                        CompressedStreamTools.writeCompressed(root, new java.io.FileOutputStream(file3));
+                     }
+                     catch (Exception exception2) {
+                        exception2.printStackTrace();
+                     }
+                  }
+                  // CraftBukkit end
                   PreYggdrasilConverter.ensureDirectoryExists(p_152743_1_);
                   if (!file5.renameTo(file6)) {
                      throw new PreYggdrasilConverter.ConversionError("Could not convert file for " + p_152743_2_);
