--- a/net/minecraft/tileentity/SignTileEntity.java
+++ b/net/minecraft/tileentity/SignTileEntity.java
@@ -1,6 +_,7 @@
 package net.minecraft.tileentity;
 
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
+import java.util.UUID;
 import java.util.function.Function;
 import javax.annotation.Nullable;
 import net.minecraft.block.BlockState;
@@ -23,13 +_,15 @@
 import net.minecraft.world.server.ServerWorld;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.command.CommandSender;
 
-public class SignTileEntity extends TileEntity {
-   private final ITextComponent[] messages = new ITextComponent[]{StringTextComponent.EMPTY, StringTextComponent.EMPTY, StringTextComponent.EMPTY, StringTextComponent.EMPTY};
-   private boolean isEditable = true;
+public class SignTileEntity extends TileEntity implements ICommandSource { // CraftBukkit - implements
+   public final ITextComponent[] messages = new ITextComponent[]{StringTextComponent.EMPTY, StringTextComponent.EMPTY, StringTextComponent.EMPTY, StringTextComponent.EMPTY}; // private->public CraftBukkit
+   public boolean isEditable = true; // private->public CraftBukkit
    private PlayerEntity playerWhoMayEdit;
    private final IReorderingProcessor[] renderMessages = new IReorderingProcessor[4];
    private DyeColor color = DyeColor.BLACK;
+   public java.util.UUID signEditor; // Paper
 
    public SignTileEntity() {
       super(TileEntityType.SIGN);
@@ -43,6 +_,12 @@
          p_189515_1_.putString("Text" + (i + 1), s);
       }
 
+      // CraftBukkit start
+      if (Boolean.getBoolean("convertLegacySigns")) {
+         p_189515_1_.putBoolean("Bukkit.isConverted", true);
+      }
+      // CraftBukkit end
+
       p_189515_1_.putString("Color", this.color.getName());
       return p_189515_1_;
    }
@@ -52,17 +_,36 @@
       super.load(p_230337_1_, p_230337_2_);
       this.color = DyeColor.byName(p_230337_2_.getString("Color"), DyeColor.BLACK);
 
-      for(int i = 0; i < 4; ++i) {
+      // CraftBukkit start - Add an option to convert signs correctly
+      // This is done with a flag instead of all the time because
+      // we have no way to tell whether a sign is from 1.7.10 or 1.8
+      boolean oldSign = Boolean.getBoolean("convertLegacySigns") && !p_230337_2_.getBoolean("Bukkit.isConverted");
+
+      for (int i = 0; i < 4; ++i) {
          String s = p_230337_2_.getString("Text" + (i + 1));
-         ITextComponent itextcomponent = ITextComponent.Serializer.fromJson(s.isEmpty() ? "\"\"" : s);
-         if (this.level instanceof ServerWorld) {
-            try {
-               this.messages[i] = TextComponentUtils.updateForEntity(this.createCommandSourceStack((ServerPlayerEntity)null), itextcomponent, (Entity)null, 0);
-            } catch (CommandSyntaxException commandsyntaxexception) {
+         if (s != null && s.length() > 2048) {
+            s = "\"\"";
+         }
+
+         try {
+            if (oldSign && !isLoadingStructure) { // Paper - saved structures will be in the new format, but will not have isConverted
+               messages[i] = org.bukkit.craftbukkit.v1_16_R3.util.CraftChatMessage.fromString(s)[0];
+               continue;
+            }
+            // CraftBukkit end
+            ITextComponent itextcomponent = ITextComponent.Serializer.fromJson(s.isEmpty() ? "\"\"" : s); // Paper - after old sign
+
+            if (this.level instanceof ServerWorld) {
+               try {
+                  this.messages[i] = TextComponentUtils.updateForEntity(this.createCommandSourceStack((ServerPlayerEntity) null), itextcomponent, (Entity) null, 0);
+               } catch (CommandSyntaxException commandsyntaxexception) {
+                  this.messages[i] = itextcomponent;
+               }
+            } else {
                this.messages[i] = itextcomponent;
             }
-         } else {
-            this.messages[i] = itextcomponent;
+         } catch (com.google.gson.JsonParseException jsonParseException) {
+            this.messages[i] = new StringTextComponent(s);
          }
 
          this.renderMessages[i] = null;
@@ -118,6 +_,7 @@
 
    public void setAllowedPlayerEditor(PlayerEntity p_145912_1_) {
       this.playerWhoMayEdit = p_145912_1_;
+      signEditor = p_145912_1_ != null ? p_145912_1_.getUUID() : null;
    }
 
    public PlayerEntity getPlayerWhoMayEdit() {
@@ -138,10 +_,38 @@
       return true;
    }
 
+   // CraftBukkit start
+   @Override
+   public void sendMessage(ITextComponent component, UUID senderUUID) {
+
+   }
+
+   @Override
+   public boolean acceptsSuccess() {
+      return false;
+   }
+
+   @Override
+   public boolean acceptsFailure() {
+      return false;
+   }
+
+   @Override
+   public boolean shouldInformAdmins() {
+      return false;
+   }
+
+   @Override
+   public CommandSender getBukkitSender(CommandSource p0) {
+      return p0.getEntity() != null ? p0.getEntity().getBukkitSender(p0) : new org.bukkit.craftbukkit.v1_16_R3.command.CraftBlockCommandSender(p0, this);
+   }
+   // CraftBukkit end
+
    public CommandSource createCommandSourceStack(@Nullable ServerPlayerEntity p_195539_1_) {
       String s = p_195539_1_ == null ? "Sign" : p_195539_1_.getName().getString();
       ITextComponent itextcomponent = (ITextComponent)(p_195539_1_ == null ? new StringTextComponent("Sign") : p_195539_1_.getDisplayName());
-      return new CommandSource(ICommandSource.NULL, Vector3d.atCenterOf(this.worldPosition), Vector2f.ZERO, (ServerWorld)this.level, 2, s, itextcomponent, this.level.getServer(), p_195539_1_);
+      // CraftBukkit - this
+      return new CommandSource(this, Vector3d.atCenterOf(this.worldPosition), Vector2f.ZERO, (ServerWorld)this.level, 2, s, itextcomponent, this.level.getServer(), p_195539_1_);
    }
 
    public DyeColor getColor() {
