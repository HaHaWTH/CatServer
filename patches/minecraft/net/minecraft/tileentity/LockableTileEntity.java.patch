--- a/net/minecraft/tileentity/LockableTileEntity.java
+++ b/net/minecraft/tileentity/LockableTileEntity.java
@@ -16,8 +_,8 @@
 import net.minecraft.world.LockCode;
 
 public abstract class LockableTileEntity extends TileEntity implements IInventory, INamedContainerProvider, INameable {
-   private LockCode lockKey = LockCode.NO_LOCK;
-   private ITextComponent name;
+   public LockCode lockKey = LockCode.NO_LOCK;
+   public ITextComponent name;
 
    protected LockableTileEntity(TileEntityType<?> p_i48285_1_) {
       super(p_i48285_1_);
@@ -81,4 +_,29 @@
    }
 
    protected abstract Container createMenu(int p_213906_1_, PlayerInventory p_213906_2_);
+
+   // CraftBukkit start
+   @Override
+   public org.bukkit.Location getLocation() {
+      if (level == null) return null;
+      return new org.bukkit.Location(level.getWorld(), worldPosition.getX(), worldPosition.getY(), worldPosition.getZ());
+   }
+   // CraftBukkit end
+
+   private net.minecraftforge.common.util.LazyOptional<?> itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> createUnSidedHandler());
+   protected net.minecraftforge.items.IItemHandler createUnSidedHandler() {
+      return new net.minecraftforge.items.wrapper.InvWrapper(this);
+   }
+
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> cap, @javax.annotation.Nullable net.minecraft.util.Direction side) {
+      if (!this.remove && cap == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY )
+         return itemHandler.cast();
+      return super.getCapability(cap, side);
+   }
+
+   @Override
+   protected void invalidateCaps() {
+      super.invalidateCaps();
+      itemHandler.invalidate();
+   }
 }
