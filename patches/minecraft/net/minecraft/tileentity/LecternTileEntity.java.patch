--- a/net/minecraft/tileentity/LecternTileEntity.java
+++ b/net/minecraft/tileentity/LecternTileEntity.java
@@ -1,5 +_,9 @@
 package net.minecraft.tileentity;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.block.BlockState;
 import net.minecraft.block.LecternBlock;
@@ -25,9 +_,62 @@
 import net.minecraft.util.text.StringTextComponent;
 import net.minecraft.util.text.TranslationTextComponent;
 import net.minecraft.world.server.ServerWorld;
-
-public class LecternTileEntity extends TileEntity implements IClearable, INamedContainerProvider {
-   private final IInventory bookAccess = new IInventory() {
+import org.bukkit.Location;
+import org.bukkit.block.Lectern;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.v1_16_R3.command.CraftBlockCommandSender;
+import org.bukkit.craftbukkit.v1_16_R3.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+
+public class LecternTileEntity extends TileEntity implements IClearable, INamedContainerProvider, ICommandSource { // CraftBukkit - ICommandSource
+   // CraftBukkit start - add fields and methods
+   public final IInventory bookAccess = new LecternInventory();
+   public class LecternInventory implements IInventory {
+
+       public List<HumanEntity> transaction = new ArrayList<>();
+       private int maxStack = 1;
+
+       @Override
+       public List<ItemStack> getContents() {
+          return Arrays.asList(book);
+       }
+
+       @Override
+       public void onOpen(CraftHumanEntity who) {
+          transaction.add(who);
+       }
+
+       @Override
+       public void onClose(CraftHumanEntity who) {
+          transaction.remove(who);
+       }
+
+       @Override
+       public List<HumanEntity> getViewers() {
+          return transaction;
+       }
+
+       @Override
+       public void setMaxStackSize(int i) {
+          maxStack = i;
+       }
+
+       @Override
+       public Location getLocation() {
+          return new Location(level.getWorld(), worldPosition.getX(), worldPosition.getY(), worldPosition.getZ());
+       }
+
+       @Override
+       public InventoryHolder getOwner() {
+          return (Lectern) LecternTileEntity.this.getOwner();
+       }
+
+       public LecternTileEntity getLectern(){
+          return LecternTileEntity.this;
+       }
+
+       // CraftBukkit end
       public int getContainerSize() {
          return 1;
       }
@@ -36,13 +_,13 @@
          return LecternTileEntity.this.book.isEmpty();
       }
 
-      public ItemStack getItem(int p_70301_1_) {
-         return p_70301_1_ == 0 ? LecternTileEntity.this.book : ItemStack.EMPTY;
+      public ItemStack getItem(int index) {
+         return index == 0 ? LecternTileEntity.this.book : ItemStack.EMPTY;
       }
 
-      public ItemStack removeItem(int p_70298_1_, int p_70298_2_) {
-         if (p_70298_1_ == 0) {
-            ItemStack itemstack = LecternTileEntity.this.book.split(p_70298_2_);
+      public ItemStack removeItem(int index, int count) {
+         if (index == 0) {
+            ItemStack itemstack = LecternTileEntity.this.book.split(count);
             if (LecternTileEntity.this.book.isEmpty()) {
                LecternTileEntity.this.onBookItemRemove();
             }
@@ -53,8 +_,8 @@
          }
       }
 
-      public ItemStack removeItemNoUpdate(int p_70304_1_) {
-         if (p_70304_1_ == 0) {
+      public ItemStack removeItemNoUpdate(int index) {
+         if (index == 0) {
             ItemStack itemstack = LecternTileEntity.this.book;
             LecternTileEntity.this.book = ItemStack.EMPTY;
             LecternTileEntity.this.onBookItemRemove();
@@ -64,26 +_,34 @@
          }
       }
 
-      public void setItem(int p_70299_1_, ItemStack p_70299_2_) {
+      public void setItem(int index, ItemStack stack) {
+         // CraftBukkit start
+          if (index == 0) {
+            LecternTileEntity.this.setBook(stack);
+            if (LecternTileEntity.this.getLevel() != null) {
+               LecternBlock.resetBookState(LecternTileEntity.this.getLevel(), LecternTileEntity.this.getBlockPos(), LecternTileEntity.this.getBlockState(), LecternTileEntity.this.hasBook());
+            }
+         }
+         // CraftBukkit end
       }
 
       public int getMaxStackSize() {
-         return 1;
+         return maxStack; // CraftBukkit
       }
 
       public void setChanged() {
          LecternTileEntity.this.setChanged();
       }
 
-      public boolean stillValid(PlayerEntity p_70300_1_) {
+      public boolean stillValid(PlayerEntity player) {
          if (LecternTileEntity.this.level.getBlockEntity(LecternTileEntity.this.worldPosition) != LecternTileEntity.this) {
             return false;
          } else {
-            return p_70300_1_.distanceToSqr((double)LecternTileEntity.this.worldPosition.getX() + 0.5D, (double)LecternTileEntity.this.worldPosition.getY() + 0.5D, (double)LecternTileEntity.this.worldPosition.getZ() + 0.5D) > 64.0D ? false : LecternTileEntity.this.hasBook();
+            return player.distanceToSqr((double)LecternTileEntity.this.worldPosition.getX() + 0.5D, (double)LecternTileEntity.this.worldPosition.getY() + 0.5D, (double)LecternTileEntity.this.worldPosition.getZ() + 0.5D) > 64.0D ? false : LecternTileEntity.this.hasBook();
          }
       }
 
-      public boolean canPlaceItem(int p_94041_1_, ItemStack p_94041_2_) {
+      public boolean canPlaceItem(int index, ItemStack stack) {
          return false;
       }
 
@@ -91,13 +_,13 @@
       }
    };
    private final IIntArray dataAccess = new IIntArray() {
-      public int get(int p_221476_1_) {
-         return p_221476_1_ == 0 ? LecternTileEntity.this.page : 0;
+      public int get(int index) {
+         return index == 0 ? LecternTileEntity.this.page : 0;
       }
 
-      public void set(int p_221477_1_, int p_221477_2_) {
-         if (p_221477_1_ == 0) {
-            LecternTileEntity.this.setPage(p_221477_2_);
+      public void set(int index, int value) {
+         if (index == 0) {
+            LecternTileEntity.this.setPage(value);
          }
 
       }
@@ -140,7 +_,7 @@
       this.setChanged();
    }
 
-   private void setPage(int p_214035_1_) {
+   public void setPage(int p_214035_1_) {
       int i = MathHelper.clamp(p_214035_1_, 0, this.pageCount - 1);
       if (i != this.page) {
          this.page = i;
@@ -167,6 +_,34 @@
       return p_214047_1_;
    }
 
+
+   // CraftBukkit start
+   @Override
+   public void sendMessage(ITextComponent component, UUID senderUUID) {
+
+   }
+
+   @Override
+   public CommandSender getBukkitSender(final CommandSource wrapper) {
+      return (wrapper.getEntity() != null) ? wrapper.getEntity().getBukkitSender(wrapper) : new CraftBlockCommandSender(wrapper, this);
+   }
+
+   @Override
+   public boolean acceptsSuccess() {
+      return false;
+   }
+
+   @Override
+   public boolean acceptsFailure() {
+      return false;
+   }
+
+   @Override
+   public boolean shouldInformAdmins() {
+      return false;
+   }
+   // CraftBukkit end
+
    private CommandSource createCommandSourceStack(@Nullable PlayerEntity p_214039_1_) {
       String s;
       ITextComponent itextcomponent;
@@ -179,7 +_,8 @@
       }
 
       Vector3d vector3d = Vector3d.atCenterOf(this.worldPosition);
-      return new CommandSource(ICommandSource.NULL, vector3d, Vector2f.ZERO, (ServerWorld)this.level, 2, s, itextcomponent, this.level.getServer(), p_214039_1_);
+      // CraftBukkit - this
+      return new CommandSource(this, vector3d, Vector2f.ZERO, (ServerWorld)this.level, 2, s, itextcomponent, this.level.getServer(), p_214039_1_);
    }
 
    public boolean onlyOpCanSetNbt() {
@@ -213,7 +_,7 @@
    }
 
    public Container createMenu(int p_createMenu_1_, PlayerInventory p_createMenu_2_, PlayerEntity p_createMenu_3_) {
-      return new LecternContainer(p_createMenu_1_, this.bookAccess, this.dataAccess);
+      return new LecternContainer(p_createMenu_1_, this.bookAccess, this.dataAccess, p_createMenu_2_); // CraftBukkit
    }
 
    public ITextComponent getDisplayName() {
