--- a/net/minecraft/tileentity/ChestTileEntity.java
+++ b/net/minecraft/tileentity/ChestTileEntity.java
@@ -1,7 +_,9 @@
 package net.minecraft.tileentity;
 
+import java.util.List;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockState;
+import net.minecraft.block.Blocks;
 import net.minecraft.block.ChestBlock;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.entity.player.PlayerInventory;
@@ -27,6 +_,8 @@
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
 
 @OnlyIn(
    value = Dist.CLIENT,
@@ -36,8 +_,9 @@
    private NonNullList<ItemStack> items = NonNullList.withSize(27, ItemStack.EMPTY);
    protected float openness;
    protected float oOpenness;
-   protected int openCount;
+   public int openCount;
    private int tickInterval;
+   private net.minecraftforge.common.util.LazyOptional<net.minecraftforge.items.IItemHandlerModifiable> chestHandler;
 
    protected ChestTileEntity(TileEntityType<?> p_i48287_1_) {
       super(p_i48287_1_);
@@ -51,6 +_,42 @@
       return 27;
    }
 
+   // CraftBukkit start - add fields and methods
+   public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+   private int maxStack = MAX_STACK;
+   public boolean opened;
+
+   @Override
+   public List<ItemStack> getContents() {
+      return this.items;
+   }
+
+   @Override
+   public void onOpen(CraftHumanEntity who) {
+      this.transaction.add(who);
+   }
+
+   @Override
+   public void onClose(CraftHumanEntity who) {
+      this.transaction.remove(who);
+   }
+
+   @Override
+   public List<HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   @Override
+   public void setMaxStackSize(int size) {
+      this.maxStack = size;
+   }
+
+   @Override
+   public int getMaxStackSize() {
+      return maxStack;
+   }
+   // CraftBukkit end
+
    protected ITextComponent getDefaultName() {
       return new TranslationTextComponent("container.chest");
    }
@@ -81,6 +_,12 @@
       this.openCount = getOpenCount(this.level, this, this.tickInterval, i, j, k, this.openCount);
       this.oOpenness = this.openness;
       float f = 0.1F;
+      // CraftBukkit start - If chest is forced open by API, remove a viewer due to playBlockAction() call and don't tick to prevent sound effects.
+      if (opened) {
+         this.openCount--;
+         return;
+      }
+      // CraftBukkit end
       if (this.openCount > 0 && this.openness == 0.0F) {
          this.playSound(SoundEvents.CHEST_OPEN);
       }
@@ -133,7 +_,7 @@
       return i;
    }
 
-   private void playSound(SoundEvent p_195483_1_) {
+   public void playSound(SoundEvent p_195483_1_) {
       ChestType chesttype = this.getBlockState().getValue(ChestBlock.TYPE);
       if (chesttype != ChestType.LEFT) {
          double d0 = (double)this.worldPosition.getX() + 0.5D;
@@ -163,8 +_,20 @@
          if (this.openCount < 0) {
             this.openCount = 0;
          }
+         int oldPower = Math.max(0, Math.min(15, this.openCount)); // CraftBukkit - Get power before new viewer is added
 
          ++this.openCount;
+
+         if (this.level == null) return; // CraftBukkit
+         // CraftBukkit start - Call redstone event
+         if (this.getBlockState().getBlock() == Blocks.TRAPPED_CHEST) {
+            int newPower = Math.max(0, Math.min(15, this.openCount));
+            if (oldPower != newPower) {
+               org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRedstoneChange(level, worldPosition, oldPower, newPower);
+            }
+         }
+         // CraftBukkit end
+
          this.signalOpenCount();
       }
 
@@ -172,7 +_,18 @@
 
    public void stopOpen(PlayerEntity p_174886_1_) {
       if (!p_174886_1_.isSpectator()) {
+         int oldPower = Math.max(0, Math.min(15, this.openCount)); // CraftBukkit - Get power before new viewer is added
          --this.openCount;
+
+         // CraftBukkit start - Call redstone event
+         if (this.getBlockState().getBlock() == Blocks.TRAPPED_CHEST) {
+            int newPower = Math.max(0, Math.min(15, this.openCount));
+            if (oldPower != newPower) {
+               org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRedstoneChange(level, worldPosition, oldPower, newPower);
+            }
+         }
+         // CraftBukkit end
+
          this.signalOpenCount();
       }
 
@@ -202,7 +_,7 @@
 
    public static int getOpenCount(IBlockReader p_195481_0_, BlockPos p_195481_1_) {
       BlockState blockstate = p_195481_0_.getBlockState(p_195481_1_);
-      if (blockstate.getBlock().isEntityBlock()) {
+      if (blockstate.hasTileEntity()) {
          TileEntity tileentity = p_195481_0_.getBlockEntity(p_195481_1_);
          if (tileentity instanceof ChestTileEntity) {
             return ((ChestTileEntity)tileentity).openCount;
@@ -221,4 +_,48 @@
    protected Container createMenu(int p_213906_1_, PlayerInventory p_213906_2_) {
       return ChestContainer.threeRows(p_213906_1_, p_213906_2_, this);
    }
+
+   @Override
+   public void clearCache() {
+      super.clearCache();
+      if (this.chestHandler != null) {
+         net.minecraftforge.common.util.LazyOptional<?> oldHandler = this.chestHandler;
+         this.chestHandler = null;
+         oldHandler.invalidate();
+      }
+   }
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> cap, Direction side) {
+       if (!this.remove && cap == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) {
+          if (this.chestHandler == null)
+             this.chestHandler = net.minecraftforge.common.util.LazyOptional.of(this::createHandler);
+          return this.chestHandler.cast();
+       }
+       return super.getCapability(cap, side);
+   }
+
+   private net.minecraftforge.items.IItemHandlerModifiable createHandler() {
+      BlockState state = this.getBlockState();
+      if (!(state.getBlock() instanceof ChestBlock)) {
+         return new net.minecraftforge.items.wrapper.InvWrapper(this);
+      }
+      IInventory inv = ChestBlock.getContainer((ChestBlock) state.getBlock(), state, getLevel(), getBlockPos(), true);
+      return new net.minecraftforge.items.wrapper.InvWrapper(inv == null ? this : inv);
+   }
+
+   @Override
+   protected void invalidateCaps() {
+      super.invalidateCaps();
+      if (chestHandler != null)
+        chestHandler.invalidate();
+   }
+
+   // LoliServer - don't set chest onlyOpCanSetNbt because some mod need this.
+   // CraftBukkit start
+//   @Override
+//   public boolean onlyOpCanSetNbt() {
+//      return true;
+//   }
+   // CraftBukkit end
 }
