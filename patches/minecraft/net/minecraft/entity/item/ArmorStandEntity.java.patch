--- a/net/minecraft/entity/item/ArmorStandEntity.java
+++ b/net/minecraft/entity/item/ArmorStandEntity.java
@@ -42,6 +_,13 @@
 import net.minecraft.world.server.ServerWorld;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.CraftEquipmentSlot;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.entity.ArmorStand;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerArmorStandManipulateEvent;
+import org.bukkit.inventory.EquipmentSlot;
 
 public class ArmorStandEntity extends LivingEntity {
    private static final Rotations DEFAULT_HEAD_POSE = new Rotations(0.0F, 0.0F, 0.0F);
@@ -60,19 +_,21 @@
    public static final DataParameter<Rotations> DATA_LEFT_LEG_POSE = EntityDataManager.defineId(ArmorStandEntity.class, DataSerializers.ROTATIONS);
    public static final DataParameter<Rotations> DATA_RIGHT_LEG_POSE = EntityDataManager.defineId(ArmorStandEntity.class, DataSerializers.ROTATIONS);
    private static final Predicate<Entity> RIDABLE_MINECARTS = (p_200617_0_) -> {
-      return p_200617_0_ instanceof AbstractMinecartEntity && ((AbstractMinecartEntity)p_200617_0_).getMinecartType() == AbstractMinecartEntity.Type.RIDEABLE;
+      return p_200617_0_ instanceof AbstractMinecartEntity && ((AbstractMinecartEntity)p_200617_0_).canBeRidden();
    };
    private final NonNullList<ItemStack> handItems = NonNullList.withSize(2, ItemStack.EMPTY);
    private final NonNullList<ItemStack> armorItems = NonNullList.withSize(4, ItemStack.EMPTY);
    private boolean invisible;
    public long lastHit;
-   private int disabledSlots;
-   private Rotations headPose = DEFAULT_HEAD_POSE;
-   private Rotations bodyPose = DEFAULT_BODY_POSE;
-   private Rotations leftArmPose = DEFAULT_LEFT_ARM_POSE;
-   private Rotations rightArmPose = DEFAULT_RIGHT_ARM_POSE;
-   private Rotations leftLegPose = DEFAULT_LEFT_LEG_POSE;
-   private Rotations rightLegPose = DEFAULT_RIGHT_LEG_POSE;
+   public int disabledSlots;
+   public Rotations headPose = DEFAULT_HEAD_POSE;
+   public Rotations bodyPose = DEFAULT_BODY_POSE;
+   public Rotations leftArmPose = DEFAULT_LEFT_ARM_POSE;
+   public Rotations rightArmPose = DEFAULT_RIGHT_ARM_POSE;
+   public Rotations leftLegPose = DEFAULT_LEFT_LEG_POSE;
+   public Rotations rightLegPose = DEFAULT_RIGHT_LEG_POSE;
+
+   public java.util.ArrayList<org.bukkit.inventory.ItemStack> drops = new java.util.ArrayList<>(); // CatServer
 
    public ArmorStandEntity(EntityType<? extends ArmorStandEntity> p_i50225_1_, World p_i50225_2_) {
       super(p_i50225_1_, p_i50225_2_);
@@ -84,6 +_,13 @@
       this.setPos(p_i45855_2_, p_i45855_4_, p_i45855_6_);
    }
 
+   // CraftBukkit start - SPIGOT-3607, SPIGOT-3637
+   @Override
+   public float getBukkitYaw() {
+      return this.yRot;
+   }
+   // CraftBukkit end
+
    public void refreshDimensions() {
       double d0 = this.getX();
       double d1 = this.getY();
@@ -121,24 +_,30 @@
 
    public ItemStack getItemBySlot(EquipmentSlotType p_184582_1_) {
       switch(p_184582_1_.getType()) {
-      case HAND:
-         return this.handItems.get(p_184582_1_.getIndex());
-      case ARMOR:
-         return this.armorItems.get(p_184582_1_.getIndex());
-      default:
-         return ItemStack.EMPTY;
+         case HAND:
+            return this.handItems.get(p_184582_1_.getIndex());
+         case ARMOR:
+            return this.armorItems.get(p_184582_1_.getIndex());
+         default:
+            return ItemStack.EMPTY;
       }
    }
 
    public void setItemSlot(EquipmentSlotType p_184201_1_, ItemStack p_184201_2_) {
+      // CraftBukkit start
+      this.setItemStackToSlot(p_184201_1_, p_184201_2_, false);
+   }
+
+   public void setItemStackToSlot(EquipmentSlotType p_184201_1_, ItemStack p_184201_2_, boolean silent) {
+      // CraftBukkit end
       switch(p_184201_1_.getType()) {
-      case HAND:
-         this.playEquipSound(p_184201_2_);
-         this.handItems.set(p_184201_1_.getIndex(), p_184201_2_);
-         break;
-      case ARMOR:
-         this.playEquipSound(p_184201_2_);
-         this.armorItems.set(p_184201_1_.getIndex(), p_184201_2_);
+         case HAND:
+            this.playEquipSound(p_184201_2_, silent); // CraftBukkit
+            this.handItems.set(p_184201_1_.getIndex(), p_184201_2_);
+            break;
+         case ARMOR:
+            this.playEquipSound(p_184201_2_, silent); // CraftBukkit
+            this.armorItems.set(p_184201_1_.getIndex(), p_184201_2_);
       }
 
    }
@@ -372,7 +_,23 @@
          return false;
       } else if (itemstack.isEmpty() && (this.disabledSlots & 1 << p_226529_2_.getFilterFlag() + 16) != 0) {
          return false;
-      } else if (p_226529_1_.abilities.instabuild && itemstack.isEmpty() && !p_226529_3_.isEmpty()) {
+      }
+      // CraftBukkit start
+      org.bukkit.inventory.ItemStack armorStandItem = CraftItemStack.asCraftMirror(itemstack);
+      org.bukkit.inventory.ItemStack playerHeldItem = CraftItemStack.asCraftMirror(p_226529_3_);
+
+      Player bukkitPlayer = (Player) p_226529_1_.getBukkitEntity();
+      ArmorStand self = (ArmorStand) this.getBukkitEntity();
+
+      EquipmentSlot equipmentSlot = CraftEquipmentSlot.getSlot(p_226529_2_);
+      PlayerArmorStandManipulateEvent armorStandManipulateEvent = new PlayerArmorStandManipulateEvent(bukkitPlayer, self, playerHeldItem, armorStandItem, equipmentSlot);
+      this.level.getCBServer().getPluginManager().callEvent(armorStandManipulateEvent);
+
+      if (armorStandManipulateEvent.isCancelled()) {
+         return true;
+      }
+      // CraftBukkit end
+      if (p_226529_1_.abilities.instabuild && itemstack.isEmpty() && !p_226529_3_.isEmpty()) {
          ItemStack itemstack2 = p_226529_3_.copy();
          itemstack2.setCount(1);
          this.setItemSlot(p_226529_2_, itemstack2);
@@ -397,12 +_,22 @@
    public boolean hurt(DamageSource p_70097_1_, float p_70097_2_) {
       if (!this.level.isClientSide && !this.removed) {
          if (DamageSource.OUT_OF_WORLD.equals(p_70097_1_)) {
-            this.remove();
+            // CraftBukkit start
+            if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, p_70097_1_, p_70097_2_)) {
+               return false;
+            }
+            // CraftBukkit end
+            this.kill(); // CraftBukkit - this.remove() -> this.onKillCommand()
             return false;
-         } else if (!this.isInvulnerableTo(p_70097_1_) && !this.invisible && !this.isMarker()) {
+         } else if (!this.isInvulnerableTo(p_70097_1_) && (true || !this.invisible) && !this.isMarker()) { // CraftBukkit
+            // CraftBukkit start
+            if (CraftEventFactory.handleNonLivingEntityDamageEvent(this, p_70097_1_, p_70097_2_,true, this.invisible)) {
+               return false;
+            }
+            // CraftBukkit end
             if (p_70097_1_.isExplosion()) {
                this.brokenByAnything(p_70097_1_);
-               this.remove();
+               this.kill(); // CraftBukkit - this.remove() -> this.onKillCommand()
                return false;
             } else if (DamageSource.IN_FIRE.equals(p_70097_1_)) {
                if (this.isOnFire()) {
@@ -426,7 +_,7 @@
                } else if (p_70097_1_.isCreativePlayer()) {
                   this.playBrokenSound();
                   this.showBreakingParticles();
-                  this.remove();
+                  this.kill(); // CraftBukkit - this.remove() -> this.onKillCommand()
                   return flag1;
                } else {
                   long i = this.level.getGameTime();
@@ -486,7 +_,7 @@
       f = f - p_213817_2_;
       if (f <= 0.5F) {
          this.brokenByAnything(p_213817_1_);
-         this.remove();
+         this.kill(); // CraftBukkit - this.remove() -> this.onKillCommand()
       } else {
          this.setHealth(f);
       }
@@ -494,18 +_,20 @@
    }
 
    private void brokenByPlayer(DamageSource p_213815_1_) {
-      Block.popResource(this.level, this.blockPosition(), new ItemStack(Items.ARMOR_STAND));
+      // Block.popResource(this.level, this.blockPosition(), new ItemStack(Items.ARMOR_STAND));
+      drops.add(org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack.asBukkitCopy(new ItemStack(Items.ARMOR_STAND))); // CatServer - add to drops
       this.brokenByAnything(p_213815_1_);
    }
 
    private void brokenByAnything(DamageSource p_213816_1_) {
       this.playBrokenSound();
-      this.dropAllDeathLoot(p_213816_1_);
+      //this.spawnDrops(source); // CraftBukkit - moved down
 
       for(int i = 0; i < this.handItems.size(); ++i) {
          ItemStack itemstack = this.handItems.get(i);
          if (!itemstack.isEmpty()) {
-            Block.popResource(this.level, this.blockPosition().above(), itemstack);
+            // Block.popResource(this.level, this.blockPosition().above(), itemstack);
+            drops.add(org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack.asBukkitCopy(itemstack)); // CatServer - add to drops
             this.handItems.set(i, ItemStack.EMPTY);
          }
       }
@@ -513,11 +_,12 @@
       for(int j = 0; j < this.armorItems.size(); ++j) {
          ItemStack itemstack1 = this.armorItems.get(j);
          if (!itemstack1.isEmpty()) {
-            Block.popResource(this.level, this.blockPosition().above(), itemstack1);
+            // Block.popResource(this.level, this.blockPosition().above(), itemstack1);
+            drops.add(org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack.asBukkitCopy(itemstack1)); // CatServer - add to drops
             this.armorItems.set(j, ItemStack.EMPTY);
          }
       }
-
+      this.dropAllDeathLoot(p_213816_1_); // CraftBukkit - moved from above
    }
 
    private void playBrokenSound() {
@@ -601,6 +_,14 @@
       return this.isSmall();
    }
 
+
+   // CraftBukkit start
+   @Override
+   protected boolean shouldDropExperience() {
+      return true; // MC-157395, SPIGOT-5193 even baby (small) armor stands should drop
+   }
+   // CraftBukkit end
+
    public void kill() {
       this.remove();
    }
@@ -613,7 +_,7 @@
       return this.isMarker() ? PushReaction.IGNORE : super.getPistonPushReaction();
    }
 
-   private void setSmall(boolean p_175420_1_) {
+   public void setSmall(boolean p_175420_1_) {
       this.entityData.set(DATA_CLIENT_FLAGS, this.setBit(this.entityData.get(DATA_CLIENT_FLAGS), 1, p_175420_1_));
    }
 
@@ -621,7 +_,7 @@
       return (this.entityData.get(DATA_CLIENT_FLAGS) & 1) != 0;
    }
 
-   private void setShowArms(boolean p_175413_1_) {
+   public void setShowArms(boolean p_175413_1_) {
       this.entityData.set(DATA_CLIENT_FLAGS, this.setBit(this.entityData.get(DATA_CLIENT_FLAGS), 4, p_175413_1_));
    }
 
@@ -629,7 +_,7 @@
       return (this.entityData.get(DATA_CLIENT_FLAGS) & 4) != 0;
    }
 
-   private void setNoBasePlate(boolean p_175426_1_) {
+   public void setNoBasePlate(boolean p_175426_1_) {
       this.entityData.set(DATA_CLIENT_FLAGS, this.setBit(this.entityData.get(DATA_CLIENT_FLAGS), 8, p_175426_1_));
    }
 
@@ -637,7 +_,7 @@
       return (this.entityData.get(DATA_CLIENT_FLAGS) & 8) != 0;
    }
 
-   private void setMarker(boolean p_181027_1_) {
+   public void setMarker(boolean p_181027_1_) {
       this.entityData.set(DATA_CLIENT_FLAGS, this.setBit(this.entityData.get(DATA_CLIENT_FLAGS), 16, p_181027_1_));
    }
 
