--- a/net/minecraft/entity/item/LeashKnotEntity.java
+++ b/net/minecraft/entity/item/LeashKnotEntity.java
@@ -8,8 +_,10 @@
 import net.minecraft.entity.MobEntity;
 import net.minecraft.entity.Pose;
 import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.nbt.CompoundNBT;
 import net.minecraft.network.IPacket;
+import net.minecraft.network.play.server.SMountEntityPacket;
 import net.minecraft.network.play.server.SSpawnObjectPacket;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.util.ActionResultType;
@@ -21,8 +_,10 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.vector.Vector3d;
 import net.minecraft.world.World;
+import net.minecraft.world.server.ServerWorld;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
 
 public class LeashKnotEntity extends HangingEntity {
    public LeashKnotEntity(EntityType<? extends LeashKnotEntity> p_i50223_1_, World p_i50223_2_) {
@@ -45,6 +_,8 @@
 
    protected void recalculateBoundingBox() {
       this.setPosRaw((double)this.pos.getX() + 0.5D, (double)this.pos.getY() + 0.5D, (double)this.pos.getZ() + 0.5D);
+      if (this.isAddedToWorld() && this.level instanceof net.minecraft.world.server.ServerWorld) ((net.minecraft.world.server.ServerWorld)this.level).updateChunkPos(this); // Forge - Process chunk registration after moving.
+      if(valid) ((ServerWorld) level).updateChunkPos(this); // CraftBukkit
    }
 
    public void setDirection(Direction p_174859_1_) {
@@ -87,19 +_,39 @@
 
          for(MobEntity mobentity : list) {
             if (mobentity.getLeashHolder() == p_184230_1_) {
+               // CraftBukkit start
+               if (CraftEventFactory.callPlayerLeashEntityEvent(mobentity, this, p_184230_1_).isCancelled()) {
+                  ((ServerPlayerEntity) p_184230_1_).connection.send(new SMountEntityPacket(mobentity, mobentity.getLeashHolder()));
+                  continue;
+               }
+               // CraftBukkit end
                mobentity.setLeashedTo(this, true);
                flag = true;
             }
          }
 
          if (!flag) {
-            this.remove();
-            if (p_184230_1_.abilities.instabuild) {
+            // CraftBukkit start - Move below
+            //this.remove();
+            boolean die = true;
+            // CraftBukkit end
+            if (true || p_184230_1_.abilities.instabuild) { // CraftBukkit - Process for non-creative as well
                for(MobEntity mobentity1 : list) {
                   if (mobentity1.isLeashed() && mobentity1.getLeashHolder() == this) {
-                     mobentity1.dropLeash(true, false);
+                     // CraftBukkit start
+                     if (CraftEventFactory.callPlayerUnleashEntityEvent(mobentity1, p_184230_1_).isCancelled()) {
+                        die = false;
+                        continue;
+                     }
+                     mobentity1.dropLeash(true,!p_184230_1_.abilities.instabuild); // flase -> survival mode boolean
+                     // CraftBukkit end
                   }
                }
+               // CraftBukkit start
+               if(die){
+                  this.remove();
+               }
+               // CraftBukkit end
             }
          }
 
