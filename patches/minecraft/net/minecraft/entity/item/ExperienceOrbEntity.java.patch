--- a/net/minecraft/entity/item/ExperienceOrbEntity.java
+++ b/net/minecraft/entity/item/ExperienceOrbEntity.java
@@ -5,6 +_,7 @@
 import net.minecraft.enchantment.Enchantments;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
+import net.minecraft.entity.LivingEntity;
 import net.minecraft.entity.MoverType;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.inventory.EquipmentSlotType;
@@ -20,6 +_,11 @@
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
+import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
+import org.bukkit.event.player.PlayerItemMendEvent;
 
 public class ExperienceOrbEntity extends Entity {
    public int tickCount;
@@ -51,6 +_,7 @@
 
    public void tick() {
       super.tick();
+      PlayerEntity prevTarget = this.followingPlayer; // CraftBukkit - store old target
       if (this.throwTime > 0) {
          --this.throwTime;
       }
@@ -86,7 +_,22 @@
          this.followingPlayer = null;
       }
 
-      if (this.followingPlayer != null) {
+      // CraftBukkit start
+      boolean cancelled = false;
+      if (this.followingPlayer != prevTarget) {
+         EntityTargetLivingEntityEvent event = CraftEventFactory.callEntityTargetLivingEvent(this, followingPlayer, (followingPlayer != null ? TargetReason.CLOSEST_PLAYER : TargetReason.FORGOT_TARGET));
+         LivingEntity target = (event.getTarget() == null) ? null : ((CraftLivingEntity) event.getTarget()).getHandle();
+         cancelled = event.isCancelled();
+
+         if (cancelled) {
+            followingPlayer = prevTarget;
+         } else {
+            followingPlayer = (target instanceof PlayerEntity) ? (PlayerEntity) target : null;
+         }
+      }
+
+      if(this.followingPlayer != null && !cancelled){
+         // CraftBukkit end
          Vector3d vector3d = new Vector3d(this.followingPlayer.getX() - this.getX(), this.followingPlayer.getY() + (double)this.followingPlayer.getEyeHeight() / 2.0D - this.getY(), this.followingPlayer.getZ() - this.getZ());
          double d1 = vector3d.lengthSqr();
          if (d1 < 64.0D) {
@@ -98,7 +_,8 @@
       this.move(MoverType.SELF, this.getDeltaMovement());
       float f = 0.98F;
       if (this.onGround) {
-         f = this.level.getBlockState(new BlockPos(this.getX(), this.getY() - 1.0D, this.getZ())).getBlock().getFriction() * 0.98F;
+         BlockPos pos =new BlockPos(this.getX(), this.getY() - 1.0D, this.getZ());
+         f = this.level.getBlockState(pos).getSlipperiness(this.level, pos, this) * 0.98F;
       }
 
       this.setDeltaMovement(this.getDeltaMovement().multiply((double)f, 0.98D, (double)f));
@@ -123,6 +_,7 @@
    }
 
    public boolean hurt(DamageSource p_70097_1_, float p_70097_2_) {
+      if (this.level.isClientSide || this.removed) return false; //Forge: Fixes MC-53850
       if (this.isInvulnerableTo(p_70097_1_)) {
          return false;
       } else {
@@ -151,20 +_,27 @@
    public void playerTouch(PlayerEntity p_70100_1_) {
       if (!this.level.isClientSide) {
          if (this.throwTime == 0 && p_70100_1_.takeXpDelay == 0) {
+            if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerXpEvent.PickupXp(p_70100_1_, this))) return;
             p_70100_1_.takeXpDelay = 2;
             p_70100_1_.take(this, 1);
             Entry<EquipmentSlotType, ItemStack> entry = EnchantmentHelper.getRandomItemWith(Enchantments.MENDING, p_70100_1_, ItemStack::isDamaged);
             if (entry != null) {
                ItemStack itemstack = entry.getValue();
                if (!itemstack.isEmpty() && itemstack.isDamaged()) {
-                  int i = Math.min(this.xpToDurability(this.value), itemstack.getDamageValue());
-                  this.value -= this.durabilityToXp(i);
-                  itemstack.setDamageValue(itemstack.getDamageValue() - i);
+                  int i = Math.min((int) (this.value * itemstack.getXpRepairRatio()), itemstack.getDamageValue());
+                  // CraftBukkit start
+                  PlayerItemMendEvent event = CraftEventFactory.callPlayerItemMendEvent(p_70100_1_, this, itemstack, i);
+                  i = event.getRepairAmount();
+                  if (!event.isCancelled()) {
+                     this.value -= this.durabilityToXp(i);
+                     itemstack.setDamageValue(itemstack.getDamageValue() - i);
+                  }
+                  // CraftBukkit end
                }
             }
 
             if (this.value > 0) {
-               p_70100_1_.giveExperiencePoints(this.value);
+               p_70100_1_.giveExperiencePoints(CraftEventFactory.callPlayerExpChangeEvent(p_70100_1_, this.value).getAmount()); // CraftBukkit - this.value -> event.getAmount()
             }
 
             this.remove();
@@ -211,6 +_,56 @@
    }
 
    public static int getExperienceValue(int p_70527_0_) {
+      // CraftBukkit start
+      if (p_70527_0_ > 162670129) {
+         return p_70527_0_ - 100000;
+      }
+      if (p_70527_0_ > 81335063) {
+         return 81335063;
+      }
+      if (p_70527_0_ > 40667527) {
+         return 40667527;
+      }
+      if (p_70527_0_ > 20333759) {
+         return 20333759;
+      }
+      if (p_70527_0_ > 10166857) {
+         return 10166857;
+      }
+      if (p_70527_0_ > 5083423) {
+         return 5083423;
+      }
+      if (p_70527_0_ > 2541701) {
+         return 2541701;
+      }
+      if (p_70527_0_ > 1270849) {
+         return 1270849;
+      }
+      if (p_70527_0_ > 635413) {
+         return 635413;
+      }
+      if (p_70527_0_ > 317701) {
+         return 317701;
+      }
+      if (p_70527_0_ > 158849) {
+         return 158849;
+      }
+      if (p_70527_0_ > 79423) {
+         return 79423;
+      }
+      if (p_70527_0_ > 39709) {
+         return 39709;
+      }
+      if (p_70527_0_ > 19853) {
+         return 19853;
+      }
+      if (p_70527_0_ > 9923) {
+         return 9923;
+      }
+      if (p_70527_0_ > 4957) {
+         return 4957;
+      }
+      // CraftBukkit end
       if (p_70527_0_ >= 2477) {
          return 2477;
       } else if (p_70527_0_ >= 1237) {
