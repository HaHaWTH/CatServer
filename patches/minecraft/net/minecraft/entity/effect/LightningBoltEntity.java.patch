--- a/net/minecraft/entity/effect/LightningBoltEntity.java
+++ b/net/minecraft/entity/effect/LightningBoltEntity.java
@@ -11,6 +_,7 @@
 import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.nbt.CompoundNBT;
 import net.minecraft.network.IPacket;
+import net.minecraft.network.play.server.SPlaySoundEffectPacket;
 import net.minecraft.network.play.server.SSpawnObjectPacket;
 import net.minecraft.util.SoundCategory;
 import net.minecraft.util.SoundEvents;
@@ -22,14 +_,18 @@
 import net.minecraft.world.server.ServerWorld;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
 
 public class LightningBoltEntity extends Entity {
    private int life;
    public long seed;
    private int flashes;
-   private boolean visualOnly;
+   public boolean isEffect; // CraftBukkit
+   public boolean visualOnly; // CraftBukkit private->public
    @Nullable
    private ServerPlayerEntity cause;
+   private float damage = 5.0F;
+   public boolean isSilent = false; // Spigot
 
    public LightningBoltEntity(EntityType<? extends LightningBoltEntity> p_i231491_1_, World p_i231491_2_) {
       super(p_i231491_1_, p_i231491_2_);
@@ -51,15 +_,40 @@
       this.cause = p_204809_1_;
    }
 
+   public void setDamage(float damage){
+      this.damage = damage;
+   }
+
+   public float getDamage(){
+      return this.damage;
+   }
+
    public void tick() {
       super.tick();
-      if (this.life == 2) {
+      if (!isSilent && this.life == 2) {  // Spigot
          Difficulty difficulty = this.level.getDifficulty();
          if (difficulty == Difficulty.NORMAL || difficulty == Difficulty.HARD) {
             this.spawnFire(4);
          }
 
-         this.level.playSound((PlayerEntity)null, this.getX(), this.getY(), this.getZ(), SoundEvents.LIGHTNING_BOLT_THUNDER, SoundCategory.WEATHER, 10000.0F, 0.8F + this.random.nextFloat() * 0.2F);
+         // CraftBukkit start - Use relative location for far away sounds
+         float pitch = 0.8F + this.random.nextFloat() * 0.2F;
+         int viewDistance = this.level.getCBServer().getViewDistance() * 16;
+         for (ServerPlayerEntity player : (List<ServerPlayerEntity>) this.level.players()) {
+            final double deltaX = this.getX() - player.getX();
+            final double deltaZ = this.getZ() - player.getZ();
+            final double distanceSquared = deltaX * deltaX + deltaZ * deltaZ;
+            if (distanceSquared > viewDistance * viewDistance) {
+               final double deltaLength = Math.sqrt(distanceSquared);
+               final double relativeX = player.getX() + deltaX / deltaLength * viewDistance;
+               final double relativeZ = player.getZ() + deltaZ / deltaLength * viewDistance;
+               player.connection.send(new SPlaySoundEffectPacket(SoundEvents.LIGHTNING_BOLT_THUNDER, SoundCategory.WEATHER, relativeX, this.getY(), relativeZ, 10000.0f, pitch));
+            }
+            else {
+               player.connection.send(new SPlaySoundEffectPacket(SoundEvents.LIGHTNING_BOLT_THUNDER, SoundCategory.WEATHER, this.getX(), this.getY(), this.getZ(), 10000.0f, pitch));
+            }
+         }
+         // CraftBukkit end
          this.level.playSound((PlayerEntity)null, this.getX(), this.getY(), this.getZ(), SoundEvents.LIGHTNING_BOLT_IMPACT, SoundCategory.WEATHER, 2.0F, 0.5F + this.random.nextFloat() * 0.2F);
       }
 
@@ -75,14 +_,15 @@
          }
       }
 
-      if (this.life >= 0) {
-         if (!(this.level instanceof ServerWorld)) {
+      if (this.life >= 0 && !this.isEffect) { // CraftBukkit - add !this.isEffect
+         if (this.level.isClientSide) {
             this.level.setSkyFlashTime(2);
          } else if (!this.visualOnly) {
             double d0 = 3.0D;
             List<Entity> list = this.level.getEntities(this, new AxisAlignedBB(this.getX() - 3.0D, this.getY() - 3.0D, this.getZ() - 3.0D, this.getX() + 3.0D, this.getY() + 6.0D + 3.0D, this.getZ() + 3.0D), Entity::isAlive);
 
             for(Entity entity : list) {
+               if (!net.minecraftforge.event.ForgeEventFactory.onEntityStruckByLightning(entity, this))
                entity.thunderHit((ServerWorld)this.level, this);
             }
 
@@ -99,14 +_,22 @@
          BlockPos blockpos = this.blockPosition();
          BlockState blockstate = AbstractFireBlock.getState(this.level, blockpos);
          if (this.level.getBlockState(blockpos).isAir() && blockstate.canSurvive(this.level, blockpos)) {
-            this.level.setBlockAndUpdate(blockpos, blockstate);
+            // CraftBukkit start - add "!isEffect"
+            if (!isEffect && !CraftEventFactory.callBlockIgniteEvent(level, blockpos, this).isCancelled()) {
+               this.level.setBlockAndUpdate(blockpos, blockstate);
+            }
+            // CraftBukkit end
          }
 
-         for(int i = 0; i < p_195053_1_; ++i) {
+         for (int i = 0; i < p_195053_1_; ++i) {
             BlockPos blockpos1 = blockpos.offset(this.random.nextInt(3) - 1, this.random.nextInt(3) - 1, this.random.nextInt(3) - 1);
             blockstate = AbstractFireBlock.getState(this.level, blockpos1);
             if (this.level.getBlockState(blockpos1).isAir() && blockstate.canSurvive(this.level, blockpos1)) {
-               this.level.setBlockAndUpdate(blockpos1, blockstate);
+               // CraftBukkit start - add "!isEffect"
+               if (!isEffect && !CraftEventFactory.callBlockIgniteEvent(level, blockpos1, this).isCancelled()) {
+                  this.level.setBlockAndUpdate(blockpos1, blockstate);
+               }
+               // CraftBukkit end
             }
          }
 
