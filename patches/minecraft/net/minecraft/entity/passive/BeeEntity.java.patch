--- a/net/minecraft/entity/passive/BeeEntity.java
+++ b/net/minecraft/entity/passive/BeeEntity.java
@@ -66,7 +_,6 @@
 import net.minecraft.tags.ItemTags;
 import net.minecraft.tileentity.BeehiveTileEntity;
 import net.minecraft.tileentity.TileEntity;
-import net.minecraft.tileentity.TileEntityType;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.RangedInteger;
 import net.minecraft.util.SoundEvent;
@@ -84,6 +_,9 @@
 import net.minecraft.world.server.ServerWorld;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityPotionEffectEvent.Cause;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class BeeEntity extends AnimalEntity implements IAngerable, IFlyingAnimal {
    private static final DataParameter<Byte> DATA_FLAGS_ID = EntityDataManager.defineId(BeeEntity.class, DataSerializers.BYTE);
@@ -94,14 +_,14 @@
    private float rollAmountO;
    private int timeSinceSting;
    private int ticksWithoutNectarSinceExitingHive;
-   private int stayOutOfHiveCountdown;
+   public int stayOutOfHiveCountdown;
    private int numCropsGrownSincePollination;
    private int remainingCooldownBeforeLocatingNewHive = 0;
    private int remainingCooldownBeforeLocatingNewFlower = 0;
    @Nullable
    private BlockPos savedFlowerPos = null;
    @Nullable
-   private BlockPos hivePos = null;
+   public BlockPos hivePos = null;
    private BeeEntity.PollinateGoal beePollinateGoal;
    private BeeEntity.FindBeehiveGoal goToHiveGoal;
    private BeeEntity.FindFlowerGoal goToKnownFlowerGoal;
@@ -184,7 +_,8 @@
       this.ticksWithoutNectarSinceExitingHive = p_70037_1_.getInt("TicksSincePollination");
       this.stayOutOfHiveCountdown = p_70037_1_.getInt("CannotEnterHiveTicks");
       this.numCropsGrownSincePollination = p_70037_1_.getInt("CropsGrownSincePollination");
-      this.readPersistentAngerSaveData((ServerWorld)this.level, p_70037_1_);
+      if(!level.isClientSide) //FORGE: allow this entity to be read from nbt on client. (Fixes MC-189565)
+         this.readPersistentAngerSaveData((ServerWorld)this.level, p_70037_1_);
    }
 
    public boolean doHurtTarget(Entity p_70652_1_) {
@@ -201,7 +_,7 @@
             }
 
             if (i > 0) {
-               ((LivingEntity)p_70652_1_).addEffect(new EffectInstance(Effects.POISON, i * 20, 0));
+               ((LivingEntity)p_70652_1_).addEffect(new EffectInstance(Effects.POISON, i * 20, 0), Cause.ATTACK); // CraftBukkit
             }
          }
 
@@ -425,7 +_,7 @@
          return false;
       } else {
          TileEntity tileentity = this.level.getBlockEntity(this.hivePos);
-         return tileentity != null && tileentity.getType() == TileEntityType.BEEHIVE;
+         return tileentity instanceof BeehiveTileEntity;
       }
    }
 
@@ -433,7 +_,7 @@
       return this.getFlag(8);
    }
 
-   private void setHasNectar(boolean p_226447_1_) {
+   public void setHasNectar(boolean p_226447_1_) {
       if (p_226447_1_) {
          this.resetTicksWithoutNectarSinceExitingHive();
       }
@@ -445,7 +_,7 @@
       return this.getFlag(4);
    }
 
-   private void setHasStung(boolean p_226449_1_) {
+   public void setHasStung(boolean p_226449_1_) {
       this.setFlag(4, p_226449_1_);
    }
 
@@ -588,7 +_,7 @@
 
       protected void alertOther(MobEntity p_220793_1_, LivingEntity p_220793_2_) {
          if (p_220793_1_ instanceof BeeEntity && this.mob.canSee(p_220793_2_)) {
-            p_220793_1_.setTarget(p_220793_2_);
+            p_220793_1_.setGoalTarget(p_220793_2_, TargetReason.TARGET_ATTACKED_ENTITY, true); // CraftBukkit - reason
          }
 
       }
@@ -636,6 +_,9 @@
    }
 
    class EnterBeehiveGoal extends BeeEntity.PassiveGoal {
+
+      private BeeEntity beeEntity = BeeEntity.this;
+
       private EnterBeehiveGoal() {
       }
 
@@ -670,6 +_,9 @@
    }
 
    public class FindBeehiveGoal extends BeeEntity.PassiveGoal {
+
+      private BeeEntity beeEntity = BeeEntity.this;
+
       private int travellingTicks = BeeEntity.this.level.random.nextInt(10);
       private List<BlockPos> blacklistedTargets = Lists.newArrayList();
       @Nullable
@@ -871,7 +_,7 @@
                      }
                   }
 
-                  if (flag) {
+                  if (flag && !CraftEventFactory.callEntityChangeBlockEvent(BeeEntity.this, blockpos, blockstate.setValue(integerproperty, (Integer) blockstate.getValue(integerproperty) + 1)).isCancelled()) { // Spigot
                      BeeEntity.this.level.levelEvent(2005, blockpos, 0);
                      BeeEntity.this.level.setBlockAndUpdate(blockpos, blockstate.setValue(integerproperty, Integer.valueOf(blockstate.getValue(integerproperty) + 1)));
                      BeeEntity.this.incrementNumCropsGrownSincePollination();
@@ -1084,6 +_,9 @@
    }
 
    class UpdateBeehiveGoal extends BeeEntity.PassiveGoal {
+
+      private BeeEntity beeEntity = BeeEntity.this;
+
       private UpdateBeehiveGoal() {
       }
 
