--- a/net/minecraft/entity/passive/horse/AbstractHorseEntity.java
+++ b/net/minecraft/entity/passive/horse/AbstractHorseEntity.java
@@ -68,6 +_,9 @@
 import net.minecraft.world.server.ServerWorld;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.entity.AbstractHorse;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
 public abstract class AbstractHorseEntity extends AnimalEntity implements IInventoryChangedListener, IJumpingMount, IEquipable {
    private static final Predicate<LivingEntity> PARENT_HORSE_SELECTOR = (p_213617_0_) -> {
@@ -83,7 +_,7 @@
    public int tailCounter;
    public int sprintCounter;
    protected boolean isJumping;
-   protected Inventory inventory;
+   public Inventory inventory;
    protected int temper;
    protected float playerJumpPendingScale;
    private boolean allowStandSliding;
@@ -95,6 +_,7 @@
    private float mouthAnimO;
    protected boolean canGallop = true;
    protected int gallopSoundCounter;
+   public int maxDomestication = 100; // CraftBukkit - store max domestication value
 
    protected AbstractHorseEntity(EntityType<? extends AbstractHorseEntity> p_i48563_1_, World p_i48563_2_) {
       super(p_i48563_1_, p_i48563_2_);
@@ -259,9 +_,9 @@
       return 2;
    }
 
-   protected void createInventory() {
+   public void createInventory() {
       Inventory inventory = this.inventory;
-      this.inventory = new Inventory(this.getInventorySize());
+      this.inventory = new Inventory(this.getInventorySize(), (AbstractHorse) this.getBukkitEntity()); // CraftBukkit
       if (inventory != null) {
          inventory.removeListener(this);
          int i = Math.min(inventory.getContainerSize(), this.inventory.getContainerSize());
@@ -276,6 +_,7 @@
 
       this.inventory.addListener(this);
       this.updateContainerEquipment();
+      this.itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this.inventory));
    }
 
    protected void updateContainerEquipment() {
@@ -334,9 +_,9 @@
    protected void playStepSound(BlockPos p_180429_1_, BlockState p_180429_2_) {
       if (!p_180429_2_.getMaterial().isLiquid()) {
          BlockState blockstate = this.level.getBlockState(p_180429_1_.above());
-         SoundType soundtype = p_180429_2_.getSoundType();
+         SoundType soundtype = p_180429_2_.getSoundType(level, p_180429_1_, this);
          if (blockstate.is(Blocks.SNOW)) {
-            soundtype = blockstate.getSoundType();
+            soundtype = blockstate.getSoundType(level, p_180429_1_, this);
          }
 
          if (this.isVehicle() && this.canGallop) {
@@ -368,7 +_,7 @@
    }
 
    public int getMaxTemper() {
-      return 100;
+      return this.maxDomestication; // CraftBukkit - return stored max domestication instead of 100
    }
 
    protected float getSoundVolume() {
@@ -510,7 +_,7 @@
       super.aiStep();
       if (!this.level.isClientSide && this.isAlive()) {
          if (this.random.nextInt(900) == 0 && this.deathTime == 0) {
-            this.heal(1.0F);
+            this.heal(1.0F, RegainReason.REGEN); // CraftBukkit
          }
 
          if (this.canEatGrass()) {
@@ -694,6 +_,7 @@
                this.setDeltaMovement(vector3d.x, d1, vector3d.z);
                this.setIsJumping(true);
                this.hasImpulse = true;
+               net.minecraftforge.common.ForgeHooks.onLivingJump(this);
                if (f1 > 0.0F) {
                   float f2 = MathHelper.sin(this.yRot * ((float)Math.PI / 180F));
                   float f3 = MathHelper.cos(this.yRot * ((float)Math.PI / 180F));
@@ -737,6 +_,7 @@
       if (this.getOwnerUUID() != null) {
          p_213281_1_.putUUID("Owner", this.getOwnerUUID());
       }
+      p_213281_1_.putInt("Bukkit.MaxDomestication", this.maxDomestication); // CraftBukkit
 
       if (!this.inventory.getItem(0).isEmpty()) {
          p_213281_1_.put("SaddleItem", this.inventory.getItem(0).save(new CompoundNBT()));
@@ -762,6 +_,12 @@
          this.setOwnerUUID(uuid);
       }
 
+      // CraftBukkit start
+      if (p_70037_1_.contains("Bukkit.MaxDomestication")) {
+         this.maxDomestication = p_70037_1_.getInt("Bukkit.MaxDomestication");
+      }
+      // CraftBukkit end
+
       if (p_70037_1_.contains("SaddleItem", 10)) {
          ItemStack itemstack = ItemStack.of(p_70037_1_.getCompound("SaddleItem"));
          if (itemstack.getItem() == Items.SADDLE) {
@@ -837,6 +_,18 @@
    }
 
    public void handleStartJump(int p_184775_1_) {
+      // CraftBukkit start
+      float power;
+      if (p_184775_1_ >= 90) {
+         power = 1.0F;
+      } else {
+         power = 0.4F + 0.4F * (float) p_184775_1_ / 90.0F;
+      }
+      org.bukkit.event.entity.HorseJumpEvent event = CraftEventFactory.callHorseJumpEvent(this, power);
+      if (event.isCancelled()) {
+         return;
+      }
+      // CraftBukkit end
       this.allowStandSliding = true;
       this.stand();
       this.playJumpSound();
@@ -1009,5 +_,24 @@
 
       this.randomizeAttributes();
       return super.finalizeSpawn(p_213386_1_, p_213386_2_, p_213386_3_, p_213386_4_, p_213386_5_);
+   }
+
+   private net.minecraftforge.common.util.LazyOptional<?> itemHandler = null;
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.Direction facing) {
+      if (this.isAlive() && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY && itemHandler != null)
+         return itemHandler.cast();
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   protected void invalidateCaps() {
+      super.invalidateCaps();
+      if (itemHandler != null) {
+         net.minecraftforge.common.util.LazyOptional<?> oldHandler = itemHandler;
+         itemHandler = null;
+         oldHandler.invalidate();
+      }
    }
 }
