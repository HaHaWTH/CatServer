--- a/net/minecraft/entity/projectile/WitherSkullEntity.java
+++ b/net/minecraft/entity/projectile/WitherSkullEntity.java
@@ -4,7 +_,6 @@
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.LivingEntity;
-import net.minecraft.entity.boss.WitherEntity;
 import net.minecraft.fluid.FluidState;
 import net.minecraft.network.datasync.DataParameter;
 import net.minecraft.network.datasync.DataSerializers;
@@ -17,11 +_,13 @@
 import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.Explosion;
-import net.minecraft.world.GameRules;
 import net.minecraft.world.IBlockReader;
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.event.entity.EntityPotionEffectEvent.Cause;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
 
 public class WitherSkullEntity extends DamagingProjectileEntity {
    private static final DataParameter<Boolean> DATA_DANGEROUS = EntityDataManager.defineId(WitherSkullEntity.class, DataSerializers.BOOLEAN);
@@ -48,7 +_,7 @@
    }
 
    public float getBlockExplosionResistance(Explosion p_180428_1_, IBlockReader p_180428_2_, BlockPos p_180428_3_, BlockState p_180428_4_, FluidState p_180428_5_, float p_180428_6_) {
-      return this.isDangerous() && WitherEntity.canDestroy(p_180428_4_) ? Math.min(0.8F, p_180428_6_) : p_180428_6_;
+      return this.isDangerous() && p_180428_4_.canEntityDestroy(p_180428_2_, p_180428_3_, this) ? Math.min(0.8F, p_180428_6_) : p_180428_6_;
    }
 
    protected void onHitEntity(EntityRayTraceResult p_213868_1_) {
@@ -64,7 +_,7 @@
                if (entity.isAlive()) {
                   this.doEnchantDamageEffects(livingentity, entity);
                } else {
-                  livingentity.heal(5.0F);
+                  livingentity.heal(5.0F, RegainReason.WITHER); // CraftBukkit
                }
             }
          } else {
@@ -80,7 +_,7 @@
             }
 
             if (i > 0) {
-               ((LivingEntity)entity).addEffect(new EffectInstance(Effects.WITHER, 20 * i, 1));
+               ((LivingEntity)entity).addEffect(new EffectInstance(Effects.WITHER, 20 * i, 1), Cause.ATTACK); // CraftBukkit
             }
          }
 
@@ -90,8 +_,14 @@
    protected void onHit(RayTraceResult p_70227_1_) {
       super.onHit(p_70227_1_);
       if (!this.level.isClientSide) {
-         Explosion.Mode explosion$mode = this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING) ? Explosion.Mode.DESTROY : Explosion.Mode.NONE;
-         this.level.explode(this, this.getX(), this.getY(), this.getZ(), 1.0F, false, explosion$mode);
+         Explosion.Mode explosion$mode = net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level, this.getOwner()) ? Explosion.Mode.DESTROY : Explosion.Mode.NONE;
+         // CraftBukkit start
+         ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 1.0F, false);
+         this.level.getCBServer().getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            this.level.explode(this, this.getX(), this.getY(), this.getZ(), event.getRadius(), event.getFire(), explosion$mode);
+         }
+         // CraftBukkit end
          this.remove();
       }
 
