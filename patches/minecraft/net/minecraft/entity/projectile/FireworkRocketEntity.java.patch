--- a/net/minecraft/entity/projectile/FireworkRocketEntity.java
+++ b/net/minecraft/entity/projectile/FireworkRocketEntity.java
@@ -30,17 +_,18 @@
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
 
 @OnlyIn(
    value = Dist.CLIENT,
    _interface = IRendersAsItem.class
 )
 public class FireworkRocketEntity extends ProjectileEntity implements IRendersAsItem {
-   private static final DataParameter<ItemStack> DATA_ID_FIREWORKS_ITEM = EntityDataManager.defineId(FireworkRocketEntity.class, DataSerializers.ITEM_STACK);
+   public static final DataParameter<ItemStack> DATA_ID_FIREWORKS_ITEM = EntityDataManager.defineId(FireworkRocketEntity.class, DataSerializers.ITEM_STACK);
    private static final DataParameter<OptionalInt> DATA_ATTACHED_TO_TARGET = EntityDataManager.defineId(FireworkRocketEntity.class, DataSerializers.OPTIONAL_UNSIGNED_INT);
-   private static final DataParameter<Boolean> DATA_SHOT_AT_ANGLE = EntityDataManager.defineId(FireworkRocketEntity.class, DataSerializers.BOOLEAN);
+   public static final DataParameter<Boolean> DATA_SHOT_AT_ANGLE = EntityDataManager.defineId(FireworkRocketEntity.class, DataSerializers.BOOLEAN);
    private int life;
-   private int lifetime;
+   public int lifetime;
    private LivingEntity attachedToEntity;
 
    public FireworkRocketEntity(EntityType<? extends FireworkRocketEntity> p_i50164_1_, World p_i50164_2_) {
@@ -82,6 +_,21 @@
       this.setOwner(p_i231582_3_);
    }
 
+   // Spigot Start - copied from tick
+   @Override
+   public void inactiveTick() {
+      this.life += 1;
+      if (!this.level.isClientSide && this.life > this.lifetime) {
+         // CraftBukkit start
+         if (!org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
+            this.dealExplosionDamage();
+         }
+         // CraftBukkit end
+      }
+      super.inactiveTick();
+   }
+   // Spigot End
+
    protected void defineSynchedData() {
       this.entityData.define(DATA_ID_FIREWORKS_ITEM, ItemStack.EMPTY);
       this.entityData.define(DATA_ATTACHED_TO_TARGET, OptionalInt.empty());
@@ -136,7 +_,7 @@
 
       RayTraceResult raytraceresult = ProjectileHelper.getHitResult(this, this::canHitEntity);
       if (!this.noPhysics) {
-         this.onHit(raytraceresult);
+         this.preOnHit(raytraceresult);
          this.hasImpulse = true;
       }
 
@@ -151,9 +_,19 @@
       }
 
       if (!this.level.isClientSide && this.life > this.lifetime) {
-         this.explode();
+         // CraftBukkit start
+         if (!CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
+            this.explode();
+         }
       }
+         // CraftBukkit end
+   }
 
+   @Override
+   protected void onHit(RayTraceResult result) {
+      if (result.getType() == RayTraceResult.Type.MISS || !net.minecraftforge.event.ForgeEventFactory.onProjectileImpact(this, result)) {
+         super.onHit(result);
+      }
    }
 
    private void explode() {
@@ -165,7 +_,11 @@
    protected void onHitEntity(EntityRayTraceResult p_213868_1_) {
       super.onHitEntity(p_213868_1_);
       if (!this.level.isClientSide) {
-         this.explode();
+         // CraftBukkit start
+         if (!CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
+            this.explode();
+         }
+         // CraftBukkit end
       }
    }
 
@@ -173,7 +_,11 @@
       BlockPos blockpos = new BlockPos(p_230299_1_.getBlockPos());
       this.level.getBlockState(blockpos).entityInside(this.level, blockpos, this);
       if (!this.level.isClientSide() && this.hasExplosion()) {
-         this.explode();
+         // CraftBukkit start
+         if (!CraftEventFactory.callFireworkExplodeEvent(this).isCancelled()) {
+            this.explode();
+         }
+         // CraftBukkit end
       }
 
       super.onHitBlock(p_230299_1_);
@@ -197,7 +_,9 @@
 
       if (f > 0.0F) {
          if (this.attachedToEntity != null) {
+            CraftEventFactory.entityDamage = this; // CraftBukkit
             this.attachedToEntity.hurt(DamageSource.fireworks(this, this.getOwner()), 5.0F + (float)(listnbt.size() * 2));
+            CraftEventFactory.entityDamage = null; // CraftBukkit
          }
 
          double d0 = 5.0D;
@@ -218,7 +_,9 @@
 
                if (flag) {
                   float f1 = f * (float)Math.sqrt((5.0D - (double)this.distanceTo(livingentity)) / 5.0D);
+                  CraftEventFactory.entityDamage = this; // CraftBukkit
                   livingentity.hurt(DamageSource.fireworks(this, this.getOwner()), f1);
+                  CraftEventFactory.entityDamage = null; // CraftBukkit
                }
             }
          }
