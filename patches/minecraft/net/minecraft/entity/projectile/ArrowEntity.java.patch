--- a/net/minecraft/entity/projectile/ArrowEntity.java
+++ b/net/minecraft/entity/projectile/ArrowEntity.java
@@ -17,17 +_,31 @@
 import net.minecraft.potion.Potion;
 import net.minecraft.potion.PotionUtils;
 import net.minecraft.potion.Potions;
+import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.registry.Registry;
 import net.minecraft.world.World;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.event.entity.EntityPotionEffectEvent.Cause;
 
 public class ArrowEntity extends AbstractArrowEntity {
    private static final DataParameter<Integer> ID_EFFECT_COLOR = EntityDataManager.defineId(ArrowEntity.class, DataSerializers.INT);
    private Potion potion = Potions.EMPTY;
-   private final Set<EffectInstance> effects = Sets.newHashSet();
+   public final Set<EffectInstance> effects = Sets.newHashSet();
    private boolean fixedColor;
 
+   // Spigot Start
+   @Override
+   public void inactiveTick()
+   {
+      if ( this.inGround )
+      {
+         this.life += 1;
+      }
+      super.inactiveTick();
+   }
+   // Spigot End
+
    public ArrowEntity(EntityType<? extends ArrowEntity> p_i50172_1_, World p_i50172_2_) {
       super(p_i50172_1_, p_i50172_2_);
    }
@@ -122,11 +_,30 @@
       }
    }
 
+   // CraftBukkit start
+   public void refreshEffects() {
+      this.getEntityData().set(ArrowEntity.ID_EFFECT_COLOR, PotionUtils.getColor(PotionUtils.getAllEffects(this.potion, this.effects)));
+   }
+
+   public String getTypeCB() {
+      return Registry.POTION.getKey(this.potion).toString();
+   }
+
+   public void setType(final String string) {
+      this.potion = Registry.POTION.get(new ResourceLocation(string));
+      this.getEntityData().set(ArrowEntity.ID_EFFECT_COLOR, PotionUtils.getColor(PotionUtils.getAllEffects(this.potion, this.effects)));
+   }
+
+   public boolean isTipped() {
+      return !this.effects.isEmpty() || this.potion != Potions.EMPTY;
+   }
+   // CraftBukkit end
+
    public int getColor() {
       return this.entityData.get(ID_EFFECT_COLOR);
    }
 
-   private void setFixedColor(int p_191507_1_) {
+   public void setFixedColor(int p_191507_1_) {
       this.fixedColor = true;
       this.entityData.set(ID_EFFECT_COLOR, p_191507_1_);
    }
@@ -175,12 +_,12 @@
       super.doPostHurtEffects(p_184548_1_);
 
       for(EffectInstance effectinstance : this.potion.getEffects()) {
-         p_184548_1_.addEffect(new EffectInstance(effectinstance.getEffect(), Math.max(effectinstance.getDuration() / 8, 1), effectinstance.getAmplifier(), effectinstance.isAmbient(), effectinstance.isVisible()));
+         p_184548_1_.addEffect(new EffectInstance(effectinstance.getEffect(), Math.max(effectinstance.getDuration() / 8, 1), effectinstance.getAmplifier(), effectinstance.isAmbient(), effectinstance.isVisible()), Cause.ARROW); // CraftBukkit
       }
 
       if (!this.effects.isEmpty()) {
          for(EffectInstance effectinstance1 : this.effects) {
-            p_184548_1_.addEffect(effectinstance1);
+            p_184548_1_.addEffect(effectinstance1, Cause.ARROW); // CraftBukkit
          }
       }
 
