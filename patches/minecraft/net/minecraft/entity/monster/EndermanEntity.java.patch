--- a/net/minecraft/entity/monster/EndermanEntity.java
+++ b/net/minecraft/entity/monster/EndermanEntity.java
@@ -53,9 +_,10 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.RayTraceContext;
 import net.minecraft.util.math.vector.Vector3d;
-import net.minecraft.world.GameRules;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class EndermanEntity extends MonsterEntity implements IAngerable {
    private static final UUID SPEED_MODIFIER_ATTACKING_UUID = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
@@ -97,10 +_,13 @@
       return MonsterEntity.createMonsterAttributes().add(Attributes.MAX_HEALTH, 40.0D).add(Attributes.MOVEMENT_SPEED, (double)0.3F).add(Attributes.ATTACK_DAMAGE, 7.0D).add(Attributes.FOLLOW_RANGE, 64.0D);
    }
 
-   public void setTarget(@Nullable LivingEntity p_70624_1_) {
-      super.setTarget(p_70624_1_);
+   //Craftbukkit start
+   public boolean setGoalTarget(@Nullable LivingEntity entitylivingbaseIn, TargetReason reason, boolean fireEvent) {
+      if(!super.setGoalTarget(entitylivingbaseIn, reason, fireEvent)){
+         return false;
+      }
       ModifiableAttributeInstance modifiableattributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
-      if (p_70624_1_ == null) {
+      if (entitylivingbaseIn == null) {
          this.targetChangeTime = 0;
          this.entityData.set(DATA_CREEPY, false);
          this.entityData.set(DATA_STARED_AT, false);
@@ -113,7 +_,9 @@
          }
       }
 
+      return true; // CraftBukkit
    }
+   // CraftBukkit end
 
    protected void defineSynchedData() {
       super.defineSynchedData();
@@ -181,12 +_,13 @@
       }
 
       this.setCarriedBlock(blockstate);
-      this.readPersistentAngerSaveData((ServerWorld)this.level, p_70037_1_);
+      if(!level.isClientSide) //FORGE: allow this entity to be read from nbt on client. (Fixes MC-189565)
+         this.readPersistentAngerSaveData((ServerWorld)this.level, p_70037_1_);
    }
 
    private boolean isLookingAtMe(PlayerEntity p_70821_1_) {
       ItemStack itemstack = p_70821_1_.inventory.armor.get(3);
-      if (itemstack.getItem() == Blocks.CARVED_PUMPKIN.asItem()) {
+      if (itemstack.isEnderMask(p_70821_1_, this)) {
          return false;
       } else {
          Vector3d vector3d = p_70821_1_.getViewVector(1.0F).normalize();
@@ -265,7 +_,9 @@
       boolean flag = blockstate.getMaterial().blocksMotion();
       boolean flag1 = blockstate.getFluidState().is(FluidTags.WATER);
       if (flag && !flag1) {
-         boolean flag2 = this.randomTeleport(p_70825_1_, p_70825_3_, p_70825_5_, true);
+         net.minecraftforge.event.entity.living.EntityTeleportEvent.EnderEntity event = net.minecraftforge.event.ForgeEventFactory.onEnderTeleport(this, p_70825_1_, p_70825_3_, p_70825_5_);
+         if (event.isCanceled()) return false;
+         boolean flag2 = this.randomTeleport(event.getTargetX(), event.getTargetY(), event.getTargetZ(), true);
          if (flag2 && !this.isSilent()) {
             this.level.playSound((PlayerEntity)null, this.xo, this.yo, this.zo, SoundEvents.ENDERMAN_TELEPORT, this.getSoundSource(), 1.0F, 1.0F);
             this.playSound(SoundEvents.ENDERMAN_TELEPORT, 1.0F, 1.0F);
@@ -429,7 +_,7 @@
       public boolean canUse() {
          if (this.enderman.getCarriedBlock() == null) {
             return false;
-         } else if (!this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+         } else if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.enderman.level, this.enderman)) {
             return false;
          } else {
             return this.enderman.getRandom().nextInt(2000) == 0;
@@ -449,16 +_,19 @@
          BlockState blockstate2 = this.enderman.getCarriedBlock();
          if (blockstate2 != null) {
             blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level, blockpos);
-            if (this.canPlaceBlock(world, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
-               world.setBlock(blockpos, blockstate2, 3);
-               this.enderman.setCarriedBlock((BlockState)null);
+            if (this.canPlaceBlock(world, blockpos, blockstate2, blockstate, blockstate1, blockpos1) && !net.minecraftforge.event.ForgeEventFactory.onBlockPlace(enderman, net.minecraftforge.common.util.BlockSnapshot.create(world.dimension(), world, blockpos1), net.minecraft.util.Direction.UP)) {
+               // CraftBukkit start - Place event
+               if (!CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockpos, blockstate2).isCancelled()) {
+                  world.setBlock(blockpos, blockstate2, 3);
+                  this.enderman.setCarriedBlock((BlockState) null);
+               }
+               // CraftBukkit end
             }
-
          }
       }
 
       private boolean canPlaceBlock(World p_220836_1_, BlockPos p_220836_2_, BlockState p_220836_3_, BlockState p_220836_4_, BlockState p_220836_5_, BlockPos p_220836_6_) {
-         return p_220836_4_.isAir() && !p_220836_5_.isAir() && !p_220836_5_.is(Blocks.BEDROCK) && p_220836_5_.isCollisionShapeFullBlock(p_220836_1_, p_220836_6_) && p_220836_3_.canSurvive(p_220836_1_, p_220836_2_) && p_220836_1_.getEntities(this.enderman, AxisAlignedBB.unitCubeFromLowerCorner(Vector3d.atLowerCornerOf(p_220836_2_))).isEmpty();
+         return p_220836_4_.isAir(p_220836_1_, p_220836_2_) && !p_220836_5_.isAir(p_220836_1_, p_220836_6_) && !p_220836_5_.is(Blocks.BEDROCK) && !p_220836_5_.is(net.minecraftforge.common.Tags.Blocks.ENDERMAN_PLACE_ON_BLACKLIST) && p_220836_5_.isCollisionShapeFullBlock(p_220836_1_, p_220836_6_) && p_220836_3_.canSurvive(p_220836_1_, p_220836_2_) && p_220836_1_.getEntities(this.enderman, AxisAlignedBB.unitCubeFromLowerCorner(Vector3d.atLowerCornerOf(p_220836_2_))).isEmpty();
       }
    }
 
@@ -500,7 +_,7 @@
       public boolean canUse() {
          if (this.enderman.getCarriedBlock() != null) {
             return false;
-         } else if (!this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+         } else if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.enderman.level, this.enderman)) {
             return false;
          } else {
             return this.enderman.getRandom().nextInt(20) == 0;
@@ -521,10 +_,13 @@
          BlockRayTraceResult blockraytraceresult = world.clip(new RayTraceContext(vector3d, vector3d1, RayTraceContext.BlockMode.OUTLINE, RayTraceContext.FluidMode.NONE, this.enderman));
          boolean flag = blockraytraceresult.getBlockPos().equals(blockpos);
          if (block.is(BlockTags.ENDERMAN_HOLDABLE) && flag) {
-            world.removeBlock(blockpos, false);
-            this.enderman.setCarriedBlock(blockstate.getBlock().defaultBlockState());
+            // CraftBukkit start - Pickup event
+            if (!CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockpos, Blocks.AIR.defaultBlockState()).isCancelled()) {
+               world.removeBlock(blockpos, false);
+               this.enderman.setCarriedBlock(blockstate.getBlock().defaultBlockState());
+            }
+            // CraftBukkit end
          }
-
       }
    }
 }
