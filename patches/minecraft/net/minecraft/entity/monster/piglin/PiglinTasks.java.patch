--- a/net/minecraft/entity/monster/piglin/PiglinTasks.java
+++ b/net/minecraft/entity/monster/piglin/PiglinTasks.java
@@ -8,6 +_,8 @@
 import java.util.Optional;
 import java.util.Random;
 import java.util.Set;
+import java.util.stream.Collectors;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.LivingEntity;
@@ -47,8 +_,7 @@
 import net.minecraft.entity.item.ItemEntity;
 import net.minecraft.entity.monster.HoglinEntity;
 import net.minecraft.entity.player.PlayerEntity;
-import net.minecraft.item.ArmorItem;
-import net.minecraft.item.ArmorMaterial;
+import net.minecraft.item.CrossbowItem;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.Items;
@@ -69,6 +_,9 @@
 import net.minecraft.util.math.vector.Vector3d;
 import net.minecraft.world.GameRules;
 import net.minecraft.world.server.ServerWorld;
+import org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory;
+import org.bukkit.craftbukkit.v1_16_R3.inventory.CraftItemStack;
+import org.bukkit.event.entity.PiglinBarterEvent;
 
 public class PiglinTasks {
    public static final Item BARTERING_ITEM = Items.GOLD_INGOT;
@@ -184,24 +_,28 @@
    protected static void pickUpItem(PiglinEntity p_234470_0_, ItemEntity p_234470_1_) {
       stopWalking(p_234470_0_);
       ItemStack itemstack;
-      if (p_234470_1_.getItem().getItem() == Items.GOLD_NUGGET) {
+      // CraftBukkit start
+      if (p_234470_1_.getItem().getItem() == Items.GOLD_NUGGET && !org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callEntityPickupItemEvent(p_234470_0_, p_234470_1_, 0, false).isCancelled()) {
          p_234470_0_.take(p_234470_1_, p_234470_1_.getItem().getCount());
          itemstack = p_234470_1_.getItem();
          p_234470_1_.remove();
-      } else {
+      } else if (!org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callEntityPickupItemEvent(p_234470_0_, p_234470_1_, p_234470_1_.getItem().getCount() - 1, false).isCancelled()) {
          p_234470_0_.take(p_234470_1_, 1);
          itemstack = removeOneItemFromItemEntity(p_234470_1_);
+      } else {
+         return;
       }
+      // CraftBukkit end
 
       Item item = itemstack.getItem();
-      if (isLovedItem(item)) {
+      if (isLovedByPiglin(item, p_234470_0_)) {
          p_234470_0_.getBrain().eraseMemory(MemoryModuleType.TIME_TRYING_TO_REACH_ADMIRE_ITEM);
          holdInOffhand(p_234470_0_, itemstack);
          admireGoldItem(p_234470_0_);
       } else if (isFood(item) && !hasEatenRecently(p_234470_0_)) {
          eat(p_234470_0_);
       } else {
-         boolean flag = p_234470_0_.equipItemIfPossible(itemstack);
+         boolean flag = p_234470_0_.equipItemIfPossible(itemstack, p_234470_1_); // CraftBukkit
          if (!flag) {
             putInInventory(p_234470_0_, itemstack);
          }
@@ -232,9 +_,15 @@
       ItemStack itemstack = p_234477_0_.getItemInHand(Hand.OFF_HAND);
       p_234477_0_.setItemInHand(Hand.OFF_HAND, ItemStack.EMPTY);
       if (p_234477_0_.isAdult()) {
-         boolean flag = isBarterCurrency(itemstack.getItem());
+         boolean flag = isBarterItem(itemstack.getItem(), p_234477_0_); // CraftBukkit - Changes to allow custom payment for bartering
          if (p_234477_1_ && flag) {
-            throwItems(p_234477_0_, getBarterResponseItems(p_234477_0_));
+            // throwItems(p_234477_0_, getBarterResponseItems(p_234477_0_));
+            // CraftBukkit start
+            PiglinBarterEvent event = CraftEventFactory.callPiglinBarterEvent(p_234477_0_, getBarterResponseItems(p_234477_0_), itemstack);
+            if (!event.isCancelled()) {
+               throwItems(p_234477_0_, event.getOutcome().stream().map(CraftItemStack::asNMSCopy).collect(Collectors.toList()));
+            }
+            // CraftBukkit end
          } else if (!flag) {
             boolean flag1 = p_234477_0_.equipItemIfPossible(itemstack);
             if (!flag1) {
@@ -245,7 +_,7 @@
          boolean flag2 = p_234477_0_.equipItemIfPossible(itemstack);
          if (!flag2) {
             ItemStack itemstack1 = p_234477_0_.getMainHandItem();
-            if (isLovedItem(itemstack1.getItem())) {
+            if (isLovedByPiglin(itemstack1.getItem(), p_234477_0_)) { // CraftBukkit - Changes to allow for custom payment in bartering
                putInInventory(p_234477_0_, itemstack1);
             } else {
                throwItems(p_234477_0_, Collections.singletonList(itemstack1));
@@ -318,7 +_,7 @@
          return false;
       } else if (isAdmiringDisabled(p_234474_0_) && p_234474_0_.getBrain().hasMemoryValue(MemoryModuleType.ATTACK_TARGET)) {
          return false;
-      } else if (isBarterCurrency(item)) {
+      } else if (p_234474_1_.isPiglinCurrency()) {
          return isNotHoldingLovedItemInOffHand(p_234474_0_);
       } else {
          boolean flag = p_234474_0_.canAddToInventory(p_234474_1_);
@@ -326,7 +_,7 @@
             return flag;
          } else if (isFood(item)) {
             return !hasEatenRecently(p_234474_0_) && flag;
-         } else if (!isLovedItem(item)) {
+         } else if (!isLovedByPiglin(item, p_234474_0_)) {
             return p_234474_0_.canReplaceCurrentItem(p_234474_1_);
          } else {
             return isNotHoldingLovedItemInOffHand(p_234474_0_) && flag;
@@ -334,6 +_,12 @@
       }
    }
 
+   // CraftBukkit start - Added method to allow checking for custom payment items
+   protected static boolean isLovedByPiglin(Item item, PiglinEntity piglin) {
+      return isLovedItem(item) || (piglin.interestItems.contains(item) || piglin.allowedBarterItems.contains(item));
+   }
+   // CraftBukkit end
+
    protected static boolean isLovedItem(Item p_234480_0_) {
       return p_234480_0_.is(ItemTags.PIGLIN_LOVED);
    }
@@ -418,7 +_,7 @@
    }
 
    protected static boolean canAdmire(PiglinEntity p_234489_0_, ItemStack p_234489_1_) {
-      return !isAdmiringDisabled(p_234489_0_) && !isAdmiringItem(p_234489_0_) && p_234489_0_.isAdult() && isBarterCurrency(p_234489_1_.getItem());
+      return !isAdmiringDisabled(p_234489_0_) && !isAdmiringItem(p_234489_0_) && p_234489_0_.isAdult() && p_234489_1_.isPiglinCurrency();
    }
 
    protected static void wasHurtBy(PiglinEntity p_234468_0_, LivingEntity p_234468_1_) {
@@ -519,7 +_,7 @@
    public static boolean isWearingGold(LivingEntity p_234460_0_) {
       for(ItemStack itemstack : p_234460_0_.getArmorSlots()) {
          Item item = itemstack.getItem();
-         if (item instanceof ArmorItem && ((ArmorItem)item).getMaterial() == ArmorMaterial.GOLD) {
+         if (itemstack.makesPiglinsNeutral(p_234460_0_)) {
             return true;
          }
       }
@@ -673,7 +_,7 @@
    }
 
    private static boolean hasCrossbow(LivingEntity p_234494_0_) {
-      return p_234494_0_.isHolding(Items.CROSSBOW);
+      return p_234494_0_.isHolding(item -> item instanceof CrossbowItem);
    }
 
    private static void admireGoldItem(LivingEntity p_234501_0_) {
@@ -725,10 +_,16 @@
    }
 
    private static boolean isNotHoldingLovedItemInOffHand(PiglinEntity p_234455_0_) {
-      return p_234455_0_.getOffhandItem().isEmpty() || !isLovedItem(p_234455_0_.getOffhandItem().getItem());
+      return p_234455_0_.getOffhandItem().isEmpty() || !isLovedByPiglin(p_234455_0_.getOffhandItem().getItem(), p_234455_0_); // CraftBukkit - Changes to allow custom payment for bartering
    }
 
    public static boolean isZombified(EntityType p_234459_0_) {
       return p_234459_0_ == EntityType.ZOMBIFIED_PIGLIN || p_234459_0_ == EntityType.ZOGLIN;
    }
+
+   // CraftBukkit start - Changes to allow custom payment for bartering
+   private static boolean isBarterItem(Item item, PiglinEntity piglin) {
+      return isBarterCurrency(item) || piglin.allowedBarterItems.contains(item);
+   }
+   // CraftBukkit end
 }
