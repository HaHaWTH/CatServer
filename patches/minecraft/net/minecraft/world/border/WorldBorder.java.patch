--- a/net/minecraft/world/border/WorldBorder.java
+++ b/net/minecraft/world/border/WorldBorder.java
@@ -3,6 +_,10 @@
 import com.google.common.collect.Lists;
 import com.mojang.serialization.DynamicLike;
 import java.util.List;
+
+import io.papermc.paper.event.world.border.WorldBorderBoundsChangeEvent;
+import io.papermc.paper.event.world.border.WorldBorderBoundsChangeFinishEvent;
+import io.papermc.paper.event.world.border.WorldBorderCenterChangeEvent;
 import net.minecraft.entity.Entity;
 import net.minecraft.nbt.CompoundNBT;
 import net.minecraft.util.Util;
@@ -13,8 +_,10 @@
 import net.minecraft.util.math.shapes.IBooleanFunction;
 import net.minecraft.util.math.shapes.VoxelShape;
 import net.minecraft.util.math.shapes.VoxelShapes;
+import net.minecraft.world.server.ServerWorld;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
+import org.bukkit.Bukkit;
 
 public class WorldBorder {
    private final List<IBorderListener> listeners = Lists.newArrayList();
@@ -27,6 +_,7 @@
    private int absoluteMaxSize = 29999984;
    private WorldBorder.IBorderInfo extent = new WorldBorder.StationaryBorderInfo(6.0E7D);
    public static final WorldBorder.Serializer DEFAULT_SETTINGS = new WorldBorder.Serializer(0.0D, 0.0D, 0.2D, 5.0D, 5, 15, 6.0E7D, 0L, 0.0D);
+   public ServerWorld world; // CraftBukkit
 
    public boolean isWithinBounds(BlockPos p_177746_1_) {
       return (double)(p_177746_1_.getX() + 1) > this.getMinX() && (double)p_177746_1_.getX() < this.getMaxX() && (double)(p_177746_1_.getZ() + 1) > this.getMinZ() && (double)p_177746_1_.getZ() < this.getMaxZ();
@@ -88,12 +_,31 @@
    }
 
    public void setCenter(double p_177739_1_, double p_177739_3_) {
-      this.centerX = p_177739_1_;
-      this.centerZ = p_177739_3_;
+      // Paper start
+      WorldBorderCenterChangeEvent event = new WorldBorderCenterChangeEvent(
+              world.getWorld(),
+              world.getWorld().getWorldBorder(),
+              new org.bukkit.Location(world.getWorld(),
+                      this.getCenterX(),
+                      0,
+                      this.getCenterZ()),
+              new org.bukkit.Location(world.getWorld(),
+                      p_177739_1_,
+                      0,
+                      p_177739_3_)
+      );
+      Bukkit.getServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      this.centerX = event.getNewCenter().getX();
+      this.centerZ = event.getNewCenter().getZ();
+      // Paper end
       this.extent.onCenterChange();
 
       for(IBorderListener iborderlistener : this.getListeners()) {
-         iborderlistener.onBorderCenterSet(this, p_177739_1_, p_177739_3_);
+         //iborderlistener.onBorderCenterSet(this, p_177739_1_, p_177739_3_);
+         iborderlistener.onBorderCenterSet(this, event.getNewCenter().getX(), event.getNewCenter().getZ()); // Paper
       }
 
    }
@@ -111,19 +_,59 @@
    }
 
    public void setSize(double p_177750_1_) {
-      this.extent = new WorldBorder.StationaryBorderInfo(p_177750_1_);
+      // Paper start
+      WorldBorderBoundsChangeEvent event = new WorldBorderBoundsChangeEvent(
+              world.getWorld(),
+              world.getWorld().getWorldBorder(),
+              WorldBorderBoundsChangeEvent.Type.INSTANT_MOVE,
+              getSize(),
+              p_177750_1_,
+              0
+      );
+      Bukkit.getServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      if (event.getType() == WorldBorderBoundsChangeEvent.Type.STARTED_MOVE && event.getDuration() > 0) { // If changed to a timed transition
+         lerpSizeBetween(event.getOldSize(), event.getNewSize(), event.getDuration());
+         return;
+      }
+      this.extent = new WorldBorder.StationaryBorderInfo(event.getNewSize());
+      // Paper end
 
       for(IBorderListener iborderlistener : this.getListeners()) {
-         iborderlistener.onBorderSizeSet(this, p_177750_1_);
+         //iborderlistener.onBorderSizeSet(this, p_177750_1_);
+         iborderlistener.onBorderSizeSet(this, event.getNewSize()); // Paper
       }
 
    }
 
    public void lerpSizeBetween(double p_177738_1_, double p_177738_3_, long p_177738_5_) {
-      this.extent = (WorldBorder.IBorderInfo)(p_177738_1_ == p_177738_3_ ? new WorldBorder.StationaryBorderInfo(p_177738_3_) : new WorldBorder.MovingBorderInfo(p_177738_1_, p_177738_3_, p_177738_5_));
+      // Paper start
+      WorldBorderBoundsChangeEvent.Type type;
+      if (p_177738_1_ == p_177738_3_) {
+         type = WorldBorderBoundsChangeEvent.Type.INSTANT_MOVE;
+      } else {
+         type = WorldBorderBoundsChangeEvent.Type.STARTED_MOVE;
+      }
+      WorldBorderBoundsChangeEvent event = new WorldBorderBoundsChangeEvent(
+              world.getWorld(),
+              world.getWorld().getWorldBorder(),
+              type,
+              p_177738_1_,
+              p_177738_3_,
+              p_177738_5_
+      );
+      Bukkit.getServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      this.extent = (WorldBorder.IBorderInfo)(p_177738_1_ == event.getNewSize() ? new WorldBorder.StationaryBorderInfo(event.getNewSize()) : new WorldBorder.MovingBorderInfo(p_177738_1_, event.getNewSize(), event.getDuration()));
+      // Paper end
 
       for(IBorderListener iborderlistener : this.getListeners()) {
-         iborderlistener.onBorderSizeLerping(this, p_177738_1_, p_177738_3_, p_177738_5_);
+         //iborderlistener.onBorderSizeLerping(this, p_177738_1_, p_177738_3_, p_177738_5_);
+         iborderlistener.onBorderSizeLerping(this, p_177738_1_, event.getNewSize(), event.getDuration()); // Paper
       }
 
    }
@@ -133,9 +_,14 @@
    }
 
    public void addListener(IBorderListener p_177737_1_) {
+      if (this.listeners.contains(p_177737_1_)) return; // CraftBukkit
       this.listeners.add(p_177737_1_);
    }
 
+   public void removeListener(IBorderListener listener) {
+      this.listeners.remove(listener);
+   }
+
    public void setAbsoluteMaxSize(int p_177725_1_) {
       this.absoluteMaxSize = p_177725_1_;
       this.extent.onAbsoluteMaxSizeChange();
@@ -315,6 +_,18 @@
       }
 
       public WorldBorder.IBorderInfo update() {
+         // Paper start
+         if (this.getLerpRemainingTime() <= 0L) {
+            WorldBorderBoundsChangeFinishEvent event = new WorldBorderBoundsChangeFinishEvent(
+                    world.getWorld(),
+                    world.getWorld().getWorldBorder(),
+                    this.lerpBegin,
+                    this.lerpEnd,
+                    this.lerpDuration
+            );
+            Bukkit.getServer().getPluginManager().callEvent(event);
+         }
+         // Paper end
          return (WorldBorder.IBorderInfo)(this.getLerpRemainingTime() <= 0L ? WorldBorder.this.new StationaryBorderInfo(this.to) : this);
       }
 
