--- a/net/minecraft/world/end/DragonFightManager.java
+++ b/net/minecraft/world/end/DragonFightManager.java
@@ -58,8 +_,8 @@
 public class DragonFightManager {
    private static final Logger LOGGER = LogManager.getLogger();
    private static final Predicate<Entity> VALID_PLAYER = EntityPredicates.ENTITY_STILL_ALIVE.and(EntityPredicates.withinDistance(0.0D, 128.0D, 0.0D, 192.0D));
-   private final ServerBossInfo dragonEvent = (ServerBossInfo)(new ServerBossInfo(new TranslationTextComponent("entity.minecraft.ender_dragon"), BossInfo.Color.PINK, BossInfo.Overlay.PROGRESS)).setPlayBossMusic(true).setCreateWorldFog(true);
-   private final ServerWorld level;
+   public final ServerBossInfo dragonEvent = (ServerBossInfo)(new ServerBossInfo(new TranslationTextComponent("entity.minecraft.ender_dragon"), BossInfo.Color.PINK, BossInfo.Overlay.PROGRESS)).setPlayBossMusic(true).setCreateWorldFog(true);
+   public final ServerWorld level;
    private final List<Integer> gateways = Lists.newArrayList();
    private final BlockPattern exitPortalPattern;
    private int ticksSinceDragonSeen;
@@ -68,10 +_,10 @@
    private int ticksSinceLastPlayerScan;
    private boolean dragonKilled;
    private boolean previouslyKilled;
-   private UUID dragonUUID;
+   public UUID dragonUUID;
    private boolean needsStateScanning = true;
-   private BlockPos portalLocation;
-   private DragonSpawnState respawnStage;
+   public BlockPos portalLocation;
+   public DragonSpawnState respawnStage;
    private int respawnTime;
    private List<EnderCrystalEntity> respawnCrystals;
 
@@ -84,6 +_,7 @@
 
          this.dragonKilled = p_i231901_4_.getBoolean("DragonKilled");
          this.previouslyKilled = p_i231901_4_.getBoolean("PreviouslyKilled");
+         this.needsStateScanning = !p_i231901_4_.getBoolean("LegacyScanPerformed"); // Forge: fix MC-105080
          if (p_i231901_4_.getBoolean("IsRespawning")) {
             this.respawnStage = DragonSpawnState.START;
          }
@@ -118,6 +_,7 @@
 
       compoundnbt.putBoolean("DragonKilled", this.dragonKilled);
       compoundnbt.putBoolean("PreviouslyKilled", this.previouslyKilled);
+      compoundnbt.putBoolean("LegacyScanPerformed", !this.needsStateScanning); // Forge: fix MC-105080
       if (this.portalLocation != null) {
          compoundnbt.put("ExitPortalLocation", NBTUtil.writeBlockPos(this.portalLocation));
       }
@@ -220,7 +_,7 @@
 
    }
 
-   protected void setRespawnStage(DragonSpawnState p_186095_1_) {
+   public void setRespawnStage(DragonSpawnState p_186095_1_) {
       if (this.respawnStage == null) {
          throw new IllegalStateException("Dragon respawn isn't in progress, can't skip ahead in the animation.");
       } else {
@@ -257,7 +_,7 @@
    }
 
    @Nullable
-   private BlockPattern.PatternHelper findExitPortal() {
+   public BlockPattern.PatternHelper findExitPortal() {
       for(int i = -8; i <= 8; ++i) {
          for(int j = -8; j <= 8; ++j) {
             Chunk chunk = this.level.getChunk(i, j);
@@ -370,7 +_,7 @@
       Features.END_GATEWAY_DELAYED.place(this.level, this.level.getChunkSource().getGenerator(), new Random(), p_186089_1_);
    }
 
-   private void spawnExitPortal(boolean p_186094_1_) {
+   public void spawnExitPortal(boolean p_186094_1_) {
       EndPodiumFeature endpodiumfeature = new EndPodiumFeature(p_186094_1_);
       if (this.portalLocation == null) {
          for(this.portalLocation = this.level.getHeightmapPos(Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, EndPodiumFeature.END_PODIUM_LOCATION).below(); this.level.getBlockState(this.portalLocation).is(Blocks.BEDROCK) && this.portalLocation.getY() > this.level.getSeaLevel(); this.portalLocation = this.portalLocation.below()) {
@@ -490,6 +_,13 @@
             endercrystalentity.setBeamTarget((BlockPos)null);
          }
       }
-
+   }
+
+   public void addPlayer(ServerPlayerEntity player) {
+      this.dragonEvent.addPlayer(player);
+   }
+
+   public void removePlayer(ServerPlayerEntity player) {
+      this.dragonEvent.removePlayer(player);
    }
 }
