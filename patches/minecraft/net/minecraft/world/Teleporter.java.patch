--- a/net/minecraft/world/Teleporter.java
+++ b/net/minecraft/world/Teleporter.java
@@ -5,6 +_,7 @@
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
 import net.minecraft.block.NetherPortalBlock;
+import net.minecraft.entity.Entity;
 import net.minecraft.state.properties.BlockStateProperties;
 import net.minecraft.util.Direction;
 import net.minecraft.util.TeleportationRepositioner;
@@ -19,7 +_,7 @@
 import net.minecraft.world.server.ServerWorld;
 import net.minecraft.world.server.TicketType;
 
-public class Teleporter {
+public class Teleporter implements net.minecraftforge.common.util.ITeleporter {
    protected final ServerWorld level;
 
    public Teleporter(ServerWorld p_i1963_1_) {
@@ -27,13 +_,19 @@
    }
 
    public Optional<TeleportationRepositioner.Result> findPortalAround(BlockPos p_242957_1_, boolean p_242957_2_) {
+      // CraftBukkit start
+      return findPortal(p_242957_1_, p_242957_2_ ? 16 : 128); // Search Radius
+   }
+
+   public Optional<TeleportationRepositioner.Result> findPortal(BlockPos pos, int i) {
       PointOfInterestManager pointofinterestmanager = this.level.getPoiManager();
-      int i = p_242957_2_ ? 16 : 128;
-      pointofinterestmanager.ensureLoadedAndValid(this.level, p_242957_1_, i);
+      // int i = isNether ? 16 : 128;
+      // CraftBukkit end
+      pointofinterestmanager.ensureLoadedAndValid(this.level, pos, i);
       Optional<PointOfInterest> optional = pointofinterestmanager.getInSquare((p_242952_0_) -> {
          return p_242952_0_ == PointOfInterestType.NETHER_PORTAL;
-      }, p_242957_1_, i, PointOfInterestManager.Status.ANY).sorted(Comparator.<PointOfInterest>comparingDouble((p_242954_1_) -> {
-         return p_242954_1_.getPos().distSqr(p_242957_1_);
+      }, pos, i, PointOfInterestManager.Status.ANY).sorted(Comparator.<PointOfInterest>comparingDouble((p_242954_1_) -> {
+         return p_242954_1_.getPos().distSqr(pos);
       }).thenComparingInt((p_242959_0_) -> {
          return p_242959_0_.getPos().getY();
       })).filter((p_242958_1_) -> {
@@ -50,16 +_,21 @@
    }
 
    public Optional<TeleportationRepositioner.Result> createPortal(BlockPos p_242956_1_, Direction.Axis p_242956_2_) {
-      Direction direction = Direction.get(Direction.AxisDirection.POSITIVE, p_242956_2_);
+      // CraftBukkit start
+      return this.createPortal(p_242956_1_, p_242956_2_, null, 16);
+   }
+   public Optional<TeleportationRepositioner.Result> createPortal(BlockPos pos, Direction.Axis axis, Entity entity, int createRadius) {
+      // CraftBukkit end
+      Direction direction = Direction.get(Direction.AxisDirection.POSITIVE, axis);
       double d0 = -1.0D;
       BlockPos blockpos = null;
       double d1 = -1.0D;
       BlockPos blockpos1 = null;
       WorldBorder worldborder = this.level.getWorldBorder();
       int i = this.level.getHeight() - 1;
-      BlockPos.Mutable blockpos$mutable = p_242956_1_.mutable();
+      BlockPos.Mutable blockpos$mutable = pos.mutable();
 
-      for(BlockPos.Mutable blockpos$mutable1 : BlockPos.spiralAround(p_242956_1_, 16, Direction.EAST, Direction.SOUTH)) {
+      for(BlockPos.Mutable blockpos$mutable1 : BlockPos.spiralAround(pos, createRadius, Direction.EAST, Direction.SOUTH)) { // CraftBukkit
          int j = Math.min(i, this.level.getHeight(Heightmap.Type.MOTION_BLOCKING, blockpos$mutable1.getX(), blockpos$mutable1.getZ()));
          int k = 1;
          if (worldborder.isWithinBounds(blockpos$mutable1) && worldborder.isWithinBounds(blockpos$mutable1.move(direction, 1))) {
@@ -77,7 +_,7 @@
                      if (j1 <= 0 || j1 >= 3) {
                         blockpos$mutable1.setY(l);
                         if (this.canHostFrame(blockpos$mutable1, blockpos$mutable, direction, 0)) {
-                           double d2 = p_242956_1_.distSqr(blockpos$mutable1);
+                           double d2 = pos.distSqr(blockpos$mutable1);
                            if (this.canHostFrame(blockpos$mutable1, blockpos$mutable, direction, -1) && this.canHostFrame(blockpos$mutable1, blockpos$mutable, direction, 1) && (d0 == -1.0D || d0 > d2)) {
                               d0 = d2;
                               blockpos = blockpos$mutable1.immutable();
@@ -100,8 +_,9 @@
          d0 = d1;
       }
 
+      org.bukkit.craftbukkit.v1_16_R3.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.v1_16_R3.util.BlockStateListPopulator(this.level); // CraftBukkit - Use BlockStateListPopulator
       if (d0 == -1.0D) {
-         blockpos = (new BlockPos(p_242956_1_.getX(), MathHelper.clamp(p_242956_1_.getY(), 70, this.level.getHeight() - 10), p_242956_1_.getZ())).immutable();
+         blockpos = (new BlockPos(pos.getX(), MathHelper.clamp(pos.getY(), 70, this.level.getHeight() - 10), pos.getZ())).immutable();
          Direction direction1 = direction.getClockWise();
          if (!worldborder.isWithinBounds(blockpos)) {
             return Optional.empty();
@@ -112,7 +_,7 @@
                for(int i3 = -1; i3 < 3; ++i3) {
                   BlockState blockstate1 = i3 < 0 ? Blocks.OBSIDIAN.defaultBlockState() : Blocks.AIR.defaultBlockState();
                   blockpos$mutable.setWithOffset(blockpos, k2 * direction.getStepX() + l1 * direction1.getStepX(), i3, k2 * direction.getStepZ() + l1 * direction1.getStepZ());
-                  this.level.setBlockAndUpdate(blockpos$mutable, blockstate1);
+                  blockList.setBlock(blockpos$mutable, blockstate1, 3); // CraftBukkit
                }
             }
          }
@@ -122,19 +_,29 @@
          for(int i2 = -1; i2 < 4; ++i2) {
             if (k1 == -1 || k1 == 2 || i2 == -1 || i2 == 3) {
                blockpos$mutable.setWithOffset(blockpos, k1 * direction.getStepX(), i2, k1 * direction.getStepZ());
-               this.level.setBlock(blockpos$mutable, Blocks.OBSIDIAN.defaultBlockState(), 3);
+               blockList.setBlock(blockpos$mutable, Blocks.OBSIDIAN.defaultBlockState(), 3); // CraftBukkit
             }
          }
       }
 
-      BlockState blockstate = Blocks.NETHER_PORTAL.defaultBlockState().setValue(NetherPortalBlock.AXIS, p_242956_2_);
+      BlockState blockstate = Blocks.NETHER_PORTAL.defaultBlockState().setValue(NetherPortalBlock.AXIS, axis);
 
       for(int j2 = 0; j2 < 2; ++j2) {
          for(int l2 = 0; l2 < 3; ++l2) {
             blockpos$mutable.setWithOffset(blockpos, j2 * direction.getStepX(), l2, j2 * direction.getStepZ());
-            this.level.setBlock(blockpos$mutable, blockstate, 18);
+            blockList.setBlock(blockpos$mutable, blockstate, 18); // CraftBukkit
          }
       }
+
+      // CraftBukkit start
+      org.bukkit.World bworld = this.level.getWorld();
+      org.bukkit.event.world.PortalCreateEvent event = new org.bukkit.event.world.PortalCreateEvent((java.util.List<org.bukkit.block.BlockState>) (java.util.List) blockList.getList(), bworld, (entity == null) ? null : entity.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.NETHER_PAIR);
+      this.level.getCBServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return Optional.empty();
+      }
+      blockList.updateList();
+      // CraftBukkit end
 
       return Optional.of(new TeleportationRepositioner.Result(blockpos.immutable(), 2, 3));
    }
