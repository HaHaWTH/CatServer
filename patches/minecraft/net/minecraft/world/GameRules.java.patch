--- a/net/minecraft/world/GameRules.java
+++ b/net/minecraft/world/GameRules.java
@@ -15,6 +_,8 @@
 import java.util.function.Function;
 import java.util.function.Supplier;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.event.world.WorldGameRuleChangeEvent;
 import net.minecraft.command.CommandSource;
 import net.minecraft.command.Commands;
 import net.minecraft.entity.player.ServerPlayerEntity;
@@ -26,6 +_,7 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
 
 public class GameRules {
    private static final Logger LOGGER = LogManager.getLogger();
@@ -78,6 +_,7 @@
    public static final GameRules.RuleKey<GameRules.BooleanValue> RULE_FORGIVE_DEAD_PLAYERS = register("forgiveDeadPlayers", GameRules.Category.MOBS, GameRules.BooleanValue.create(true));
    public static final GameRules.RuleKey<GameRules.BooleanValue> RULE_UNIVERSAL_ANGER = register("universalAnger", GameRules.Category.MOBS, GameRules.BooleanValue.create(false));
    private final Map<GameRules.RuleKey<?>, GameRules.RuleValue<?>> rules;
+   public static GameRules.RuleKey<?> ruleKey;
 
    public static <T extends GameRules.RuleValue<T>> GameRules.RuleKey<T> register(String p_234903_0_, GameRules.Category p_234903_1_, GameRules.RuleType<T> p_234903_2_) {
       GameRules.RuleKey<T> rulekey = new GameRules.RuleKey<>(p_234903_0_, p_234903_1_);
@@ -179,9 +_,20 @@
          this.value = p_i51535_2_;
       }
 
+      // Paper start
       protected void updateFromArgument(CommandContext<CommandSource> p_223555_1_, String p_223555_2_) {
-         this.value = BoolArgumentType.getBool(p_223555_1_, p_223555_2_);
+         if (ruleKey != null) {
+            WorldGameRuleChangeEvent event = new WorldGameRuleChangeEvent(p_223555_1_.getSource().getLevel().getWorld(), p_223555_1_.getSource().getBukkitSender(), org.bukkit.GameRule.getByName(ruleKey.toString()), String.valueOf(BoolArgumentType.getBool(p_223555_1_, p_223555_2_)));
+            Bukkit.getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+               return;
+            }
+            this.value = Boolean.parseBoolean(event.getValue());
+         } else {
+            this.value = BoolArgumentType.getBool(p_223555_1_, p_223555_2_);
+         }
       }
+      // Paper end
 
       public boolean get() {
          return this.value;
@@ -196,7 +_,7 @@
          return Boolean.toString(this.value);
       }
 
-      protected void deserialize(String p_223553_1_) {
+      public void deserialize(String p_223553_1_) {
          this.value = Boolean.parseBoolean(p_223553_1_);
       }
 
@@ -274,9 +_,20 @@
          this.value = p_i51534_2_;
       }
 
+      // Paper start
       protected void updateFromArgument(CommandContext<CommandSource> p_223555_1_, String p_223555_2_) {
-         this.value = IntegerArgumentType.getInteger(p_223555_1_, p_223555_2_);
+         if (ruleKey != null) {
+            WorldGameRuleChangeEvent event = new WorldGameRuleChangeEvent(p_223555_1_.getSource().getLevel().getWorld(), p_223555_1_.getSource().getBukkitSender(), org.bukkit.GameRule.getByName(ruleKey.toString()), String.valueOf(IntegerArgumentType.getInteger(p_223555_1_, p_223555_2_)));
+            Bukkit.getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+               return;
+            }
+            this.value = Integer.parseInt(event.getValue());
+         } else {
+            this.value = IntegerArgumentType.getInteger(p_223555_1_, p_223555_2_);
+         }
       }
+      // Paper end
 
       public int get() {
          return this.value;
@@ -286,7 +_,7 @@
          return Integer.toString(this.value);
       }
 
-      protected void deserialize(String p_223553_1_) {
+      public void deserialize(String p_223553_1_) {
          this.value = safeParse(p_223553_1_);
       }
 
@@ -405,19 +_,25 @@
 
       protected abstract void updateFromArgument(CommandContext<CommandSource> p_223555_1_, String p_223555_2_);
 
+      // Paper start
       public void setFromArgument(CommandContext<CommandSource> p_223554_1_, String p_223554_2_) {
          this.updateFromArgument(p_223554_1_, p_223554_2_);
          this.onChanged(p_223554_1_.getSource().getServer());
       }
-
-      protected void onChanged(@Nullable MinecraftServer p_223556_1_) {
+      // Paper end
+
+      public void setPaperRuleKey(GameRules.RuleKey<T> paperRuleKey) {
+         ruleKey = paperRuleKey;
+      }
+
+      public void onChanged(@Nullable MinecraftServer p_223556_1_) {
          if (p_223556_1_ != null) {
             this.type.callback.accept(p_223556_1_, this.getSelf());
          }
 
       }
 
-      protected abstract void deserialize(String p_223553_1_);
+      public abstract void deserialize(String p_223553_1_);
 
       public abstract String serialize();
 
