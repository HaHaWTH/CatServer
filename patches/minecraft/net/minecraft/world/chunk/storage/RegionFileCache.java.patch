--- a/net/minecraft/world/chunk/storage/RegionFileCache.java
+++ b/net/minecraft/world/chunk/storage/RegionFileCache.java
@@ -21,7 +_,11 @@
    }
 
    private RegionFile getRegionFile(ChunkPos p_219098_1_) throws IOException {
-      long i = ChunkPos.asLong(p_219098_1_.getRegionX(), p_219098_1_.getRegionZ());
+      return loadFile(p_219098_1_, false);
+   }
+
+   private RegionFile loadFile(ChunkPos pos, boolean existingOnly) throws IOException { // CraftBukkit
+      long i = ChunkPos.asLong(pos.getRegionX(), pos.getRegionZ());
       RegionFile regionfile = this.regionCache.getAndMoveToFirst(i);
       if (regionfile != null) {
          return regionfile;
@@ -34,7 +_,8 @@
             this.folder.mkdirs();
          }
 
-         File file1 = new File(this.folder, "r." + p_219098_1_.getRegionX() + "." + p_219098_1_.getRegionZ() + ".mca");
+         File file1 = new File(this.folder, "r." + pos.getRegionX() + "." + pos.getRegionZ() + ".mca");
+         if (existingOnly && !file1.exists()) return null; // CraftBukkit
          RegionFile regionfile1 = new RegionFile(file1, this.folder, this.sync);
          this.regionCache.putAndMoveToFirst(i, regionfile1);
          return regionfile1;
@@ -43,7 +_,12 @@
 
    @Nullable
    public CompoundNBT read(ChunkPos p_219099_1_) throws IOException {
-      RegionFile regionfile = this.getRegionFile(p_219099_1_);
+      // CraftBukkit start - SPIGOT-5680: There's no good reason to preemptively create files on read, save that for writing
+      RegionFile regionfile = this.loadFile(p_219099_1_, true);
+      if (regionfile == null) {
+         return null;
+      }
+      // CraftBukkit end
 
       Object object;
       try (DataInputStream datainputstream = regionfile.getChunkDataInputStream(p_219099_1_)) {
@@ -58,7 +_,7 @@
    }
 
    protected void write(ChunkPos p_219100_1_, CompoundNBT p_219100_2_) throws IOException {
-      RegionFile regionfile = this.getRegionFile(p_219100_1_);
+      RegionFile regionfile = this.loadFile(p_219100_1_, false); // CraftBukkit
 
       try (DataOutputStream dataoutputstream = regionfile.getChunkDataOutputStream(p_219100_1_)) {
          CompressedStreamTools.write(p_219100_2_, dataoutputstream);
