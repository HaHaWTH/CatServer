--- a/net/minecraft/world/storage/PlayerData.java
+++ b/net/minecraft/world/storage/PlayerData.java
@@ -2,8 +_,11 @@
 
 import com.mojang.datafixers.DataFixer;
 import java.io.File;
+import java.io.FileInputStream;
+import java.io.InputStream;
 import javax.annotation.Nullable;
 import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.nbt.CompoundNBT;
 import net.minecraft.nbt.CompressedStreamTools;
 import net.minecraft.nbt.NBTUtil;
@@ -11,6 +_,7 @@
 import net.minecraft.util.datafix.DefaultTypeReferences;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.v1_16_R3.entity.CraftPlayer;
 
 public class PlayerData {
    private static final Logger LOGGER = LogManager.getLogger();
@@ -24,6 +_,7 @@
    }
 
    public void save(PlayerEntity p_237335_1_) {
+      if (org.spigotmc.SpigotConfig.disablePlayerDataSaving) return; // Spigot
       try {
          CompoundNBT compoundnbt = p_237335_1_.saveWithoutId(new CompoundNBT());
          File file1 = File.createTempFile(p_237335_1_.getStringUUID() + "-", ".dat", this.playerDir);
@@ -31,6 +_,7 @@
          File file2 = new File(this.playerDir, p_237335_1_.getStringUUID() + ".dat");
          File file3 = new File(this.playerDir, p_237335_1_.getStringUUID() + ".dat_old");
          Util.safeReplaceFile(file2, file1, file3);
+         net.minecraftforge.event.ForgeEventFactory.firePlayerSavingEvent(p_237335_1_, playerDir, p_237335_1_.getStringUUID());
       } catch (Exception exception) {
          LOGGER.warn("Failed to save player data for {}", (Object)p_237335_1_.getName().getString());
       }
@@ -43,21 +_,64 @@
 
       try {
          File file1 = new File(this.playerDir, p_237336_1_.getStringUUID() + ".dat");
+         // Spigot Start
+         boolean usingWrongFile = false;
+         if ( !file1.exists() )
+         {
+            file1 = new File( this.playerDir, java.util.UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + p_237336_1_.getName() ).getBytes( "UTF-8" ) ).toString() + ".dat");
+            if ( file1.exists() )
+            {
+               usingWrongFile = true;
+               org.bukkit.Bukkit.getServer().getLogger().warning( "Using offline mode UUID file for player " + p_237336_1_.getName() + " as it is the only copy we can find." );
+            }
+         }
+         // Spigot End
          if (file1.exists() && file1.isFile()) {
             compoundnbt = CompressedStreamTools.readCompressed(file1);
          }
+         // Spigot Start
+         if ( usingWrongFile )
+         {
+            file1.renameTo( new File( file1.getPath() + ".offline-read" ) );
+         }
+         // Spigot End
       } catch (Exception exception) {
          LOGGER.warn("Failed to load player data for {}", (Object)p_237336_1_.getName().getString());
       }
 
       if (compoundnbt != null) {
+         // CraftBukkit start
+         if (p_237336_1_ instanceof ServerPlayerEntity) {
+            CraftPlayer cplayer = (CraftPlayer)p_237336_1_.getBukkitEntity();
+            long modified = new File(this.playerDir, String.valueOf(p_237336_1_.getUUID().toString()) + ".dat").lastModified();
+            if (modified < cplayer.getFirstPlayed()) {
+               cplayer.setFirstPlayed(modified);
+            }
+         }
+         // CraftBukkit end
          int i = compoundnbt.contains("DataVersion", 3) ? compoundnbt.getInt("DataVersion") : -1;
          p_237336_1_.load(NBTUtil.update(this.fixerUpper, DefaultTypeReferences.PLAYER, compoundnbt, i));
       }
+      net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_237336_1_, playerDir, p_237336_1_.getStringUUID());
 
       return compoundnbt;
    }
 
+
+   // CraftBukkit start
+   public CompoundNBT getPlayerData(String s) {
+      try {
+         File file1 = new File(this.playerDir, s + ".dat");
+         if (file1.exists()) {
+            return CompressedStreamTools.readCompressed((InputStream) (new FileInputStream(file1)));
+         }
+      } catch (Exception exception) {
+         LOGGER.warn("Failed to load player data for " + s);
+      }
+      return null;
+   }
+   // CraftBukkit end
+
    public String[] getSeenPlayers() {
       String[] astring = this.playerDir.list();
       if (astring == null) {
@@ -71,5 +_,9 @@
       }
 
       return astring;
+   }
+
+   public File getPlayerDataFolder() {
+      return playerDir;
    }
 }
