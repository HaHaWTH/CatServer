--- a/net/minecraft/world/raid/Raid.java
+++ b/net/minecraft/world/raid/Raid.java
@@ -65,21 +_,21 @@
    private static final ITextComponent RAID_BAR_DEFEAT_COMPONENT = RAID_NAME_COMPONENT.copy().append(" - ").append(DEFEAT);
    private final Map<Integer, AbstractRaiderEntity> groupToLeaderMap = Maps.newHashMap();
    private final Map<Integer, Set<AbstractRaiderEntity>> groupRaiderMap = Maps.newHashMap();
-   private final Set<UUID> heroesOfTheVillage = Sets.newHashSet();
-   private long ticksActive;
+   public final Set<UUID> heroesOfTheVillage = Sets.newHashSet();
+   public long ticksActive;
    private BlockPos center;
    private final ServerWorld level;
    private boolean started;
    private final int id;
    private float totalHealth;
-   private int badOmenLevel;
+   public int badOmenLevel;
    private boolean active;
    private int groupsSpawned;
    private final ServerBossInfo raidEvent = new ServerBossInfo(RAID_NAME_COMPONENT, BossInfo.Color.RED, BossInfo.Overlay.NOTCHED_10);
    private int postRaidTicks;
    private int raidCooldownTicks;
    private final Random random = new Random();
-   private final int numGroups;
+   public final int numGroups;
    private Raid.Status status;
    private int celebrationTicks;
    private Optional<BlockPos> waveSpawnPos = Optional.empty();
@@ -144,6 +_,12 @@
       return this.status == Raid.Status.LOSS;
    }
 
+   // CraftBukkit start
+   public boolean isInProgress() {
+      return this.status == Status.ONGOING;
+   }
+   // CraftBukkit end
+
    public World getLevel() {
       return this.level;
    }
@@ -210,6 +_,7 @@
             boolean flag = this.active;
             this.active = this.level.hasChunkAt(this.center);
             if (this.level.getDifficulty() == Difficulty.PEACEFUL) {
+               org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.PEACE); // CraftBukkit
                this.stop();
                return;
             }
@@ -229,13 +_,16 @@
             if (!this.level.isVillage(this.center)) {
                if (this.groupsSpawned > 0) {
                   this.status = Raid.Status.LOSS;
+                  org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidFinishEvent(this, new java.util.ArrayList<>()); // CraftBukkit
                } else {
+                  org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.NOT_IN_VILLAGE); // CraftBukkit
                   this.stop();
                }
             }
 
             ++this.ticksActive;
             if (this.ticksActive >= 48000L) {
+               org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.TIMEOUT); // CraftBukkit
                this.stop();
                return;
             }
@@ -306,6 +_,7 @@
                }
 
                if (k > 3) {
+                  org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.UNSPAWNABLE);  // CraftBukkit
                   this.stop();
                   break;
                }
@@ -316,7 +_,7 @@
                   ++this.postRaidTicks;
                } else {
                   this.status = Raid.Status.VICTORY;
-
+                  List<org.bukkit.entity.Player> winners = new java.util.ArrayList<>(); // CraftBukkit
                   for(UUID uuid : this.heroesOfTheVillage) {
                      Entity entity = this.level.getEntity(uuid);
                      if (entity instanceof LivingEntity && !entity.isSpectator()) {
@@ -326,9 +_,11 @@
                            ServerPlayerEntity serverplayerentity = (ServerPlayerEntity)livingentity;
                            serverplayerentity.awardStat(Stats.RAID_WIN);
                            CriteriaTriggers.RAID_WIN.trigger(serverplayerentity);
+                           winners.add(serverplayerentity.getBukkitEntity()); // CraftBukkit
                         }
                      }
                   }
+                  org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidFinishEvent(this, winners); // CraftBukkit
                }
             }
 
@@ -336,6 +_,7 @@
          } else if (this.isOver()) {
             ++this.celebrationTicks;
             if (this.celebrationTicks >= 600) {
+               org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidStopEvent(this, org.bukkit.event.raid.RaidStopEvent.Reason.FINISHED); // CraftBukkit
                this.stop();
                return;
             }
@@ -457,6 +_,10 @@
       DifficultyInstance difficultyinstance = this.level.getCurrentDifficultyAt(p_221294_1_);
       boolean flag1 = this.shouldSpawnBonusGroup();
 
+      // CraftBukkit start
+      AbstractRaiderEntity leader = null;
+      List<AbstractRaiderEntity> raiders = new java.util.ArrayList<>();
+      // CraftBukkit end
       for(Raid.WaveMember raid$wavemember : Raid.WaveMember.VALUES) {
          int j = this.getDefaultNumSpawns(raid$wavemember, i, flag1) + this.getPotentialBonusSpawns(raid$wavemember, this.random, i, difficultyinstance, flag1);
          int k = 0;
@@ -467,9 +_,11 @@
                abstractraiderentity.setPatrolLeader(true);
                this.setLeader(i, abstractraiderentity);
                flag = true;
+               leader = abstractraiderentity; // CraftBukkit
             }
 
             this.joinRaid(i, abstractraiderentity, p_221294_1_, false);
+            raiders.add(abstractraiderentity); // CraftBukkit
             if (raid$wavemember.entityType == EntityType.RAVAGER) {
                AbstractRaiderEntity abstractraiderentity1 = null;
                if (i == this.getNumGroups(Difficulty.NORMAL)) {
@@ -487,6 +_,7 @@
                   this.joinRaid(i, abstractraiderentity1, p_221294_1_, false);
                   abstractraiderentity1.moveTo(p_221294_1_, 0.0F, 0.0F);
                   abstractraiderentity1.startRiding(abstractraiderentity);
+                  raiders.add(abstractraiderentity); // CraftBukkit
                }
             }
          }
@@ -496,6 +_,7 @@
       ++this.groupsSpawned;
       this.updateBossbar();
       this.setDirty();
+      org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callRaidSpawnWaveEvent(this, leader, raiders); // CraftBukkit
    }
 
    public void joinRaid(int p_221317_1_, AbstractRaiderEntity p_221317_2_, @Nullable BlockPos p_221317_3_, boolean p_221317_4_) {
@@ -510,7 +_,7 @@
             p_221317_2_.finalizeSpawn(this.level, this.level.getCurrentDifficultyAt(p_221317_3_), SpawnReason.EVENT, (ILivingEntityData)null, (CompoundNBT)null);
             p_221317_2_.applyRaidBuffs(p_221317_1_, false);
             p_221317_2_.setOnGround(true);
-            this.level.addFreshEntityWithPassengers(p_221317_2_);
+            this.level.addAllEntities(p_221317_2_, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.RAID); // CraftBukkit
          }
       }
 
@@ -769,7 +_,13 @@
       }
    }
 
-   static enum WaveMember {
+   // CraftBukkit start - a method to get all raiders
+   public java.util.Collection<AbstractRaiderEntity> getRaiders() {
+      return this.groupRaiderMap.values().stream().flatMap(Set::stream).collect(java.util.stream.Collectors.toSet());
+   }
+   // CraftBukkit end
+
+   public static enum WaveMember implements net.minecraftforge.common.IExtensibleEnum {
       VINDICATOR(EntityType.VINDICATOR, new int[]{0, 0, 2, 0, 1, 4, 2, 5}),
       EVOKER(EntityType.EVOKER, new int[]{0, 0, 0, 0, 0, 1, 1, 2}),
       PILLAGER(EntityType.PILLAGER, new int[]{0, 4, 3, 3, 4, 4, 4, 2}),
@@ -783,6 +_,20 @@
       private WaveMember(EntityType<? extends AbstractRaiderEntity> p_i50602_3_, int[] p_i50602_4_) {
          this.entityType = p_i50602_3_;
          this.spawnsPerWaveBeforeBonus = p_i50602_4_;
+      }
+      
+      /**
+       * The waveCountsIn integer decides how many entities of the EntityType defined in typeIn will spawn in each wave.
+       * For example, one ravager will always spawn in wave 3.
+       */
+      public static WaveMember create(String name, EntityType<? extends AbstractRaiderEntity> typeIn, int[] waveCountsIn) {
+         throw new IllegalStateException("Enum not extended");
+      }
+      
+      @Override
+      @Deprecated
+      public void init() {
+         VALUES = values();
       }
    }
 }
