--- a/net/minecraft/world/gen/NoiseChunkGenerator.java
+++ b/net/minecraft/world/gen/NoiseChunkGenerator.java
@@ -215,6 +_,12 @@
                   f7 = f5;
                }
 
+               // CraftBukkit start - fix MC-54738
+               if (f6 < -1.8F) {
+                  f6 = -1.8F;
+               }
+               // CraftBukkit end
+
                float f8 = f4 > f3 ? 0.5F : 1.0F;
                float f9 = f8 * BIOME_WEIGHTS[k + 2 + (l + 2) * 5] / (f6 + 2.0F);
                f += f7 * f9;
@@ -525,8 +_,8 @@
                         objectlistiterator1.back(objectlist1.size());
                         BlockState blockstate = this.generateBaseState(d18, i2);
                         if (blockstate != AIR) {
-                           if (blockstate.getLightEmission() != 0) {
-                              blockpos$mutable.set(i3, i2, l3);
+                           blockpos$mutable.set(i3, i2, l3);
+                           if (blockstate.getLightValue(chunkprimer, blockpos$mutable) != 0) {
                               chunkprimer.addLight(blockpos$mutable);
                            }
 
@@ -582,6 +_,9 @@
    }
 
    public List<MobSpawnInfo.Spawners> getMobsAt(Biome p_230353_1_, StructureManager p_230353_2_, EntityClassification p_230353_3_, BlockPos p_230353_4_) {
+      List<MobSpawnInfo.Spawners> spawns = net.minecraftforge.common.world.StructureSpawnManager.getStructureSpawns(p_230353_2_, p_230353_3_, p_230353_4_);
+      if (spawns != null) return spawns;
+      if (false) {//Forge: We handle these hardcoded cases above in StructureSpawnManager#getStructureSpawns, but allow for insideOnly to be changed and allow for creatures to be spawned in ones other than just the witch hut
       if (p_230353_2_.getStructureAt(p_230353_4_, true, Structure.SWAMP_HUT).isValid()) {
          if (p_230353_3_ == EntityClassification.MONSTER) {
             return Structure.SWAMP_HUT.getSpecialEnemies();
@@ -604,6 +_,7 @@
          if (p_230353_2_.getStructureAt(p_230353_4_, true, Structure.NETHER_BRIDGE).isValid()) {
             return Structure.NETHER_BRIDGE.getSpecialEnemies();
          }
+      }
       }
 
       return super.getMobsAt(p_230353_1_, p_230353_2_, p_230353_3_, p_230353_4_);
