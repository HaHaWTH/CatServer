--- a/net/minecraft/world/IBlockReader.java
+++ b/net/minecraft/world/IBlockReader.java
@@ -25,8 +_,12 @@
 
    FluidState getFluidState(BlockPos p_204610_1_);
 
+   default boolean isPosLoaded(BlockPos pos) {
+      return false;
+   }
+
    default int getLightEmission(BlockPos p_217298_1_) {
-      return this.getBlockState(p_217298_1_).getLightEmission();
+      return this.getBlockState(p_217298_1_).getLightValue(this, p_217298_1_);
    }
 
    default int getMaxLightLevel() {
@@ -41,19 +_,25 @@
       return BlockPos.betweenClosedStream(p_234853_1_).map(this::getBlockState);
    }
 
+   // CraftBukkit start
+   default BlockRayTraceResult rayTraceBlock(RayTraceContext p_217297_1_, BlockPos p_217297_2_) {
+      BlockState blockstate = this.getBlockState(p_217297_2_);
+      FluidState fluidstate = this.getFluidState(p_217297_2_);
+      Vector3d vector3d = p_217297_1_.getFrom();
+      Vector3d vector3d1 = p_217297_1_.getTo();
+      VoxelShape voxelshape = p_217297_1_.getBlockShape(blockstate, this, p_217297_2_);
+      BlockRayTraceResult blockraytraceresult = this.clipWithInteractionOverride(vector3d, vector3d1, p_217297_2_, voxelshape, blockstate);
+      VoxelShape voxelshape1 = p_217297_1_.getFluidShape(fluidstate, this, p_217297_2_);
+      BlockRayTraceResult blockraytraceresult1 = voxelshape1.clip(vector3d, vector3d1, p_217297_2_);
+      double d0 = blockraytraceresult == null ? Double.MAX_VALUE : p_217297_1_.getFrom().distanceToSqr(blockraytraceresult.getLocation());
+      double d1 = blockraytraceresult1 == null ? Double.MAX_VALUE : p_217297_1_.getFrom().distanceToSqr(blockraytraceresult1.getLocation());
+      return d0 <= d1 ? blockraytraceresult : blockraytraceresult1;
+   }
+   // CraftBukkit end
+
    default BlockRayTraceResult clip(RayTraceContext p_217299_1_) {
       return traverseBlocks(p_217299_1_, (p_217297_1_, p_217297_2_) -> {
-         BlockState blockstate = this.getBlockState(p_217297_2_);
-         FluidState fluidstate = this.getFluidState(p_217297_2_);
-         Vector3d vector3d = p_217297_1_.getFrom();
-         Vector3d vector3d1 = p_217297_1_.getTo();
-         VoxelShape voxelshape = p_217297_1_.getBlockShape(blockstate, this, p_217297_2_);
-         BlockRayTraceResult blockraytraceresult = this.clipWithInteractionOverride(vector3d, vector3d1, p_217297_2_, voxelshape, blockstate);
-         VoxelShape voxelshape1 = p_217297_1_.getFluidShape(fluidstate, this, p_217297_2_);
-         BlockRayTraceResult blockraytraceresult1 = voxelshape1.clip(vector3d, vector3d1, p_217297_2_);
-         double d0 = blockraytraceresult == null ? Double.MAX_VALUE : p_217297_1_.getFrom().distanceToSqr(blockraytraceresult.getLocation());
-         double d1 = blockraytraceresult1 == null ? Double.MAX_VALUE : p_217297_1_.getFrom().distanceToSqr(blockraytraceresult1.getLocation());
-         return d0 <= d1 ? blockraytraceresult : blockraytraceresult1;
+         return this.rayTraceBlock(p_217299_1_, p_217297_2_); // CraftBukkit - moved into separate method
       }, (p_217302_0_) -> {
          Vector3d vector3d = p_217302_0_.getFrom().subtract(p_217302_0_.getTo());
          return BlockRayTraceResult.miss(p_217302_0_.getTo(), Direction.getNearest(vector3d.x, vector3d.y, vector3d.z), new BlockPos(p_217302_0_.getTo()));
