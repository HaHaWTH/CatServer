--- a/net/minecraft/util/FoodStats.java
+++ b/net/minecraft/util/FoodStats.java
@@ -1,25 +_,42 @@
 package net.minecraft.util;
 
 import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.entity.player.ServerPlayerEntity;
 import net.minecraft.item.Food;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.CompoundNBT;
+import net.minecraft.network.play.server.SUpdateHealthPacket;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.GameRules;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 
 public class FoodStats {
-   private int foodLevel = 20;
-   private float saturationLevel;
-   private float exhaustionLevel;
+   public int foodLevel = 20;
+   public float saturationLevel = 5.0F;
+   public float exhaustionLevel;
    private int tickTimer;
    private int lastFoodLevel = 20;
+   // CraftBukkit start
+   private PlayerEntity entityhuman;
+   public int saturatedRegenRate = 10;
+   public int unsaturatedRegenRate = 80;
+   public int starvationRate = 80;
+   // CraftBukkit end
 
    public FoodStats() {
-      this.saturationLevel = 5.0F;
-   }
+      //throw new AssertionError("Whoopsie, we missed the bukkit.");
+      this.entityhuman = null;
+   }
+   // CraftBukkit start - throw an error
+
+   // CraftBukkit start - added EntityHuman constructor
+   public FoodStats(PlayerEntity entityhuman) {
+      org.apache.commons.lang.Validate.notNull(entityhuman);
+      this.entityhuman = entityhuman;
+   }
+   // CraftBukkit end
 
    public void eat(int p_75122_1_, float p_75122_2_) {
       this.foodLevel = Math.min(p_75122_1_ + this.foodLevel, 20);
@@ -29,7 +_,22 @@
    public void eat(Item p_221410_1_, ItemStack p_221410_2_) {
       if (p_221410_1_.isEdible()) {
          Food food = p_221410_1_.getFoodProperties();
-         this.eat(food.getNutrition(), food.getSaturationModifier());
+         // CraftBukkit start
+         if (entityhuman == null)
+         {
+            this.eat(food.getNutrition(),food.getSaturationModifier());
+         }
+         else {
+            int oldFoodLevel = foodLevel;
+            org.bukkit.event.entity.FoodLevelChangeEvent event = org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callFoodLevelChangeEvent(entityhuman, food.getNutrition() + oldFoodLevel, p_221410_2_);
+
+            if (!event.isCancelled()) {
+               this.eat(event.getFoodLevel() - oldFoodLevel, food.getSaturationModifier());
+            }
+
+            ((ServerPlayerEntity) entityhuman).getBukkitEntity().sendHealthUpdate();
+            // CraftBukkit end
+         }
       }
 
    }
@@ -42,7 +_,17 @@
          if (this.saturationLevel > 0.0F) {
             this.saturationLevel = Math.max(this.saturationLevel - 1.0F, 0.0F);
          } else if (difficulty != Difficulty.PEACEFUL) {
-            this.foodLevel = Math.max(this.foodLevel - 1, 0);
+            // CraftBukkit start
+            if (entityhuman == null) {
+               this.foodLevel = Math.max(this.foodLevel - 1, 0);
+            } else {
+               org.bukkit.event.entity.FoodLevelChangeEvent event = org.bukkit.craftbukkit.v1_16_R3.event.CraftEventFactory.callFoodLevelChangeEvent(entityhuman, Math.max(this.foodLevel - 1, 0));
+                  if (!event.isCancelled()) {
+                     this.foodLevel = event.getFoodLevel();
+                  }
+                  ((ServerPlayerEntity) entityhuman).connection.send(new SUpdateHealthPacket(((ServerPlayerEntity) entityhuman).getBukkitEntity().getScaledHealth(), this.foodLevel, this.saturationLevel));
+               // CraftBukkit end
+            }
          }
       }
 
@@ -51,15 +_,15 @@
          ++this.tickTimer;
          if (this.tickTimer >= 10) {
             float f = Math.min(this.saturationLevel, 6.0F);
-            p_75118_1_.heal(f / 6.0F);
-            this.addExhaustion(f);
+            p_75118_1_.heal(f / 6.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.SATIATED); // CraftBukkit -  added RegainReason // CatServer
+            p_75118_1_.causeFoodExhaustion(f, org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN);
             this.tickTimer = 0;
          }
       } else if (flag && this.foodLevel >= 18 && p_75118_1_.isHurt()) {
          ++this.tickTimer;
          if (this.tickTimer >= 80) {
-            p_75118_1_.heal(1.0F);
-            this.addExhaustion(6.0F);
+            p_75118_1_.heal(1.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.SATIATED); // CraftBukkit - added RegainReason // CatServer
+            p_75118_1_.causeFoodExhaustion(entityhuman == null ? 6.0F : entityhuman.level.spigotConfig.regenExhaustion, org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN); // Spigot - Change to use configurable value
             this.tickTimer = 0;
          }
       } else if (this.foodLevel <= 0) {
